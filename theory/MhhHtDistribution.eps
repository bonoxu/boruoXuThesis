%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: MhhHtDistribution-eps-converted-to.pdf
%%Creator: Adobe Acrobat 10.1.16
%%For: Administrator
%%CreationDate: 2017/3/30, 19:50:28
%%BoundingBox: 0 0 478 322
%%HiResBoundingBox: 0 0 477.5546 321.5116
%%CropBox: 0 0 477.5546 321.5116
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1025 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   pdf:Producer="MiKTeX GPL Ghostscript  9.0"
   xmp:ModifyDate="2017-03-30T19:46:54+01:00"
   xmp:CreateDate="2017-03-30T19:46:54+01:00"
   xmp:CreatorTool="Adobe Acrobat 10.1.16"
   xmpMM:DocumentID="be53bbc4-17d4-11e7-0000-97f668daea60"
   xmpMM:InstanceID="be53bbc4-17d4-11e7-0000-97f668daea60"
   dc:format="application/pdf">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Pages from 1309.7038.pdf</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Administrator</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -321.512 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 321.512 li
477.555 321.512 li
477.555 0 li
cp
clp
.5379 lw
2 lc
0 lj
3.25 ml
[] 0 dsh
true sadj
39.7328 129.741 mo
55.0048 129.741 li
55.0048 101.926 li
62.6408 101.926 li
62.6408 25.5413 li
70.2768 25.5413 li
70.2768 23.8992 li
77.9128 23.8992 li
77.9128 53.3563 li
85.5488 53.3563 li
85.5488 78.3152 li
93.1848 78.3152 li
93.1848 97.2302 li
100.821 97.2302 li
100.821 108.724 li
108.457 108.724 li
108.457 115.029 li
116.093 115.029 li
116.093 120.94 li
123.729 120.94 li
123.729 123.83 li
131.365 123.83 li
131.365 125.932 li
139.001 125.932 li
139.001 127.344 li
146.637 127.344 li
146.637 127.541 li
154.273 127.541 li
154.273 128.69 li
161.909 128.69 li
161.909 128.723 li
169.545 128.723 li
169.545 129.38 li
177.181 129.38 li
177.181 129.347 li
184.817 129.347 li
184.817 129.512 li
192.453 129.512 li
192.453 129.643 li
200.089 129.643 li
200.089 129.577 li
215.362 129.577 li
215.362 129.643 li
222.998 129.643 li
false sop
/1 
[/DeviceCMYK] /CSA add_res
.882813 .769531 0 0 cmyk
@
39.7328 129.741 mo
55.0048 129.741 li
55.0048 111.128 li
62.6408 111.128 li
62.6408 51.0472 li
70.2768 51.0472 li
70.2768 43.3593 li
77.9128 43.3593 li
77.9128 63.2632 li
85.5488 63.2632 li
85.5488 79.1923 li
93.1848 79.1923 li
93.1848 89.9603 li
100.821 89.9603 li
100.821 101.386 li
108.457 101.386 li
108.457 106.81 li
116.093 106.81 li
116.093 112.47 li
123.729 112.47 li
123.729 115.551 li
131.365 115.551 li
131.365 117.999 li
139.001 117.999 li
139.001 121.422 li
146.637 121.422 li
146.637 123.949 li
154.273 123.949 li
154.273 125.792 li
161.909 125.792 li
161.909 126.793 li
169.545 126.793 li
169.545 128.214 li
177.181 128.214 li
177.181 128.557 li
184.817 128.557 li
184.817 129.057 li
200.089 129.057 li
200.089 129.399 li
207.726 129.399 li
207.726 129.636 li
222.998 129.636 li
0 0 0 1 cmyk
@
39.7328 129.741 mo
55.0048 129.741 li
55.0048 117.186 li
62.6408 117.186 li
62.6408 79.3373 li
70.2768 79.3373 li
70.2768 69.7733 li
77.9128 69.7733 li
77.9128 73.4933 li
85.5488 73.4933 li
85.5488 79.0742 li
93.1848 79.0742 li
93.1848 88.0912 li
100.821 88.0912 li
100.821 92.9032 li
108.457 92.9032 li
108.457 96.5632 li
116.093 96.5632 li
116.093 102.366 li
123.729 102.366 li
123.729 104.913 li
131.365 104.913 li
131.365 110.17 li
139.001 110.17 li
139.001 115.568 li
146.637 115.568 li
146.637 119.126 li
154.273 119.126 li
154.273 122.361 li
161.909 122.361 li
161.909 124.201 li
169.545 124.201 li
169.545 126.425 li
177.181 126.425 li
177.181 127.275 li
184.817 127.275 li
184.817 128.063 li
192.453 128.063 li
192.453 128.528 li
200.089 128.528 li
200.089 129.094 li
207.726 129.094 li
207.726 129.479 li
215.362 129.479 li
215.362 129.499 li
222.998 129.499 li
222.998 129.6 li
0 .994141 1 0 cmyk
@
1.90919 lw
93.1848 129.741 mo
93.1848 19.1012 li
0 0 0 .595703 cmyk
@
.10758 lw
226.816 133.412 mo
35.9148 133.412 li
1 /0 /CSD get_res sepcs
1 sep
@
35.9148 133.412 mo
35.9148 15.4293 li
@
35.9148 15.4293 mo
226.816 15.4293 li
@
226.816 15.4293 mo
226.816 133.412 li
@
0 lc
39.7328 133.412 mo
39.7328 131.978 li
@
gsave
37.1698 134.431 mo
37.1698 143.754 li
42.1898 143.754 li
42.1898 134.431 li
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: DMSAAA+Times-Roman Initial
ct_T42Dict begin
-0.203 -0.426 1.699 1.27
 256 array 0 1 255 {1 index exch /.notdef put} for  /DMSAAA+Times-Roman
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
742000000000000001240000041e6670676d000000000000054400000588
676c79660000000000001294000010c868656164d7ea84f200000acc0000
0036686865610000000000000b0400000024686d74780000000000000b28
000000406c6f63610000000000000b68000000226d617870000000000000
0b8c000000206e616d65419980d100000bac000000247072657000000000
00000bd0000006c367646972000000000000000000000000000100000190
000500000000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff000000000000000000000000000100000000000005740002054b001d
054b0018039700130000ffe30000ffed0000ffeafe420000054b001dfebd
ffd6031e000000b4000000b402fe3f3c0026001c007d00980003007d00de
00350017002800e3013e000300b400d000df004c005a00c4004a00ab0147
008a004e0039006d013d002401d200360045009e00be00170079006f00d0
00460091002100b400baffc20017003600ab00b800f60009001d003d0058
005a008c0099ffc400a000e800f5ffa1ffea0033008500b800d5ffe2002f
0080008c0002001a00250045006a0070012d0274ff87003e004e009800ba
00de0116ff3e00150034003c004400670068006d006e0084009800bd00d5
00d7011c0000002d0030003d00460057008b0093009700b000c6011f017b
019d0409ff68ff6a0056005a006a006d009200c400d000e700f1011101bf
01c7ff1cffb4ffff0002002300380042006d0092009c009d00a100a200b4
00ba00c700c700e400ed0153015703230334ff0dff32fffbffff000f001c
0040004b005c006d006d007c0085009800c500cb00cb00df011f01280136
015501700180018a01c7024203130407054eff82000000080026003d003d
004f006e0073008b00900095009e00a800ad00ad00c300d300e301090123
0241028002f40311034004510576ff7fffafffbeffcf00030005000e0039
004b004b004c00740078008800890092009200b600c200d800df00f000fd
010701100117011f01b401dd01eb020002110229028002ca036f038a03af
0400049c04dd053e0587fea6fee4ff67ff95ffcbfff80002000200070025
00280037003700380039003f00510053005900640068006b007d00980099
00af00b100b900d000d500da00dd00fd00fe011e013601370142015a017a
01a301c401cc01f702020210021f022902290287029f029f02c002cc02d5
031a031d03280331035e0396039f03a8049305640571059405b106eb0788
fe63fe64fe76fe7cfebcff4bff97ffacffc0000700210028002d00300048
0049004c0051005400560066007a007c0085008a008c009900af00b300b5
00b500b600b900bb00bc00cc00d000e100f400f600fc00fd010901100117
0118011f01300139013c013e0142014301440149014b014f015401550157
01580161016a017d017e0184019c019c019d01a101a301b401b401b901bb
01cb01d001d701d701e401ec01ec01f7020502070218022302260240024b
024b025702570261026302680269026d028d028d02a602af02b402b80300
033e03460361036103b003c003d503d703df03f9041a0474047b04c104cc
04da04e404f204f6051005300555055606180639067606a406b3076b07ad
07da00b200d500ae00bb00000000000000000000000000630079029602fa
007e0247009100c8000002ca024800da007d01b301a4002d00a5009c0034
003400dc00dc0040004000310031000a000a00820030002a002a00004027
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b09051582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b94000
00000a2d2c00b9000040000b2d2c2045b00043617d6818b0004360442d2c
45b01a234445b01923442d2c2045b00325456164b050515845441b212159
2d2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c20b00325
52582359212d2c69b04061b0008b0c6423648bb8400062600c642364615c
58b0036159b002602d2c45b0112bb0172344b0177ae5182d2c45b0112bb0
1723442d2c45b0112bb017458cb0172344b0177ae5182d2cb00225466165
8a46b040608b482d2cb0022546608a46b040618c482d2c4b53205c58b002
855958b00185592d2c20b0032545b019234445b01a23444565234520b003
25606a20b009234223688a6a606120b0005258b21a401a4523614459b000
5058b219401945236144592d2cb9187e3b210b2d2cb92d412d410b2d2cb9
3b21187e0b2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d
2c4b525845441b2121592d2c0120b003252349b04060b0206320b0005258
23b002253823b002256538008a63381b212121212159012d2c4569b00943
608a103a2d2c01b005251023208af500b0016023edec2d2c01b005251023
208af500b0016123edec2d2c01b0062510f500edec2d2c20b00160011020
3c003c2d2c20b001610110203c003c2db800272c4bb800095058b101018e
59b801ff85b800441db9000900035f5e2db800282c2020456944b001602d
b800292cb800282a212db8002a2c2046b003254652582359208a208a4964
8a204620686164b004254620686164525823658a592f20b00053586920b0
00545821b040591b6920b000545821b0406559593a2db8002b2c2046b004
25465258238a592046206a6164b0042546206a61645258238a592ffd2db8
002c2c4b20b0032650585158b080441bb04044591b21212045b0c05058b0
c0441b2159592db8002d2c2020456944b001602020457d691844b001602d
b8002e2cb8002d2a2db8002f2c4b20b003265358b0801bb040598a8a20b0
032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a23
5920b0032653582321b801408a8a1b8a235920b80003265358b0032545b8
018050582321b8018023211bb003254523212321591b2159442db800302c
4b535845441b2121592db800312c4bb800095058b101018e59b801ff85b8
00441db9000900035f5e2db800322c2020456944b001602db800332cb800
322a212db800342c2046b003254652582359208a208a49648a2046206861
64b004254620686164525823658a592f20b00053586920b000545821b040
591b6920b000545821b0406559593a2db800352c2046b00425465258238a
592046206a6164b0042546206a61645258238a592ffd2db800362c4b20b0
032650585158b080441bb04044591b21212045b0c05058b0c0441b215959
2db800372c2020456944b001602020457d691844b001602db800382cb800
372a2db800392c4b20b003265358b0801bb040598a8a20b0032653582321
b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b0032653
582321b801408a8a1b8a235920b80003265358b0032545b8018050582321
b8018023211bb003254523212321591b2159442db8003a2c4b535845441b
2121592d0001000000000000b1b0afba5f0f3cf50111080000000000a33d
5b0000000000c88fde35fe60fc930d9a0a2c000000090001000000000000
000100000600fe0000000dc5fe60fe600d9a000100000000000000000000
00000000001005c70021020000dc04000012040000e30400003d04000059
040000410400002805c7003105c700210400000704000031038d00280400
0012023900280400002100000036006000de013c01ca025c030a0360040e
04c40546060c06ac075007ba086400000001000000100071000600960009
000200100010003b000007e806c300040001000000010012000100000000
0006001200004745414c414b2b54696d65732d526f6d616eb800312bb800
272b400f09cf54010f54013fd029019f540140410d01fb0001003001fb00
01002001fb0001001001fb0001000001fb400b01002001900701900601f0
414f0204000100ef0203000100c00201000100b001ff00b0020100bf0208
000300af020100af02080002009f0202009f02080002007f0200007f0202
007f0208008f0200008f020200800205008f02080007006f0200006f0202
006f0205006f02080004005f020200500203005f02080003004f0202004f
0204004f0208000300300202003f0204003002080003002f0201002f0204
002f02080003001f0208b2010840ba01e5014d0152b50f1fc2710e1fbc01
4b014d0062001f0131b2864f1fbe01a60020000d018f0020000d0182400e
200dde200dda200d8f200d7f200dbe018b0050000d016c0050000d010140
0e500dd8500d43500d3f500d3a500dbb013b0028000d01034014280dbd28
0db8280da7280d7c280d76280d2d280dbe01b1004a000d01a7004a000d01
9440204a0df74a0dc84a0d984a0d854a0d7a4a0d664a0d214a0d621c0d24
1c0d1b1c0db8017eb60f920f900f0009b8017eb4900d92900db801f5b331
2f1f41b801f3b5331f2b2c361fb80189b2542c1fb80183b254ab1f411501
8100290401001f018000290201001f017c00440201001f01790130020100
1f017801300401001f0177b22f291fb80173b23e9e1fb80171b23ee41fbc
016b002e0401001f016ab233e41fb80138b2545e1f410901330029040100
1f013200440801001f012db23e931fb8012ab22ccd1f41110127002e0125
001f012400330801001f012300330401001f012200330401001f0106b254
261fb80105b4542c1fff29b80101b21ffe88b80201b61ffb2f521ff62eb8
0401b21ff52eb80801b21fe129b802abb21fdd2fb802ab40171fdb2f5e1f
d93e4a1fc454261fc354e41fbf2f6c1fba2cb80401b21fa944bc0401001f
00a80130019a400b1fa52f931fa42f891fa23eb80401b21fa033b80801b2
1f9654b80801b21f9529b80401b61f8954261f732eb80156b21f7233b802
ab400b1f6b2f6c1f6a2c4b1f632eb8019a400f1f2e2c371f532fbb1f512f
721f4f2cb80401b21f4944b80401b21f482fba0401001f01f3400d411d1f
412f1d1f3d3ecd1f3b44b80201b21f392eb8019ab21f343eb80401b21f32
2eb80201b61f313e4c1f2b2eb80404b61f2a54311f2233b80201402d1f55
67075f075507370735073007260725071e071d071408120810080e080c08
0a080808060804080208000814b8ffe0402b000001001406100000010006
04000001000410000001001002000001000200000001000002010802004a
00b801ff85b0018d16763f183f123e113946443e113946443e113946443e
113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b1db0964b5358b0aa1d59b0324b5358b0ff1d594bb03553
205c58b901e701e54544b901e601e545445958b9012101e7455258b901e7
0121445959184bb04c5058b801e64569b801e7456961b0405258b901e601
e645b040614459594bb05653205c58b9002901e64544b9005401e6454459
58b902360029455258b9002902364459594bb08953205c58b9002f01e745
44b9004401e745445958b902e4002f455258b9002f02e44459594bb0cd53
205c58b188294544b1292945445958b9052e0088455258b90088052e4459
594bb8020153205c58b90130002f4544b12f2f45445958b90ab001304552
58b901300ab04459594bb01d53205c58b133334544b13e3345445958b132
33455258b133324459594bb02f53205c58b133334544b12c3345445958b1
5233455258b133524459594bb05b53205c58b133334544b12e3345445958
b1a033455258b133a04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2bb35b9b819c456523456023456560234560b08b766818b0806220
20b1819b4565234520b003266062636820b003266165b09b236544b08123
4420b15b9c4565234520b003266062636820b003266165b09c236544b05b
2344b1009c455458b19c406544b25b405b4523614459b3868d7145456523
456023456560234560b089766818b080622020b1718d4565234520b00326
6062636820b003266165b08d236544b071234420b186454565234520b003
266062636820b003266165b045236544b0862344b10045455458b1454065
44b286408645236144592b2b2b2b45695342737373737373737373737373
73737373737373737475755e73735e0000>
[4297 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 192 2 <00020012ffed03b10560000e001e00924022ac01eb0ce51403c500d600e5
000331003505390d034c0806a01e050ea0160d028812b80208b3200a881a
b80207b1201f2fccf4ed10f6ed003fed3fed313043794038001d0c261825
142608251c26102504260d170a35000015023501071d0a3500050f023501
0b190e350001130e3500091b06350103110635012b2b2b2b012b2b2b2b2b
2b2b2b2b2b2b8101715d005d241211342702232203061514171633121716
15140702212227261110373633027d6e213eaaaa3f212240b0e37f653e75
fee0c57f885b7bff2501420131f391010efeea94f2e388fe053bf1c3fdc7
b0feb5b3bf01480102bafd00>DMSAAA+Times-Roman AddT42Char 
1 0 0 <0002002100000597054b000300070043b40201490506b80156401c000407
4903000a0504490303021a090607490100190809eb214652182b2b4ef43c
4dfd3c4e10f63c4d10fd3c003f3cfd3c10f43cfd3c313033112111271121
11210576b8fbfa054bfab5b803dbfc250000>DMSAAA+Times-Roman AddT42Char 
DMSAAA+Times-Roman /CharStrings get begin
/g2 2 def
end
DMSAAA+Times-Roman /Encoding get
dup 48 /g2 put
pop
end
%ADOEndSubsetFont
/KKQNOU+Times-Roman /DMSAAA+Times-Roman findfont ct_VMDictPut
/KKQNOU+Times-Roman*1 
[48{/.notdef}rp /g2 207{/.notdef}rp]
KKQNOU+Times-Roman nf
KKQNOU+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
37.7608 141.122 mo
(0)sh
grestore
47.3688 133.412 mo
47.3688 132.552 li
@
55.0048 133.412 mo
55.0048 132.552 li
@
62.6408 133.412 mo
62.6408 132.552 li
@
70.2768 133.412 mo
70.2768 132.552 li
@
77.9128 133.412 mo
77.9128 131.978 li
@
gsave
71.2368 134.431 mo
71.2368 143.754 li
84.5048 143.754 li
84.5048 134.431 li
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: DMSAAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNOU+Times-Roman gcheck setglobal} if
1 1208 6 <00010041ffea037f057f002c00ce4027861b013508141501000229170514
2214150b0c090f171a100f0f73121b1b1a1b1a100f0405292cb80132401e
2509a41b1b021a191aa440152111100402f6250d056b22b6a015b0150215
bb0208002e00290207b12e2d2fcce410f65df4ed003fed3f3c1ac41afd3c
1112397d2f18ec10ed0111121739870e2e2b057d10c50011391112393911
33011239113912173910c9313018437940261c24030820211f211e211d21
04060726081c053501032405350106210935011c1b0423023500002b103c
2b012b2b2b2a8181015d361633323635102526232226273e013713213236
3717070e01232107161716171e011514002322272635343633d2b93273ac
feec9984160b08020302da01ad20231c104e042415fe7d55a44c7d54484a
fec5f1623c642b2db781cb940103723f0309080b0501de161e0eb90905af
1c192a5247b163ddfed8131f501e2d000000>KKQNOU+Times-Roman AddT42Char 
KKQNOU+Times-Roman /CharStrings get begin
/g6 6 def
end
KKQNOU+Times-Roman /Encoding get
dup 53 /g6 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNOU+Times-Roman*1 
[48{/.notdef}rp /g2 4{/.notdef}rp /g6 202{/.notdef}rp]
KKQNOU+Times-Roman nf
KKQNOU+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
71.8168 141.122 mo
(500)sh
grestore
85.5488 133.412 mo
85.5488 132.552 li
@
93.1848 133.412 mo
93.1848 132.552 li
@
100.821 133.412 mo
100.821 132.552 li
@
108.457 133.412 mo
108.457 132.552 li
@
116.093 133.412 mo
116.093 131.978 li
@
gsave
107.456 134.431 mo
107.456 143.754 li
124.668 143.754 li
124.668 134.431 li
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: DMSAAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNOU+Times-Roman gcheck setglobal} if
1 444 3 <000100e300000325055e0016006f4019761486140226143614020cfd6208
e02203f96207e02314e00db8016eb2136214b8017e40110d0c0302040815
0508070c1817171a0203b80130b50c0c0d191718bc0178002101a5015d00
182b2b4ef43c4d10fd3c4e456544e6003f3c3f1217394df5edfc01f52b2b
313000715d001615111416171521353e0135113426232206073525330262
015270fdcc794a18281a5324016f0c05590509fb4c4d2a041c1e06365a03
9e30321d101cbb00>KKQNOU+Times-Roman AddT42Char 
KKQNOU+Times-Roman /CharStrings get begin
/g3 3 def
end
KKQNOU+Times-Roman /Encoding get
dup 49 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNOU+Times-Roman*1 
[48{/.notdef}rp /g2 /g3 3{/.notdef}rp /g6 202{/.notdef}rp]
KKQNOU+Times-Roman nf
KKQNOU+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
108.025 141.122 mo
(1000)sh
grestore
123.729 133.412 mo
123.729 132.552 li
@
131.365 133.412 mo
131.365 132.552 li
@
139.001 133.412 mo
139.001 132.552 li
@
146.637 133.412 mo
146.637 132.552 li
@
154.273 133.412 mo
154.273 131.978 li
@
gsave
145.826 134.431 mo
145.826 143.754 li
163.039 143.754 li
163.039 134.431 li
eclp
0 0 0 1 cmyk
KKQNOU+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
146.205 141.122 mo
(1500)sh
grestore
161.909 133.412 mo
161.909 132.552 li
@
169.545 133.412 mo
169.545 132.552 li
@
177.181 133.412 mo
177.181 132.552 li
@
184.817 133.412 mo
184.817 132.552 li
@
192.453 133.412 mo
192.453 131.978 li
@
gsave
183.837 134.431 mo
183.837 143.754 li
201.05 143.754 li
201.05 134.431 li
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: DMSAAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNOU+Times-Roman gcheck setglobal} if
1 632 4 <0001003d000003cb0564001b00b8404c2512016c006e016913036402960f
f60ff61404050f0614150f2514042b08142100000118190a0b010b0a0303
001a0318191119180b0a01050614066b0e051514a41a4000211b0c038811
bc19bb0208001d00000207b11d1c2fcce410f6f4ed003f1a3dcc181a3cfd
3c3fed111217390111123912391112173910c910c90705101ac531304379
401c04100825070d0a3500090a0c0b050f033501090c0635010410063501
002b2b012b103c103c2b2b8101715d005d71370801353426232207060727
3e0133321615140201213236371703213d016e0106a06f89552f2b2b32ef
89a9d1e2fe8601cb604e311a6ffce117017c0164a9949b64377209e6b3d5
9aa4fed0fe7b2e590cfee9000000>KKQNOU+Times-Roman AddT42Char 
KKQNOU+Times-Roman /CharStrings get begin
/g4 4 def
end
KKQNOU+Times-Roman /Encoding get
dup 50 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNOU+Times-Roman*1 
[48{/.notdef}rp /g2 /g3 /g4 2{/.notdef}rp /g6 202{/.notdef}rp]
KKQNOU+Times-Roman nf
KKQNOU+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
184.385 141.122 mo
(2000)sh
grestore
200.089 133.412 mo
200.089 132.552 li
@
207.726 133.412 mo
207.726 132.552 li
@
215.362 133.412 mo
215.362 132.552 li
@
222.998 133.412 mo
222.998 132.552 li
@
35.9148 129.741 mo
37.3488 129.741 li
@
gsave
12.0676 134.431 mo
35.018 134.431 li
35.018 125.107 li
12.0676 125.107 li
cp
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: DMSAAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNOU+Times-Roman gcheck setglobal} if
1 108 1 <000100dcffe801bf00cb000b00264013052a0b0b0d17171a082a02190c0d
c321788e182b2b4ef44dfd4e456544e6003f4ded31300426353436333216
15140623011e42432f2f42413018432f2f42422f2f430000>KKQNOU+Times-Roman AddT42Char 
KKQNOU+Times-Roman /CharStrings get begin
/g1 1 def
end
KKQNOU+Times-Roman /Encoding get
dup 46 /g1 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNOU+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 /g4 2{/.notdef}rp /g6 
202{/.notdef}rp]
KKQNOU+Times-Roman nf
KKQNOU+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
12.0676 131.714 mo
(0.0000)sh
grestore
35.9148 125.131 mo
36.7758 125.131 li
@
35.9148 120.521 mo
36.7758 120.521 li
@
35.9148 115.911 mo
36.7758 115.911 li
@
35.9148 111.301 mo
36.7758 111.301 li
@
35.9148 106.691 mo
37.3488 106.691 li
@
gsave
12.0676 111.48 mo
35.018 111.48 li
35.018 102.157 li
12.0676 102.157 li
cp
eclp
0 0 0 1 cmyk
KKQNOU+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
12.0676 108.664 mo
(0.0005)sh
grestore
35.9148 102.081 mo
36.7758 102.081 li
@
35.9148 97.4713 mo
36.7758 97.4713 li
@
35.9148 92.8612 mo
36.7758 92.8612 li
@
35.9148 88.2512 mo
36.7758 88.2512 li
@
35.9148 83.6412 mo
37.3488 83.6412 li
@
gsave
12.0676 88.1713 mo
35.018 88.1713 li
35.018 78.8483 li
12.0676 78.8483 li
cp
eclp
0 0 0 1 cmyk
KKQNOU+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
12.0676 85.6132 mo
(0.0010)sh
grestore
35.9148 79.0313 mo
36.7758 79.0313 li
@
35.9148 74.4213 mo
36.7758 74.4213 li
@
35.9148 69.8112 mo
36.7758 69.8112 li
@
35.9148 65.2012 mo
36.7758 65.2012 li
@
35.9148 60.5912 mo
37.3488 60.5912 li
@
gsave
12.0676 65.2213 mo
35.018 65.2213 li
35.018 55.8975 li
12.0676 55.8975 li
cp
eclp
0 0 0 1 cmyk
KKQNOU+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
12.0676 62.5632 mo
(0.0015)sh
grestore
35.9148 55.9813 mo
36.7758 55.9813 li
@
35.9148 51.3712 mo
36.7758 51.3712 li
@
35.9148 46.7612 mo
36.7758 46.7612 li
@
35.9148 42.1512 mo
36.7758 42.1512 li
@
35.9148 37.5402 mo
37.3488 37.5402 li
@
gsave
12.0676 42.2713 mo
35.018 42.2713 li
35.018 32.9474 li
12.0676 32.9474 li
cp
eclp
0 0 0 1 cmyk
KKQNOU+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
12.0676 39.5132 mo
(0.0020)sh
grestore
35.9148 32.9302 mo
36.7758 32.9302 li
@
35.9148 28.3212 mo
36.7758 28.3212 li
@
35.9148 23.7103 mo
36.7758 23.7103 li
@
35.9148 19.1002 mo
36.7758 19.1002 li
@
39.7328 15.4293 mo
39.7328 16.8643 li
@
47.3688 15.4293 mo
47.3688 16.2902 li
@
55.0048 15.4293 mo
55.0048 16.2902 li
@
62.6408 15.4293 mo
62.6408 16.2902 li
@
70.2768 15.4293 mo
70.2768 16.2902 li
@
77.9128 15.4293 mo
77.9128 16.8643 li
@
85.5488 15.4293 mo
85.5488 16.2902 li
@
93.1848 15.4293 mo
93.1848 16.2902 li
@
100.821 15.4293 mo
100.821 16.2902 li
@
108.457 15.4293 mo
108.457 16.2902 li
@
116.093 15.4293 mo
116.093 16.8643 li
@
123.729 15.4293 mo
123.729 16.2902 li
@
131.365 15.4293 mo
131.365 16.2902 li
@
139.001 15.4293 mo
139.001 16.2902 li
@
146.637 15.4293 mo
146.637 16.2902 li
@
154.273 15.4293 mo
154.273 16.8643 li
@
161.909 15.4293 mo
161.909 16.2902 li
@
169.545 15.4293 mo
169.545 16.2902 li
@
177.181 15.4293 mo
177.181 16.2902 li
@
184.817 15.4293 mo
184.817 16.2902 li
@
192.453 15.4293 mo
192.453 16.8643 li
@
200.089 15.4293 mo
200.089 16.2902 li
@
207.726 15.4293 mo
207.726 16.2902 li
@
215.362 15.4293 mo
215.362 16.2902 li
@
222.998 15.4293 mo
222.998 16.2902 li
@
226.816 129.741 mo
225.381 129.741 li
@
226.816 125.131 mo
225.955 125.131 li
@
226.816 120.521 mo
225.955 120.521 li
@
226.816 115.911 mo
225.955 115.911 li
@
226.816 111.301 mo
225.955 111.301 li
@
226.816 106.691 mo
225.381 106.691 li
@
226.816 102.081 mo
225.955 102.081 li
@
226.816 97.4713 mo
225.955 97.4713 li
@
226.816 92.8612 mo
225.955 92.8612 li
@
226.816 88.2512 mo
225.955 88.2512 li
@
226.816 83.6412 mo
225.381 83.6412 li
@
226.816 79.0313 mo
225.955 79.0313 li
@
226.816 74.4213 mo
225.955 74.4213 li
@
226.816 69.8112 mo
225.955 69.8112 li
@
226.816 65.2012 mo
225.955 65.2012 li
@
226.816 60.5912 mo
225.381 60.5912 li
@
226.816 55.9813 mo
225.955 55.9813 li
@
226.816 51.3712 mo
225.955 51.3712 li
@
226.816 46.7612 mo
225.955 46.7612 li
@
226.816 42.1512 mo
225.955 42.1512 li
@
226.816 37.5402 mo
225.381 37.5402 li
@
226.816 32.9302 mo
225.955 32.9302 li
@
226.816 28.3212 mo
225.955 28.3212 li
@
226.816 23.7103 mo
225.955 23.7103 li
@
226.816 19.1002 mo
225.955 19.1002 li
@
gsave
112.117 154.512 mo
150.846 154.512 li
150.846 145.547 li
112.117 145.547 li
cp
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: VSTBAA+Times-Italic Initial
ct_T42Dict begin
-0.293 -0.41 1.66 1.203
 256 array 0 1 255 {1 index exch /.notdef put} for  /VSTBAA+Times-Italic
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
74200000000000000124000005446670676d0000000000000668000007d6
676c7966000000000000165c0000029468656164d5f2d98a00000e400000
0036686865610000000000000e7800000024686d74780000000000000e9c
000000086c6f63610000000000000ea4000000066d617870000000000000
0eac000000206e616d65bc8da1ba00000ecc000000287072657000000000
00000ef40000076667646972000000000000000000000000000100000190
000500000000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff0000000000000000000000000001000000000000057400000538001a
05550013036d001a0000ffda0000ffe80000fff1fe5afffe0534002dfeaa
ffe1031c000000a0000000a00000000000000000002100aa009400c20078
007d0021008200b80028002a0046000300a8004d005900e4014000300002
009b0087009400f600180047006b01e0001a00ab006800ce000300250045
0097001600470064007600b800260043008700b500dc0037005b007900b1
00c900d60021002c0052005500c402adffd20031009800d001b70403ff90
001a002e0036006d0084008effac002d003d00470080008601230173ffed
005d005d006d0082009100a200d4ffd2ffda0007000a0028002a003c003d
0051008700b10109011e014001850006000e001000250030005000550056
00a200b401080247ff72ffda0013003400400041004800580068007b008c
009a00b100c300da015e027403adff44ffbdffcf0000002400250026002d
0039004a004f007200740087009700b600b900f90156020eff24ffa1ffb9
ffc7ffef000000020005001d001f0024003d004b0058005d0067008e009a
00b800c900d800da00da00e400e6010c013b014101500185019801c701d3
0245032d038703b20410051ffff8001c00210027002a002a00300037003b
0055005c005f00610072008d00a400ad00b100ea00f60118012401340144
01a1021d02290266026f02c402ef0403048b04e4ffea0000000200020003
0007002e00350039003e004c004c0055006d0077008a008e009000930094
0096009a00a800c000cb00dc00df00ed00f900fc0105010701080128012f
01340149019801d801de020e02160223024202df032b033e036f04d104e4
0545fe8efef2ff58ff59ff71ffbbffc7ffde0007001d001f002d0039005b
005e005f0064006700760079007e008000800080008300830088009f00a6
00a900aa00af00be00c000c800cb00ce00d200dd00df00eb00ec00ed00ed
00f400f800fc00fd0108010c011001100115011c011c0125012d013b013e
0140015001510176017e018001830184018e0198019d01b401bb01ca01d3
02470258025d027d028802bc02d102d302dc02e802ec02f70309031d0321
038703c90447045a04ac050e055f057b058005af0636fdf4fe37fe57fe5e
fe76fecdff07ff0eff2aff76ff7dff9effb8ffb9fff0000000020008000f
00170023002a002b004b004c004e004e00500051005d006200630066006b
0072007800960097009a009b009f00a900ac00ad00b700c300ca00ce00d1
00da00dd00e600ed00f700fb00fd00fe01000104010501190123012a0132
014001470151015401550158015c015e015f016601680171017a017b0180
018b018b018e0191019801a101af01b101c301ea01f401f602000205020c
02110220022c024202470255025502610266026d027b028702920295029a
029f02a602a702b002b402cb02d102ee02fe030b030e0325033703370345
034c034e03610371038e03a303a603ab03cc03d003ed03fc03fd03fd0434
0439044f047b049404c204da04da04f00511052f053805550564056b056e
058a059505ad05b205dd05fb063606b00723075207820788079707ad009e
00c6009900a200000000000000000000000000bd00150000000000000000
000000000000000000000000000000000000000000000000000000000000
0000009b00ae02cd024500e000eb017b0183023800c9003101ae0050045a
00c400e4011c02fa029601ca0079004b006301af001605740002054b001d
054b0018039700130000ffe30000ffed0000ffeafe420000054b001dfebd
ffd6031e0000006affd60580004c008a007b0012005500cd00e80409014e
0028005f0334001f006400820030002a002a002a403231302f2e2d2c2b2a
292827262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c
0b0a090807060504030201002c4523466020b02660b004262348482d2c45
2346236120b02661b004262348482d2c45234660b0206120b04660b00426
2348482d2c4523462361b0206020b02661b02061b004262348482d2c4523
4660b0406120b06660b004262348482d2c4523462361b0406020b02661b0
4061b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a
51582320b08d44235920b0ed51582320b04d44235920b0042651582320b0
0d44235921212d2c20204518684420b001602045b04676688a4560442d2c
01b93dadeeeb0a2d2c00b911163dad0b2d2c2045b00043617d6818b00043
60442d2c45b01a234445b01923442d2c2045b00325456164b05051584544
1b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c
01b00743b006430a2d2c2069b04061b0008b20b12cc08a8cb8100062602b
0c642364615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0
112bb01723442d2c45b0112bb017458cb0172344b0177ae5182d2cb00225
4661658a46b040608b482d2cb0022546608a46b040618c482d2c4b53205c
58b002855958b00185592d2c20b0032545b019234445b01a234445652345
20b00325606a20b009234223688a6a606120b01a8ab000527921b21a1a40
b9ffe0001a45208a54582321b03f1b235961441cb114008a5279b3194020
1945208a54582321b03f1b235961442d2cb9187e3b210b2d2cb92d412d41
0b2d2cb93b21187e0b2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187e
c4e00b2d2c4b525845441b2121592d2c0120b003252349b04060b0206320
b000525823b002253823b002256538008a63381b212121212159012d2c45
69b00943608a103a2d2c01b005251023208af500b0016023edec2d2c01b0
05251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b001
600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00
b0064365b007430b2d2c3eb02a2a2d2c352d2c76b01b23701020b01b4520
b0005058b00161593a2f182d2c21210c6423648bb84000622d2c21b08051
580c6423648bb82000621bb200402f2b59b002602d2c21b0c051580c6423
648bb81555621bb200802f2b59b002602d2c0c6423648bb8400062602321
2d2cb4000100000015b00826b00826b00826b008260f10161345683ab001
162d2cb4000100000015b00826b00826b00826b008260f1016134568653a
b001162db800322c4bb800095058b101018e59b801ff85b800441db90009
00035f5e2db800332c2020456944b001602db800342cb800332a212db800
352c2046b003254652582359208a208a49648a204620686164b004254620
686164525823658a592f20b00053586920b000545821b040591b6920b000
545821b0406559593a2db800362c2046b00425465258238a592046206a61
64b0042546206a61645258238a592ffd2db800372c4b20b0032650585158
b080441bb04044591b21212045b0c05058b0c0441b2159592db800382c20
20456944b001602020457d691844b001602db800392cb800382a2db8003a
2c4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a
235920b0032653582321b801008a8a1b8a235920b0032653582321b80140
8a8a1b8a235920b80003265358b0032545b8018050582321b8018023211b
b003254523212321591b2159442db8003b2c4b535845441b2121592db800
3c2c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db8
003d2c2020456944b001602db8003e2cb8003d2a212db8003f2c2046b003
254652582359208a208a49648a204620686164b004254620686164525823
658a592f20b00053586920b000545821b040591b6920b000545821b04065
59593a2db800402c2046b00425465258238a592046206a6164b004254620
6a61645258238a592ffd2db800412c4b20b0032650585158b080441bb040
44591b21212045b0c05058b0c0441b2159592db800422c2020456944b001
602020457d691844b001602db800432cb800422a2db800442c4b20b00326
5358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b00326
53582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a2359
20b80003265358b0032545b8018050582321b8018023211bb00325452321
2321591b2159442db800452c4b535845441b2121592db800462c4bb80009
5058b101018e59b801ff85b800441db9000900035f5e2db800472c202045
6944b001602db800482cb800472a212db800492c2046b003254652582359
208a208a49648a204620686164b004254620686164525823658a592f20b0
0053586920b000545821b040591b6920b000545821b0406559593a2db800
4a2c2046b00425465258238a592046206a6164b0042546206a6164525823
8a592ffd2db8004b2c4b20b0032650585158b080441bb04044591b212120
45b0c05058b0c0441b2159592db8004c2c2020456944b001602020457d69
1844b001602db8004d2cb8004c2a2db8004e2c4b20b003265358b0801bb0
40598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321b801
008a8a1b8a235920b0032653582321b801408a8a1b8a235920b800032653
58b0032545b8018050582321b8018023211bb003254523212321591b2159
442db8004f2c4b535845441b2121592d00000001000000000000b1b0afba
5f0f3cf50111080000000000a252b00000000000c88fde35fda2fcb30d49
09a4000200090001000000000000000100000600fe0000000ce1fda2fda2
0d4908000225000000000000000000000000000204e3ffee05c700170000
0036014a00000001000000020087000600c0000800020010001000500000
07e807d6000400010000000100120001000000000006001300004944544c
55422b54696d65732d4974616c6963000000b800462bb8003c2bb800322b
bc029c010c003c001f0295b250391fb80294402b50391f90069007029d49
ad4902ad72ad8b029d729d8b02ad1fad3a029d1f9d3a02ad20ad50029d20
9d5002b80290b33a341f15b8028bb2471f14b8028ab2471f13b80289b247
1f12b80288b2471f11b80287b2471f10b80286b2471f0fb80285b2471f0e
b80284b2471f0db80283b2471f0cb80282b2471f0bb80281b2471f0ab802
80b2471f09b8027fb2471f08b8027eb2471f07b8027db2471f06b8027cb2
471f05b8027bb2471f04b8027ab2471f03b80279b2471f02b80278b2471f
01b80277b2471f00b80276400f471f000101010009010200080008404114
023d016e0070000d016a0070000d015b0070000d01530070000d01140070
000d01100070000d0104b4700d6f700d410a01cf0068000d01c70068000d
01630068000d0113400e680def680de4680dc7680dc5680dbe0168004d00
0d011d004d000d010540144d0dcd4d0db04d0d8a4d0d3c4d0d324d0d2a4d
0d410a01f2004a000d01e4004a000d0121004a000d011e40174a0df64a0d
d54a0dd14a0dad4a0d634a0d344a0d254a0db801d74011850ddd850da985
0d26850d23850d1d850db801aeb40f4b0f0009bb01ae004b000d01d0b250
2c1fbc01c300200101001f01c1b220bb1f411901c0003a0401001f01be00
3a0401001f01b9001f0401001f01b600430125001f01af00540125001f01
ab00270801001f0160b250351fb8015eb2503d1fb8015cb2505a1fb8015a
b2505e1fb80159b250621fbc015700500125001f0154b220e41f41110152
00200401001f014e003a0401001f014d008b0201001f014c008b02ab001f
0148b21f671fb80144b243621f4109014100430401001f013e0054015600
1f011cb2502c1f410d011500200401001f0111001f0401001f010e001f01
56001f010db41fcd1fed3ab80156b21fea1fb80125b21fe554b80401b21f
df27b802ab400b1fde27e41fcc50931fcb50b80201b21fc254b802abb21f
bf27b80156b61fae1f9e1fa827b802abb21fa527b80156b21f9d50b80201
b21f9c20b80801b21f9654b802abb21f9528b80401b21f9428b8019ab61f
9227cd1f7e3ab80156400b1f7d1f9e1f7a28cd1f6e43b80125b21f6d43b8
0125b21f6728b80801400b1f6628e41f621f811f5227b80401b21f4f20b8
0125b21f4c54b80156b61f493acd1f4728b802abb21f4627b80201b61f45
20cd1f4228b80801b21f401fb802abb21f3f28b80801b21f3743b80125b2
1f3628b80801b21f331fb80401b21f318bb80125b21f2f27b80156b61f2d
50931f2c54b80201b21f2b28b80125400f1f241f721f2143671f551f091f
0990bb018300070090017e403907909f07908007907307906b07906a0790
5607904807903807902e07902207901e071408120810080e080c080a0808
08060804080208000814b8ffe0402a000001001406100000010006040000
01000410000001001002000001000200000001000002010802004a411802
8a00080288000802860008028400080282000802800008027e0008027c00
08027a00080278000802760008028affe0b300000100b9028a027cb41000
000100b9027c027ab300000100b9027a0286b300000100b902860278b300
000100b902780276b300000100b80276b302010802b80276b24a0000b801
ff85b0018db0068858b001b0018e1bb000b0018e59181616763f183f123e
113946443e113946443e113946443e113946443e11394660443e11394660
442b2b2b2b2b2b2b2b2b2b2b18763f183f123e113946443e113946443e11
3946443e113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b
2b182b2b2b2b2b2b2b2b2b2b2b2b2b014b5079bf001f01ee0007001f01bf
0007001f01b1b6071fce071fac072b2b2b2b2b4b5379bf009001ee000700
9001bf0007009001b1b60790ce0790ac072b2b2b2b2b181db0964b5358b0
aa1d59b0324b5358b0ff1d594bb02e53205c58b9023f023d4544b9023e02
3d45445958b900de023f455258b9023f00de4459594bb05a53205c58b900
1f023f4544b9003a023f45445958b901aa001f455258b9001f01aa445959
4bb06353205c58b90020023e4544b90050023e45445958b9027700204552
58b9002002774459594bb0e453205c58b1723a4544b13a3a45445958b904
bd0072455258b9007204bd4459594bb0e453205c58b18b3a4544b13a3a45
445958b904bd008b455258b9008b04bd4459594bb01b53205c58b1272745
44b1432745445958b12227455258b127224459594bb02453205c58b12727
4544b1542745445958b12e27455258b1272e4459594bb03753205c58b127
274544b1282745445958b14727455258b127474459592b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b456953421600
3f3f182b103c012f070cb0062342b00723422b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b73737373737373732b2b2b000000>
[661 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 108 1 <00010017ffea05a103890052013140ba3b4f4a3c4a3d4f4f752d753c872d
07053e0743291c27513610354c354d3651c54ad74ae54a0b4e4e4f3f4d4d
414a7043682849234a4b4c4334052625100f06083a144d0a2c284e1a1911
06053a424e4d410605341110194019211a491a10540f10101f1225252634
33331f123232054342421f1241414d2c370a3a3752524c0a074241332832
0a14431e0b25532826108025011025442554259225b225052525530a0510
543264328232ab32b632db32e43207324d10413e90182b2f2b3c012f5d2b
3c2b103c012f5d712b3c2b10c0003fed3f2b3c3c3c003f3c3c10ed10ed87
052e2b0e7d10c487052e182b0e7d10c4870e2e182b7d10c401111239762f
3d1acc1a1811123911123911123900111217392b11123911121739180010
f5ed2bfc01f587100e7dc4083c3130015d005d0017161514060736373633
3216151407030616333236373e013717070e012322272635343637133e01
353426232206070e010723133e01353426232206070607060723133e0135
34260735363717033637363303221f30212b6f50916f2f4e1393040e1312
1b1514193b1f0a4892472016220505900303191343b2423c31419bbe0203
15183fb93b3a3520359ac30304364d65e208756f638868038916214c2279
86aa59a140471655fddf0d1b1215141e48180e6679101a3d0f221502300c
1008181aca686a8ff202c7091109181bd25b59945aa902c70b140b271003
22103207fe63a46e92000000>VSTBAA+Times-Italic AddT42Char 
1 0 0 <0002ffed0000062305380003000700424009040745000506450201b8022a
40130303000a0607450100190802034505045909feb9016c00182b10f43c
fd3c4e10f43c4dfd3c003f3c10fd3cfd3c10fd3c31302311211127112111
130636b8fb3a0538fac8b803c8fc38000000>VSTBAA+Times-Italic AddT42Char 
VSTBAA+Times-Italic /CharStrings get begin
/g1 1 def
end
VSTBAA+Times-Italic /Encoding get
dup 109 /g1 put
pop
end
%ADOEndSubsetFont
/KKQNOV+Times-Italic /VSTBAA+Times-Italic findfont ct_VMDictPut
/KKQNOV+Times-Italic*1 
[109{/.notdef}rp /g1 146{/.notdef}rp]
KKQNOV+Times-Italic nf
KKQNOV+Times-Italic*1 [8.0685 0 0 -8.0685 0 0 ]msf
112.539 152.06 mo
(m)sh
%ADOBeginSubsetFont: DMSAAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNOU+Times-Roman gcheck setglobal} if
1 1728 8 <00020031ffe305a10563002f003000bf401be602012808237a1b1ea72219
211b1d2823051b067e40081b210707b801074031067e4002a1262f252319
03121d1e1e270c2e302f03122e27090761231918292430302b249f23cf23
022f234f23bf230323b80204b3320f542bb80205b132312fccf4ed10f65d
5d3c12392f10fd3c10e4003fed3f3ced12392f3c121739103d1aec181af4
ed01103d1aed1a18f4ed2b2b31304379401c282e0d1129252d2611280f37
000d2e0f3700102a1237000e2c0c37012b2b012b2b2b2b8181005d001633
323637331323262726232200111000333236373e01351134262735211506
07061511140423202726111037362123036de6112c250d2d102f3f4379c2
c5fed5012adb25642d49244371020a4c192afe9fa3fed4cee3b5c7014921
0563422220fe51954980fed5fea9fee5fec20e0f1823220147763a072626
05142064fe6d2478afc10145011ecce10000>KKQNOU+Times-Roman AddT42Char 
1 2076 9 <00010021ffe80592054b001f00fd40436a196a1a02171977198619c71ec7
1fd61ed61ffa13fa140909130914191319142813281406080909070a0b0b
090049000907132d18124712090b1411011e1b1f7c1b40b8ff864031091a
19201819192c1209090b1b1a1a29120909071b1a1907041f0b1813091b18
0b0907051a1f131200021a19090f210121b8020ab39b130113b801b9b39b
090109b8014e400d20501f801f02401f01001f011fb9020900202ff45d5d
5d1a19fd5dfd5d18e65d003f3c3f3c3c3c1217390111123939121739874d
2e2b0e7d10c505872e182b0e7d10c52b1a1810f500fd3c3c3c0111123976
2f180110f501111239762f1887100e3c87100e3c313001715d005d011506
07061514161709013e013534272627352115060706070123012e01273502
424d1c312330014001231314331e4501a3411f2f2efe3b1ffe07404d4a05
4b2601091031195a6afd3703043346163b150c022623091a2776fb800466
8f460523>KKQNOU+Times-Roman AddT42Char 
1 3096 12 <00030028ffe8035e03aa0013001c001d00d9405d69086a0c6f126c157b07
79087a0c7d117f127d147d15fc0ef60f0d550866086011c404c712d404e6
09e20f083d08090a171803090a02090a03061739100301034703061c1c63
1d13079206a2060206410d0b1d18fe02421d10cf0a010ab80202b31f03db
10b80201b11f1e2fccf4ed10f65d1239f4ed2f003fed5d3f3ced11123976
2f5d18fd111239390111123911123910c931304379402a0e1b000515251a
261412171e0016171b00181e011918050e03260016111c1e0119011c1e01
040f062600002b2b2b012b103c2b103c2b2b2b8181005d015d001615211e
0133323637170e0123220235341233060706072126272623370262d4fd85
0abe8269903d2329e1a3bccdeebfac3c200e01a60b1b31732d03aac3b3e8
d46e650c7fd8011cb9c901244965365264315849>KKQNOU+Times-Roman AddT42Char 
1 3416 13 <00010012000003e50574003000b64016451601f9170109171a17021a0810
2f1f3002233f1c1fb801fb403b22033f001c3020241a3f1c1e20232b3f1c
2f20230bda04500a1c0b9029232b2b29231a11030627300410150f00273e
1507302f1f1e0a24232f191ab80200b63210272b2f0403b801ffb132312f
ccf43cfde410f63cfd3c003f3c3c3c3fed3f123939111217390111123900
f5edfc01f52b2b2b2b015d00313043794010252616182616241e01171825
17271e012b01103c2b818100715d0171373e013511342623220607353e01
3f0117113637363332171615111416171521353e01351134262322061511
14161715211252331d380b150d2c811960023f315866a23b20314cfe4f57
32415a4e923455fe471c0b3b6e03c038350302240d25081e07fd9a48223c
884875fe686a400a1c1c0c3a6e019561787011fe1370380c1c000000>KKQNOU+Times-Roman AddT42Char 
1 3744 14 <000200280000020e0574000b0025005d4026230c0f3f0c1c252024232020
18201050171c18921c201f100f041c25089502001c0725240a27b8020040
0a200b9505271f20dd100fb901ff00262ff43cfd3cf4ed10e6003f3c3f3f
4ded1112173910f5edfc01f510f52b103c31301236333216151406232226
35033e013511342726232206073537363736331615111416171521a83c2c
2b3d3d2b2c3c806b38090f300b15322baf451c08023761fe1a05363e3d2c
2b3d3d2bfb110a357501dd411929040e1f0e391d0c0708fd32723a081c00
0000>KKQNOU+Times-Roman AddT42Char 
1 3956 15 <00020021000003e303ae0033003400b74059191a4d1a02960ea60e021a08
1f2110321f332f213f2105253f1c2120220343001c3320241c3a1c202023
2e3a1c3220230c20043a0b1c0c900f2e2d251c1304030733120f293e1727
0f07333221200a34073426252f34041b1cb80200b73612272e2f030304b8
01ffb136352fccf43c10fde410f63c1239fd3c2f003f3f3c3c3c3ff4ed11
3911173910f5edfc01f52b2b2b2b055d043130437940102728181a281826
1e01191a2719291e012b01103c2b8181005d71373e013511342726232206
0735363f0132161d013637363332171615111416171521353e0135113426
2322070607111416171521012547390c133b09130e29995e07035c344e54
44386c3a44fe55493a40563b3d22364045fe4b01dc1c09355c01fb401a26
0202230c321f0a0993562031274cc3fe2d4840011c1c0a3d6601ab567128
1735fdd04831021c03ae>KKQNOU+Times-Roman AddT42Char 
KKQNOU+Times-Roman /CharStrings get begin
/g8 8 def
/g9 9 def
/g12 12 def
/g13 13 def
/g14 14 def
/g15 15 def
end
KKQNOU+Times-Roman /Encoding get
dup 71 /g8 put
dup 86 /g9 put
dup 101 /g12 put
dup 104 /g13 put
dup 105 /g14 put
dup 110 /g15 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNOU+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 /g4 2{/.notdef}rp /g6 
17{/.notdef}rp /g8 14{/.notdef}rp /g9 14{/.notdef}rp /g12 2{/.notdef}rp /g13 
/g14 4{/.notdef}rp /g15 145{/.notdef}rp]
KKQNOU+Times-Roman nf
KKQNOU+Times-Roman*1 [5.72863 0 0 -5.72863 0 0 ]msf
118.276 153.348 mo
(hh)
[2.86432 0 ]xsh
KKQNOU+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
126.524 152.06 mo
(inGeV)
[2.2444 6.36594 5.83217 3.58366 0 ]xsh
grestore
gsave
121.8 7.48627 mo
121.8 15.3763 li
141.164 15.3763 li
141.164 7.48627 li
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: EUBBAA+Mathematica1 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /EUBBAA+Mathematica1 def
/FontInfo 6 dict dup begin
/Notice (Mathematica typeface design by Andre Kuzniarek, with Gregg Snyder and Stephen Wolfram. Copyright \\\(c\\\) 1996-2001 Wolfram Research, Inc. [http://www.wolfram.com]. All rights reserved. [Font version 2.00]) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /Equal put
dup 127 /Delta put
def
/UniqueID 5095641 def
/FontBBox {0 -16 579 682} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-16 -0 444 468 662 677] def
/OtherBlues [-209 -203] def
/BlueScale 0.0416667 def
/StdHW [105.846] def
/StdVW [74.419] def
/StemSnapH [65.543 105.846] def
/StemSnapV [58.407 74.419] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/Equal <1C60D8A8C9B678BD19BF6CFABC23FF7AEEAECC7A009FA979A1EF19ED
0D1F025A329E7E77E19D93F6A5877C> |-
/Delta <1C60D8A8C9B74A3E7F4B7A2810C76C66EE45608F7902E780507D6243
C09B0190B500DF3ED0C70BDF1D905517179531E8F32F4BC3186B33A278AD594F
6FB11C1337235F0F1F8688C88617B9188F0CE07806009FEEFC8BDEA030083C1F
EB11883A15A6A9F1AC2F45EF9DDDA1B77CEDF96CCC07AB18F46D31A7101EA813
9F1D49CCFE3448F1F0> |-
/.notdef <1C60D8A8C9B5EE31F4> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/KKQNOW+Mathematica1 /EUBBAA+Mathematica1 findfont ct_VMDictPut
/KKQNOW+Mathematica1*1 
[32{/.notdef}rp /Equal 94{/.notdef}rp /Delta 128{/.notdef}rp]
KKQNOW+Mathematica1 nf
KKQNOW+Mathematica1*1 [7.5306 0 0 -7.5306 0 0 ]msf
121.862 13.2242 mo
(\177)sh
%ADOBeginSubsetFont: DMSAAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNOU+Times-Roman gcheck setglobal} if
1 916 5 <00010059fff10376056a002f0095403c49195b070207241624290739074b
076a076a0879077b08a919c6240b172118181700032c0122100d18170213
0c02f52940220d21c0090109092f1313b80173400f1b052f88290d106b1e
056ba0260126bd02000031000d0136002c0209b131302fccf4e410f65de5
d4ed003fed3fed1112392f5d3d1add7dcc181a10fd111217390111123939
121739101a18c93130015d005d36163332363534272623220607273e0135
34262322070607273e013332161514070607161716151400212226353436
33d6b53f8c88375ddd0d181002a0b8915d6e542e351f28da8f99a7452752
603a6dfed5feec7b632125ae72bd6f6b518901021a3a967b6d72512c5c07
98b6a86e61512e39293769a1befede492a1a30000000>KKQNOU+Times-Roman AddT42Char 
1 2700 11 <00020031ffed03ed0576002d003a00db406d9828a928cb28c92ce32cf42c
06006d2e7c2e8b2e9b2eab2bac2eba2bbb2ecd2bcc2ec638dc2bdb2ed538
0e032b4c290223080bda04500a1c0b90111e2017501d1c1e92213231302f
0417042227322f23170305343a04122d110134332d073a3e2727210b2204
2f122740170117b80200b63c37449e2a012ab80201b13c3b2fccf45ded10
f65df4fd3c003f3c10ed3fed3f12393911121739123901111217390010f5
edfc01f50010f5edfc01f53130437940183539282c352c37260039283726
00362b34260138293a2600002b2b012b2b818100715d01715d0017161711
34262322060735373e0137363717070e01150314163332363715060f0127
350607062322023534123312363511342623220615141633022e3d28251b
330c121f522d5a221025060201020220450b160b068b9d0738294960aad3
fdb773608b427e8c959403b1201525013e3d2e020321150c1a0c050e0269
39793bfccf413401022102303b097b3d1a2d0107add90137fca85c2901ad
826bdfa3a1fc>KKQNOU+Times-Roman AddT42Char 
KKQNOU+Times-Roman /CharStrings get begin
/g5 5 def
/g11 11 def
end
KKQNOU+Times-Roman /Encoding get
dup 51 /g5 put
dup 100 /g11 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNOU+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 /g4 /g5 /.notdef 
/g6 17{/.notdef}rp /g8 14{/.notdef}rp /g9 13{/.notdef}rp /g11 /g12 
2{/.notdef}rp /g13 /g14 4{/.notdef}rp /g15 145{/.notdef}rp]
KKQNOU+Times-Roman nf
KKQNOU+Times-Roman*1 [7.5306 0 0 -7.5306 0 0 ]msf
125.364 13.2242 mo
(d)sh
KKQNOU+Times-Roman*1 [5.34673 0 0 -5.34673 0 0 ]msf
129.034 14.4344 mo
(3)sh
KKQNOW+Mathematica1*1 [7.5306 0 0 -7.5306 0 0 ]msf
131.903 13.2242 mo
( )sh
KKQNOU+Times-Roman*1 [7.5306 0 0 -7.5306 0 0 ]msf
136.926 13.2242 mo
(0)sh
grestore
gsave
96.6978 26.8513 mo
96.6978 66.6553 li
105.304 66.6553 li
105.304 26.8513 li
eclp
0 0 0 .791016 cmyk
KKQNOV+Times-Italic*1 [0 6.9927 6.9927 0 0 0 ]msf
99.2598 27.3962 mo
(m)sh
%ADOBeginSubsetFont: DMSAAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNOU+Times-Roman gcheck setglobal} if
1 1556 7 <00010028ffed0397054b000c0072401c7b0a8708a30703690774088a0784
09040809080c0009080905040303b8012d4017120202010403020309010e
00010405a4000c0403020c00bb0208000e00090209b10e0d2fcce410e600
3f3c3f3c4dfd3c3901111239121739872e2b7d10c5001239390111123939
10c93130005d015d011501230121220607273e01370397fe4e840195fe4c
61554123411f19054b21fac304c7406610a04b420000>KKQNOU+Times-Roman AddT42Char 
KKQNOU+Times-Roman /CharStrings get begin
/g7 7 def
end
KKQNOU+Times-Roman /Encoding get
dup 55 /g7 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNOU+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 /g4 /g5 /.notdef 
/g6 /.notdef /g7 15{/.notdef}rp /g8 14{/.notdef}rp /g9 13{/.notdef}rp 
/g11 /g12 2{/.notdef}rp /g13 /g14 4{/.notdef}rp /g15 145{/.notdef}rp]
KKQNOU+Times-Roman nf
KKQNOU+Times-Roman*1 [0 4.96482 4.96482 0 0 0 ]msf
98.1399 32.4169 mo
(hh)
[2.48242 0 ]ysh
KKQNOW+Mathematica1*1 [0 6.9927 6.9927 0 0 0 ]msf
99.2598 37.7958 mo
( )sh
KKQNOU+Times-Roman*1 [0 6.9927 6.9927 0 0 0 ]msf
99.2598 42.4602 mo
(700GeV)
[3.49634 3.49634 3.4054 5.05457 3.10583 0 ]ysh
grestore
gsave
183.479 23.6233 mo
183.479 32.9473 li
201.767 32.9473 li
201.767 23.6233 li
eclp
.882813 .769531 0 0 cmyk
KKQNOW+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
183.847 30.2932 mo
(\177)sh
%ADOBeginSubsetFont: DMSAAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNOU+Times-Roman gcheck setglobal} if
1 2440 10 <00020007ffed03bd057400180025008d402af50c01060c019a0d01230801
da1550001c01902306250723211b06150b0300213e0b071b63110b1e440e
b80202400a272527062f14c0150115b801ffb127262fccf45d3cfde410f6
ed003fed3fed3f123939111239390111123900f5edfc01f5313043794018
1c200c10200c1e26011c101e26011f0d2126011d0f1b2600002b2b012b2b
8181005d01715d13353e0133161511363736333216151400232226351134
2623001633323635342623220615110772b607021a345c7893d0fef2dc6f
d6203a01098a348c877e8d478804f8221a400606fd9f302b4bf8c6d4fed2
582c04213a31fb612dd29595fd5743fe02000000>KKQNOU+Times-Roman AddT42Char 
KKQNOU+Times-Roman /CharStrings get begin
/g10 10 def
end
KKQNOU+Times-Roman /Encoding get
dup 98 /g10 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNOU+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 /g4 /g5 /.notdef 
/g6 /.notdef /g7 15{/.notdef}rp /g8 14{/.notdef}rp /g9 11{/.notdef}rp 
/g10 /.notdef /g11 /g12 2{/.notdef}rp /g13 /g14 4{/.notdef}rp 
/g15 145{/.notdef}rp]
KKQNOU+Times-Roman nf
KKQNOU+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
187.599 30.2932 mo
(b)sh
KKQNOW+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
191.738 30.2932 mo
( )sh
KKQNOU+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
197.12 30.2932 mo
(0)sh
grestore
gsave
183.479 31.8713 mo
183.479 41.1953 li
207.864 41.1953 li
207.864 31.8713 li
eclp
0 0 0 1 cmyk
KKQNOW+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
183.854 38.3602 mo
(\177)sh
KKQNOU+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
187.605 38.3602 mo
(b)sh
KKQNOW+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
191.745 38.3602 mo
( )sh
KKQNOU+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
197.126 38.3602 mo
(0.1)sh
grestore
gsave
183.479 39.7603 mo
183.479 49.0843 li
207.864 49.0843 li
207.864 39.7603 li
eclp
0 .994141 1 0 cmyk
KKQNOW+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
183.854 46.4282 mo
(\177)sh
KKQNOU+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
187.605 46.4282 mo
(b)sh
KKQNOW+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
191.745 46.4282 mo
( )sh
KKQNOU+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
197.126 46.4282 mo
(0.3)sh
grestore
.5379 lw
2 lc
283.949 129.741 mo
296.588 129.741 li
296.588 112.678 li
302.907 112.678 li
302.907 52.8132 li
309.227 52.8132 li
309.227 36.6632 li
315.546 36.6632 li
315.546 46.3643 li
321.866 46.3643 li
321.866 68.3362 li
328.185 68.3362 li
328.185 80.3202 li
334.505 80.3202 li
334.505 91.5632 li
340.824 91.5632 li
340.824 99.8952 li
347.144 99.8952 li
347.144 105.602 li
353.463 105.602 li
353.463 108.854 li
359.782 108.854 li
359.782 115.531 li
366.102 115.531 li
366.102 118.898 li
372.422 118.898 li
372.422 122.608 li
378.741 122.608 li
378.741 123.978 li
385.06 123.978 li
385.06 126.375 li
391.38 126.375 li
391.38 127.116 li
397.699 127.116 li
397.699 127.516 li
404.019 127.516 li
404.019 128.429 li
410.338 128.429 li
410.338 128.885 li
416.658 128.885 li
416.658 129.228 li
422.977 129.228 li
422.977 129.399 li
429.297 129.399 li
429.297 129.741 li
435.616 129.741 li
435.616 129.57 li
448.255 129.57 li
448.255 129.627 li
460.894 129.627 li
460.894 129.741 li
467.214 129.741 li
.882813 .769531 0 0 cmyk
@
283.949 129.741 mo
296.588 129.741 li
296.588 107.928 li
302.907 107.928 li
302.907 39.2402 li
309.227 39.2402 li
309.227 28.7202 li
315.546 28.7202 li
315.546 50.2242 li
321.866 50.2242 li
321.866 69.7682 li
328.185 69.7682 li
328.185 81.9902 li
334.505 81.9902 li
334.505 95.8622 li
340.824 95.8622 li
340.824 102.307 li
347.144 102.307 li
347.144 108.753 li
353.463 108.753 li
353.463 113.446 li
359.782 113.446 li
359.782 116.024 li
366.102 116.024 li
366.102 119.686 li
372.422 119.686 li
372.422 123.398 li
378.741 123.398 li
378.741 124.843 li
385.06 124.843 li
385.06 125.977 li
391.38 125.977 li
391.38 127.369 li
397.699 127.369 li
397.699 128.555 li
404.019 128.555 li
404.019 128.813 li
410.338 128.813 li
410.338 129.226 li
416.658 129.226 li
416.658 129.329 li
422.977 129.329 li
422.977 129.535 li
435.616 129.535 li
435.616 129.638 li
441.936 129.638 li
441.936 129.69 li
448.255 129.69 li
448.255 129.586 li
454.575 129.586 li
454.575 129.741 li
467.214 129.741 li
0 0 0 1 cmyk
@
283.949 129.741 mo
296.588 129.741 li
296.588 97.0643 li
302.907 97.0643 li
302.907 19.1012 li
309.227 19.1012 li
309.227 26.6563 li
315.546 26.6563 li
315.546 52.1093 li
321.866 52.1093 li
321.866 70.1002 li
328.185 70.1002 li
328.185 91.1613 li
334.505 91.1613 li
334.505 98.4802 li
340.824 98.4802 li
340.824 107.736 li
347.144 107.736 li
347.144 111.797 li
353.463 111.797 li
353.463 115.292 li
359.782 115.292 li
359.782 118.644 li
366.102 118.644 li
366.102 121.855 li
372.422 121.855 li
372.422 124.594 li
378.741 124.594 li
378.741 126.294 li
385.06 126.294 li
385.06 126.53 li
391.38 126.53 li
391.38 127.947 li
397.699 127.947 li
397.699 128.608 li
404.019 128.608 li
404.019 128.844 li
410.338 128.844 li
410.338 129.175 li
416.658 129.175 li
416.658 129.411 li
422.977 129.411 li
422.977 129.647 li
429.297 129.647 li
429.297 129.458 li
435.616 129.458 li
435.616 129.6 li
441.936 129.6 li
441.936 129.694 li
454.575 129.694 li
454.575 129.741 li
460.894 129.741 li
460.894 129.694 li
467.214 129.694 li
467.214 129.741 li
0 .994141 1 0 cmyk
@
1.90919 lw
328.185 129.741 mo
328.185 20.9232 li
0 0 0 .595703 cmyk
@
.10758 lw
471.032 133.412 mo
280.131 133.412 li
1 /0 /CSD get_res sepcs
1 sep
@
280.131 133.412 mo
280.131 15.4293 li
@
280.131 15.4293 mo
471.032 15.4293 li
@
471.032 15.4293 mo
471.032 133.412 li
@
0 lc
283.949 133.412 mo
283.949 131.978 li
@
gsave
281.386 134.431 mo
281.386 143.754 li
286.406 143.754 li
286.406 134.431 li
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: UPFCAA+Times-Roman Initial
ct_T42Dict begin
-0.203 -0.426 1.699 1.27
 256 array 0 1 255 {1 index exch /.notdef put} for  /UPFCAA+Times-Roman
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
742000000000000001240000041e6670676d000000000000054400000588
676c79660000000000001294000010c868656164d7ea84f200000acc0000
0036686865610000000000000b0400000024686d74780000000000000b28
000000406c6f63610000000000000b68000000226d617870000000000000
0b8c000000206e616d65419980d100000bac000000247072657000000000
00000bd0000006c367646972000000000000000000000000000100000190
000500000000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff000000000000000000000000000100000000000005740002054b001d
054b0018039700130000ffe30000ffed0000ffeafe420000054b001dfebd
ffd6031e000000b4000000b402fe3f3c0026001c007d00980003007d00de
00350017002800e3013e000300b400d000df004c005a00c4004a00ab0147
008a004e0039006d013d002401d200360045009e00be00170079006f00d0
00460091002100b400baffc20017003600ab00b800f60009001d003d0058
005a008c0099ffc400a000e800f5ffa1ffea0033008500b800d5ffe2002f
0080008c0002001a00250045006a0070012d0274ff87003e004e009800ba
00de0116ff3e00150034003c004400670068006d006e0084009800bd00d5
00d7011c0000002d0030003d00460057008b0093009700b000c6011f017b
019d0409ff68ff6a0056005a006a006d009200c400d000e700f1011101bf
01c7ff1cffb4ffff0002002300380042006d0092009c009d00a100a200b4
00ba00c700c700e400ed0153015703230334ff0dff32fffbffff000f001c
0040004b005c006d006d007c0085009800c500cb00cb00df011f01280136
015501700180018a01c7024203130407054eff82000000080026003d003d
004f006e0073008b00900095009e00a800ad00ad00c300d300e301090123
0241028002f40311034004510576ff7fffafffbeffcf00030005000e0039
004b004b004c00740078008800890092009200b600c200d800df00f000fd
010701100117011f01b401dd01eb020002110229028002ca036f038a03af
0400049c04dd053e0587fea6fee4ff67ff95ffcbfff80002000200070025
00280037003700380039003f00510053005900640068006b007d00980099
00af00b100b900d000d500da00dd00fd00fe011e013601370142015a017a
01a301c401cc01f702020210021f022902290287029f029f02c002cc02d5
031a031d03280331035e0396039f03a8049305640571059405b106eb0788
fe63fe64fe76fe7cfebcff4bff97ffacffc0000700210028002d00300048
0049004c0051005400560066007a007c0085008a008c009900af00b300b5
00b500b600b900bb00bc00cc00d000e100f400f600fc00fd010901100117
0118011f01300139013c013e0142014301440149014b014f015401550157
01580161016a017d017e0184019c019c019d01a101a301b401b401b901bb
01cb01d001d701d701e401ec01ec01f7020502070218022302260240024b
024b025702570261026302680269026d028d028d02a602af02b402b80300
033e03460361036103b003c003d503d703df03f9041a0474047b04c104cc
04da04e404f204f6051005300555055606180639067606a406b3076b07ad
07da00b200d500ae00bb00000000000000000000000000630079029602fa
007e0247009100c8000002ca024800da007d01b301a4002d00a5009c0034
003400dc00dc0040004000310031000a000a00820030002a002a00004027
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b09051582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b94000
00000a2d2c00b9000040000b2d2c2045b00043617d6818b0004360442d2c
45b01a234445b01923442d2c2045b00325456164b050515845441b212159
2d2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c20b00325
52582359212d2c69b04061b0008b0c6423648bb8400062600c642364615c
58b0036159b002602d2c45b0112bb0172344b0177ae5182d2c45b0112bb0
1723442d2c45b0112bb017458cb0172344b0177ae5182d2cb00225466165
8a46b040608b482d2cb0022546608a46b040618c482d2c4b53205c58b002
855958b00185592d2c20b0032545b019234445b01a23444565234520b003
25606a20b009234223688a6a606120b0005258b21a401a4523614459b000
5058b219401945236144592d2cb9187e3b210b2d2cb92d412d410b2d2cb9
3b21187e0b2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d
2c4b525845441b2121592d2c0120b003252349b04060b0206320b0005258
23b002253823b002256538008a63381b212121212159012d2c4569b00943
608a103a2d2c01b005251023208af500b0016023edec2d2c01b005251023
208af500b0016123edec2d2c01b0062510f500edec2d2c20b00160011020
3c003c2d2c20b001610110203c003c2db800272c4bb800095058b101018e
59b801ff85b800441db9000900035f5e2db800282c2020456944b001602d
b800292cb800282a212db8002a2c2046b003254652582359208a208a4964
8a204620686164b004254620686164525823658a592f20b00053586920b0
00545821b040591b6920b000545821b0406559593a2db8002b2c2046b004
25465258238a592046206a6164b0042546206a61645258238a592ffd2db8
002c2c4b20b0032650585158b080441bb04044591b21212045b0c05058b0
c0441b2159592db8002d2c2020456944b001602020457d691844b001602d
b8002e2cb8002d2a2db8002f2c4b20b003265358b0801bb040598a8a20b0
032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a23
5920b0032653582321b801408a8a1b8a235920b80003265358b0032545b8
018050582321b8018023211bb003254523212321591b2159442db800302c
4b535845441b2121592db800312c4bb800095058b101018e59b801ff85b8
00441db9000900035f5e2db800322c2020456944b001602db800332cb800
322a212db800342c2046b003254652582359208a208a49648a2046206861
64b004254620686164525823658a592f20b00053586920b000545821b040
591b6920b000545821b0406559593a2db800352c2046b00425465258238a
592046206a6164b0042546206a61645258238a592ffd2db800362c4b20b0
032650585158b080441bb04044591b21212045b0c05058b0c0441b215959
2db800372c2020456944b001602020457d691844b001602db800382cb800
372a2db800392c4b20b003265358b0801bb040598a8a20b0032653582321
b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b0032653
582321b801408a8a1b8a235920b80003265358b0032545b8018050582321
b8018023211bb003254523212321591b2159442db8003a2c4b535845441b
2121592d0001000000000000b1b0afba5f0f3cf50111080000000000a33d
5b0000000000c88fde35fe60fc930d9a0a2c000000090001000000000000
000100000600fe0000000dc5fe60fe600d9a000100000000000000000000
00000000001005c70021020000dc04000012040000e30400003d04000059
040000410400002805c7003105c700210400000704000031038d00280400
0012023900280400002100000036006000de013c01ca025c030a0360040e
04c40546060c06ac075007ba086400000001000000100071000600960009
000200100010003b000007e806c300040001000000010012000100000000
0006001200004745414c414b2b54696d65732d526f6d616eb800312bb800
272b400f09cf54010f54013fd029019f540140410d01fb0001003001fb00
01002001fb0001001001fb0001000001fb400b01002001900701900601f0
414f0204000100ef0203000100c00201000100b001ff00b0020100bf0208
000300af020100af02080002009f0202009f02080002007f0200007f0202
007f0208008f0200008f020200800205008f02080007006f0200006f0202
006f0205006f02080004005f020200500203005f02080003004f0202004f
0204004f0208000300300202003f0204003002080003002f0201002f0204
002f02080003001f0208b2010840ba01e5014d0152b50f1fc2710e1fbc01
4b014d0062001f0131b2864f1fbe01a60020000d018f0020000d0182400e
200dde200dda200d8f200d7f200dbe018b0050000d016c0050000d010140
0e500dd8500d43500d3f500d3a500dbb013b0028000d01034014280dbd28
0db8280da7280d7c280d76280d2d280dbe01b1004a000d01a7004a000d01
9440204a0df74a0dc84a0d984a0d854a0d7a4a0d664a0d214a0d621c0d24
1c0d1b1c0db8017eb60f920f900f0009b8017eb4900d92900db801f5b331
2f1f41b801f3b5331f2b2c361fb80189b2542c1fb80183b254ab1f411501
8100290401001f018000290201001f017c00440201001f01790130020100
1f017801300401001f0177b22f291fb80173b23e9e1fb80171b23ee41fbc
016b002e0401001f016ab233e41fb80138b2545e1f410901330029040100
1f013200440801001f012db23e931fb8012ab22ccd1f41110127002e0125
001f012400330801001f012300330401001f012200330401001f0106b254
261fb80105b4542c1fff29b80101b21ffe88b80201b61ffb2f521ff62eb8
0401b21ff52eb80801b21fe129b802abb21fdd2fb802ab40171fdb2f5e1f
d93e4a1fc454261fc354e41fbf2f6c1fba2cb80401b21fa944bc0401001f
00a80130019a400b1fa52f931fa42f891fa23eb80401b21fa033b80801b2
1f9654b80801b21f9529b80401b61f8954261f732eb80156b21f7233b802
ab400b1f6b2f6c1f6a2c4b1f632eb8019a400f1f2e2c371f532fbb1f512f
721f4f2cb80401b21f4944b80401b21f482fba0401001f01f3400d411d1f
412f1d1f3d3ecd1f3b44b80201b21f392eb8019ab21f343eb80401b21f32
2eb80201b61f313e4c1f2b2eb80404b61f2a54311f2233b80201402d1f55
67075f075507370735073007260725071e071d071408120810080e080c08
0a080808060804080208000814b8ffe0402b000001001406100000010006
04000001000410000001001002000001000200000001000002010802004a
00b801ff85b0018d16763f183f123e113946443e113946443e113946443e
113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b1db0964b5358b0aa1d59b0324b5358b0ff1d594bb03553
205c58b901e701e54544b901e601e545445958b9012101e7455258b901e7
0121445959184bb04c5058b801e64569b801e7456961b0405258b901e601
e645b040614459594bb05653205c58b9002901e64544b9005401e6454459
58b902360029455258b9002902364459594bb08953205c58b9002f01e745
44b9004401e745445958b902e4002f455258b9002f02e44459594bb0cd53
205c58b188294544b1292945445958b9052e0088455258b90088052e4459
594bb8020153205c58b90130002f4544b12f2f45445958b90ab001304552
58b901300ab04459594bb01d53205c58b133334544b13e3345445958b132
33455258b133324459594bb02f53205c58b133334544b12c3345445958b1
5233455258b133524459594bb05b53205c58b133334544b12e3345445958
b1a033455258b133a04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2bb35b9b819c456523456023456560234560b08b766818b0806220
20b1819b4565234520b003266062636820b003266165b09b236544b08123
4420b15b9c4565234520b003266062636820b003266165b09c236544b05b
2344b1009c455458b19c406544b25b405b4523614459b3868d7145456523
456023456560234560b089766818b080622020b1718d4565234520b00326
6062636820b003266165b08d236544b071234420b186454565234520b003
266062636820b003266165b045236544b0862344b10045455458b1454065
44b286408645236144592b2b2b2b45695342737373737373737373737373
73737373737373737475755e73735e0000>
[4297 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 192 2 <00020012ffed03b10560000e001e00924022ac01eb0ce51403c500d600e5
000331003505390d034c0806a01e050ea0160d028812b80208b3200a881a
b80207b1201f2fccf4ed10f6ed003fed3fed313043794038001d0c261825
142608251c26102504260d170a35000015023501071d0a3500050f023501
0b190e350001130e3500091b06350103110635012b2b2b2b012b2b2b2b2b
2b2b2b2b2b2b8101715d005d241211342702232203061514171633121716
15140702212227261110373633027d6e213eaaaa3f212240b0e37f653e75
fee0c57f885b7bff2501420131f391010efeea94f2e388fe053bf1c3fdc7
b0feb5b3bf01480102bafd00>UPFCAA+Times-Roman AddT42Char 
1 0 0 <0002002100000597054b000300070043b40201490506b80156401c000407
4903000a0504490303021a090607490100190809eb214652182b2b4ef43c
4dfd3c4e10f63c4d10fd3c003f3cfd3c10f43cfd3c313033112111271121
11210576b8fbfa054bfab5b803dbfc250000>UPFCAA+Times-Roman AddT42Char 
UPFCAA+Times-Roman /CharStrings get begin
/g2 2 def
end
UPFCAA+Times-Roman /Encoding get
dup 48 /g2 put
pop
end
%ADOEndSubsetFont
/KKQNOX+Times-Roman /UPFCAA+Times-Roman findfont ct_VMDictPut
/KKQNOX+Times-Roman*1 
[48{/.notdef}rp /g2 207{/.notdef}rp]
KKQNOX+Times-Roman nf
KKQNOX+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
281.977 141.122 mo
(0)sh
grestore
290.269 133.412 mo
290.269 132.552 li
@
296.588 133.412 mo
296.588 132.552 li
@
302.907 133.412 mo
302.907 132.552 li
@
309.227 133.412 mo
309.227 132.552 li
@
315.546 133.412 mo
315.546 131.978 li
@
gsave
308.998 134.431 mo
308.998 143.754 li
322.266 143.754 li
322.266 134.431 li
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: UPFCAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNOX+Times-Roman gcheck setglobal} if
1 1208 6 <00010041ffea037f057f002c00ce4027861b013508141501000229170514
2214150b0c090f171a100f0f73121b1b1a1b1a100f0405292cb80132401e
2509a41b1b021a191aa440152111100402f6250d056b22b6a015b0150215
bb0208002e00290207b12e2d2fcce410f65df4ed003fed3f3c1ac41afd3c
1112397d2f18ec10ed0111121739870e2e2b057d10c50011391112393911
33011239113912173910c9313018437940261c24030820211f211e211d21
04060726081c053501032405350106210935011c1b0423023500002b103c
2b012b2b2b2a8181015d361633323635102526232226273e013713213236
3717070e01232107161716171e011514002322272635343633d2b93273ac
feec9984160b08020302da01ad20231c104e042415fe7d55a44c7d54484a
fec5f1623c642b2db781cb940103723f0309080b0501de161e0eb90905af
1c192a5247b163ddfed8131f501e2d000000>KKQNOX+Times-Roman AddT42Char 
KKQNOX+Times-Roman /CharStrings get begin
/g6 6 def
end
KKQNOX+Times-Roman /Encoding get
dup 53 /g6 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNOX+Times-Roman*1 
[48{/.notdef}rp /g2 4{/.notdef}rp /g6 202{/.notdef}rp]
KKQNOX+Times-Roman nf
KKQNOX+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
309.45 141.122 mo
(500)sh
grestore
321.866 133.412 mo
321.866 132.552 li
@
328.185 133.412 mo
328.185 132.552 li
@
334.505 133.412 mo
334.505 132.552 li
@
340.824 133.412 mo
340.824 132.552 li
@
347.144 133.412 mo
347.144 131.978 li
@
gsave
338.403 134.431 mo
338.403 143.754 li
355.616 143.754 li
355.616 134.431 li
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: UPFCAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNOX+Times-Roman gcheck setglobal} if
1 444 3 <000100e300000325055e0016006f4019761486140226143614020cfd6208
e02203f96207e02314e00db8016eb2136214b8017e40110d0c0302040815
0508070c1817171a0203b80130b50c0c0d191718bc0178002101a5015d00
182b2b4ef43c4d10fd3c4e456544e6003f3c3f1217394df5edfc01f52b2b
313000715d001615111416171521353e0135113426232206073525330262
015270fdcc794a18281a5324016f0c05590509fb4c4d2a041c1e06365a03
9e30321d101cbb00>KKQNOX+Times-Roman AddT42Char 
KKQNOX+Times-Roman /CharStrings get begin
/g3 3 def
end
KKQNOX+Times-Roman /Encoding get
dup 49 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNOX+Times-Roman*1 
[48{/.notdef}rp /g2 /g3 3{/.notdef}rp /g6 202{/.notdef}rp]
KKQNOX+Times-Roman nf
KKQNOX+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
339.075 141.122 mo
(1000)sh
grestore
353.463 133.412 mo
353.463 132.552 li
@
359.782 133.412 mo
359.782 132.552 li
@
366.102 133.412 mo
366.102 132.552 li
@
372.422 133.412 mo
372.422 132.552 li
@
378.741 133.412 mo
378.741 131.978 li
@
gsave
369.96 134.431 mo
369.96 143.754 li
387.173 143.754 li
387.173 134.431 li
eclp
0 0 0 1 cmyk
KKQNOX+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
370.672 141.122 mo
(1500)sh
grestore
385.06 133.412 mo
385.06 132.552 li
@
391.38 133.412 mo
391.38 132.552 li
@
397.699 133.412 mo
397.699 132.552 li
@
404.019 133.412 mo
404.019 132.552 li
@
410.338 133.412 mo
410.338 131.978 li
@
gsave
401.876 134.431 mo
401.876 143.754 li
419.088 143.754 li
419.088 134.431 li
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: UPFCAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNOX+Times-Roman gcheck setglobal} if
1 632 4 <0001003d000003cb0564001b00b8404c2512016c006e016913036402960f
f60ff61404050f0614150f2514042b08142100000118190a0b010b0a0303
001a0318191119180b0a01050614066b0e051514a41a4000211b0c038811
bc19bb0208001d00000207b11d1c2fcce410f6f4ed003f1a3dcc181a3cfd
3c3fed111217390111123912391112173910c910c90705101ac531304379
401c04100825070d0a3500090a0c0b050f033501090c0635010410063501
002b2b012b103c103c2b2b8101715d005d71370801353426232207060727
3e0133321615140201213236371703213d016e0106a06f89552f2b2b32ef
89a9d1e2fe8601cb604e311a6ffce117017c0164a9949b64377209e6b3d5
9aa4fed0fe7b2e590cfee9000000>KKQNOX+Times-Roman AddT42Char 
KKQNOX+Times-Roman /CharStrings get begin
/g4 4 def
end
KKQNOX+Times-Roman /Encoding get
dup 50 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNOX+Times-Roman*1 
[48{/.notdef}rp /g2 /g3 /g4 2{/.notdef}rp /g6 202{/.notdef}rp]
KKQNOX+Times-Roman nf
KKQNOX+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
402.27 141.122 mo
(2000)sh
grestore
416.658 133.412 mo
416.658 132.552 li
@
422.977 133.412 mo
422.977 132.552 li
@
429.297 133.412 mo
429.297 132.552 li
@
435.616 133.412 mo
435.616 132.552 li
@
441.936 133.412 mo
441.936 131.978 li
@
gsave
433.432 134.431 mo
433.432 143.754 li
450.645 143.754 li
450.645 134.431 li
eclp
0 0 0 1 cmyk
KKQNOX+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
433.867 141.122 mo
(2500)sh
grestore
448.255 133.412 mo
448.255 132.552 li
@
454.575 133.412 mo
454.575 132.552 li
@
460.894 133.412 mo
460.894 132.552 li
@
467.214 133.412 mo
467.214 132.552 li
@
280.131 129.741 mo
281.565 129.741 li
@
gsave
256.284 134.431 mo
278.876 134.431 li
278.876 125.107 li
256.284 125.107 li
cp
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: UPFCAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNOX+Times-Roman gcheck setglobal} if
1 108 1 <000100dcffe801bf00cb000b00264013052a0b0b0d17171a082a02190c0d
c321788e182b2b4ef44dfd4e456544e6003f4ded31300426353436333216
15140623011e42432f2f42413018432f2f42422f2f430000>KKQNOX+Times-Roman AddT42Char 
KKQNOX+Times-Roman /CharStrings get begin
/g1 1 def
end
KKQNOX+Times-Roman /Encoding get
dup 46 /g1 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNOX+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 /g4 2{/.notdef}rp /g6 
202{/.notdef}rp]
KKQNOX+Times-Roman nf
KKQNOX+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
256.284 131.714 mo
(0.0000)sh
grestore
280.131 124.3 mo
280.992 124.3 li
@
280.131 118.86 mo
280.992 118.86 li
@
280.131 113.419 mo
280.992 113.419 li
@
280.131 107.978 mo
280.992 107.978 li
@
280.131 102.537 mo
281.565 102.537 li
@
gsave
256.284 107.177 mo
278.876 107.177 li
278.876 97.8542 li
256.284 97.8542 li
cp
eclp
0 0 0 1 cmyk
KKQNOX+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
256.284 104.509 mo
(0.0005)sh
grestore
280.131 97.0963 mo
280.992 97.0963 li
@
280.131 91.6552 mo
280.992 91.6552 li
@
280.131 86.2142 mo
280.992 86.2142 li
@
280.131 80.7733 mo
280.992 80.7733 li
@
280.131 75.3322 mo
281.565 75.3322 li
@
gsave
256.284 79.9243 mo
278.876 79.9243 li
278.876 70.6 li
256.284 70.6 li
cp
eclp
0 0 0 1 cmyk
KKQNOX+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
256.284 77.3052 mo
(0.0010)sh
grestore
280.131 69.8912 mo
280.992 69.8912 li
@
280.131 64.4503 mo
280.992 64.4503 li
@
280.131 59.0103 mo
280.992 59.0103 li
@
280.131 53.5692 mo
280.992 53.5692 li
@
280.131 48.1282 mo
281.565 48.1282 li
@
gsave
256.284 52.6703 mo
278.876 52.6703 li
278.876 43.3464 li
256.284 43.3464 li
cp
eclp
0 0 0 1 cmyk
KKQNOX+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
256.284 50.1002 mo
(0.0015)sh
grestore
280.131 42.6873 mo
280.992 42.6873 li
@
280.131 37.2462 mo
280.992 37.2462 li
@
280.131 31.8052 mo
280.992 31.8052 li
@
280.131 26.3643 mo
280.992 26.3643 li
@
280.131 20.9232 mo
281.565 20.9232 li
@
gsave
256.284 25.4163 mo
278.876 25.4163 li
278.876 16.0929 li
256.284 16.0929 li
cp
eclp
0 0 0 1 cmyk
KKQNOX+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
256.284 22.8962 mo
(0.0020)sh
grestore
280.131 15.4822 mo
280.992 15.4822 li
@
283.949 15.4293 mo
283.949 16.8643 li
@
290.269 15.4293 mo
290.269 16.2902 li
@
296.588 15.4293 mo
296.588 16.2902 li
@
302.907 15.4293 mo
302.907 16.2902 li
@
309.227 15.4293 mo
309.227 16.2902 li
@
315.546 15.4293 mo
315.546 16.8643 li
@
321.866 15.4293 mo
321.866 16.2902 li
@
328.185 15.4293 mo
328.185 16.2902 li
@
334.505 15.4293 mo
334.505 16.2902 li
@
340.824 15.4293 mo
340.824 16.2902 li
@
347.144 15.4293 mo
347.144 16.8643 li
@
353.463 15.4293 mo
353.463 16.2902 li
@
359.782 15.4293 mo
359.782 16.2902 li
@
366.102 15.4293 mo
366.102 16.2902 li
@
372.422 15.4293 mo
372.422 16.2902 li
@
378.741 15.4293 mo
378.741 16.8643 li
@
385.06 15.4293 mo
385.06 16.2902 li
@
391.38 15.4293 mo
391.38 16.2902 li
@
397.699 15.4293 mo
397.699 16.2902 li
@
404.019 15.4293 mo
404.019 16.2902 li
@
410.338 15.4293 mo
410.338 16.8643 li
@
416.658 15.4293 mo
416.658 16.2902 li
@
422.977 15.4293 mo
422.977 16.2902 li
@
429.297 15.4293 mo
429.297 16.2902 li
@
435.616 15.4293 mo
435.616 16.2902 li
@
441.936 15.4293 mo
441.936 16.8643 li
@
448.255 15.4293 mo
448.255 16.2902 li
@
454.575 15.4293 mo
454.575 16.2902 li
@
460.894 15.4293 mo
460.894 16.2902 li
@
467.214 15.4293 mo
467.214 16.2902 li
@
471.032 129.741 mo
469.597 129.741 li
@
471.032 124.3 mo
470.171 124.3 li
@
471.032 118.86 mo
470.171 118.86 li
@
471.032 113.419 mo
470.171 113.419 li
@
471.032 107.978 mo
470.171 107.978 li
@
471.032 102.537 mo
469.597 102.537 li
@
471.032 97.0963 mo
470.171 97.0963 li
@
471.032 91.6552 mo
470.171 91.6552 li
@
471.032 86.2142 mo
470.171 86.2142 li
@
471.032 80.7733 mo
470.171 80.7733 li
@
471.032 75.3322 mo
469.597 75.3322 li
@
471.032 69.8912 mo
470.171 69.8912 li
@
471.032 64.4503 mo
470.171 64.4503 li
@
471.032 59.0103 mo
470.171 59.0103 li
@
471.032 53.5692 mo
470.171 53.5692 li
@
471.032 48.1282 mo
469.597 48.1282 li
@
471.032 42.6873 mo
470.171 42.6873 li
@
471.032 37.2462 mo
470.171 37.2462 li
@
471.032 31.8052 mo
470.171 31.8052 li
@
471.032 26.3643 mo
470.171 26.3643 li
@
471.032 20.9232 mo
469.597 20.9232 li
@
471.032 15.4822 mo
470.171 15.4822 li
@
gsave
356.333 154.512 mo
395.062 154.512 li
395.062 145.547 li
356.333 145.547 li
cp
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: VTUBAA+Times-Italic Initial
ct_T42Dict begin
-0.293 -0.41 1.66 1.203
 256 array 0 1 255 {1 index exch /.notdef put} for  /VTUBAA+Times-Italic
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
74200000000000000124000005446670676d0000000000000668000007d6
676c7966000000000000165c0000029468656164d5f2d98a00000e400000
0036686865610000000000000e7800000024686d74780000000000000e9c
000000086c6f63610000000000000ea4000000066d617870000000000000
0eac000000206e616d65bc8da1ba00000ecc000000287072657000000000
00000ef40000076667646972000000000000000000000000000100000190
000500000000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff0000000000000000000000000001000000000000057400000538001a
05550013036d001a0000ffda0000ffe80000fff1fe5afffe0534002dfeaa
ffe1031c000000a0000000a00000000000000000002100aa009400c20078
007d0021008200b80028002a0046000300a8004d005900e4014000300002
009b0087009400f600180047006b01e0001a00ab006800ce000300250045
0097001600470064007600b800260043008700b500dc0037005b007900b1
00c900d60021002c0052005500c402adffd20031009800d001b70403ff90
001a002e0036006d0084008effac002d003d00470080008601230173ffed
005d005d006d0082009100a200d4ffd2ffda0007000a0028002a003c003d
0051008700b10109011e014001850006000e001000250030005000550056
00a200b401080247ff72ffda0013003400400041004800580068007b008c
009a00b100c300da015e027403adff44ffbdffcf0000002400250026002d
0039004a004f007200740087009700b600b900f90156020eff24ffa1ffb9
ffc7ffef000000020005001d001f0024003d004b0058005d0067008e009a
00b800c900d800da00da00e400e6010c013b014101500185019801c701d3
0245032d038703b20410051ffff8001c00210027002a002a00300037003b
0055005c005f00610072008d00a400ad00b100ea00f60118012401340144
01a1021d02290266026f02c402ef0403048b04e4ffea0000000200020003
0007002e00350039003e004c004c0055006d0077008a008e009000930094
0096009a00a800c000cb00dc00df00ed00f900fc0105010701080128012f
01340149019801d801de020e02160223024202df032b033e036f04d104e4
0545fe8efef2ff58ff59ff71ffbbffc7ffde0007001d001f002d0039005b
005e005f0064006700760079007e008000800080008300830088009f00a6
00a900aa00af00be00c000c800cb00ce00d200dd00df00eb00ec00ed00ed
00f400f800fc00fd0108010c011001100115011c011c0125012d013b013e
0140015001510176017e018001830184018e0198019d01b401bb01ca01d3
02470258025d027d028802bc02d102d302dc02e802ec02f70309031d0321
038703c90447045a04ac050e055f057b058005af0636fdf4fe37fe57fe5e
fe76fecdff07ff0eff2aff76ff7dff9effb8ffb9fff0000000020008000f
00170023002a002b004b004c004e004e00500051005d006200630066006b
0072007800960097009a009b009f00a900ac00ad00b700c300ca00ce00d1
00da00dd00e600ed00f700fb00fd00fe01000104010501190123012a0132
014001470151015401550158015c015e015f016601680171017a017b0180
018b018b018e0191019801a101af01b101c301ea01f401f602000205020c
02110220022c024202470255025502610266026d027b028702920295029a
029f02a602a702b002b402cb02d102ee02fe030b030e0325033703370345
034c034e03610371038e03a303a603ab03cc03d003ed03fc03fd03fd0434
0439044f047b049404c204da04da04f00511052f053805550564056b056e
058a059505ad05b205dd05fb063606b00723075207820788079707ad009e
00c6009900a200000000000000000000000000bd00150000000000000000
000000000000000000000000000000000000000000000000000000000000
0000009b00ae02cd024500e000eb017b0183023800c9003101ae0050045a
00c400e4011c02fa029601ca0079004b006301af001605740002054b001d
054b0018039700130000ffe30000ffed0000ffeafe420000054b001dfebd
ffd6031e0000006affd60580004c008a007b0012005500cd00e80409014e
0028005f0334001f006400820030002a002a002a403231302f2e2d2c2b2a
292827262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c
0b0a090807060504030201002c4523466020b02660b004262348482d2c45
2346236120b02661b004262348482d2c45234660b0206120b04660b00426
2348482d2c4523462361b0206020b02661b02061b004262348482d2c4523
4660b0406120b06660b004262348482d2c4523462361b0406020b02661b0
4061b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a
51582320b08d44235920b0ed51582320b04d44235920b0042651582320b0
0d44235921212d2c20204518684420b001602045b04676688a4560442d2c
01b93dadeeeb0a2d2c00b911163dad0b2d2c2045b00043617d6818b00043
60442d2c45b01a234445b01923442d2c2045b00325456164b05051584544
1b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c
01b00743b006430a2d2c2069b04061b0008b20b12cc08a8cb8100062602b
0c642364615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0
112bb01723442d2c45b0112bb017458cb0172344b0177ae5182d2cb00225
4661658a46b040608b482d2cb0022546608a46b040618c482d2c4b53205c
58b002855958b00185592d2c20b0032545b019234445b01a234445652345
20b00325606a20b009234223688a6a606120b01a8ab000527921b21a1a40
b9ffe0001a45208a54582321b03f1b235961441cb114008a5279b3194020
1945208a54582321b03f1b235961442d2cb9187e3b210b2d2cb92d412d41
0b2d2cb93b21187e0b2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187e
c4e00b2d2c4b525845441b2121592d2c0120b003252349b04060b0206320
b000525823b002253823b002256538008a63381b212121212159012d2c45
69b00943608a103a2d2c01b005251023208af500b0016023edec2d2c01b0
05251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b001
600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00
b0064365b007430b2d2c3eb02a2a2d2c352d2c76b01b23701020b01b4520
b0005058b00161593a2f182d2c21210c6423648bb84000622d2c21b08051
580c6423648bb82000621bb200402f2b59b002602d2c21b0c051580c6423
648bb81555621bb200802f2b59b002602d2c0c6423648bb8400062602321
2d2cb4000100000015b00826b00826b00826b008260f10161345683ab001
162d2cb4000100000015b00826b00826b00826b008260f1016134568653a
b001162db800322c4bb800095058b101018e59b801ff85b800441db90009
00035f5e2db800332c2020456944b001602db800342cb800332a212db800
352c2046b003254652582359208a208a49648a204620686164b004254620
686164525823658a592f20b00053586920b000545821b040591b6920b000
545821b0406559593a2db800362c2046b00425465258238a592046206a61
64b0042546206a61645258238a592ffd2db800372c4b20b0032650585158
b080441bb04044591b21212045b0c05058b0c0441b2159592db800382c20
20456944b001602020457d691844b001602db800392cb800382a2db8003a
2c4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a
235920b0032653582321b801008a8a1b8a235920b0032653582321b80140
8a8a1b8a235920b80003265358b0032545b8018050582321b8018023211b
b003254523212321591b2159442db8003b2c4b535845441b2121592db800
3c2c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db8
003d2c2020456944b001602db8003e2cb8003d2a212db8003f2c2046b003
254652582359208a208a49648a204620686164b004254620686164525823
658a592f20b00053586920b000545821b040591b6920b000545821b04065
59593a2db800402c2046b00425465258238a592046206a6164b004254620
6a61645258238a592ffd2db800412c4b20b0032650585158b080441bb040
44591b21212045b0c05058b0c0441b2159592db800422c2020456944b001
602020457d691844b001602db800432cb800422a2db800442c4b20b00326
5358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b00326
53582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a2359
20b80003265358b0032545b8018050582321b8018023211bb00325452321
2321591b2159442db800452c4b535845441b2121592db800462c4bb80009
5058b101018e59b801ff85b800441db9000900035f5e2db800472c202045
6944b001602db800482cb800472a212db800492c2046b003254652582359
208a208a49648a204620686164b004254620686164525823658a592f20b0
0053586920b000545821b040591b6920b000545821b0406559593a2db800
4a2c2046b00425465258238a592046206a6164b0042546206a6164525823
8a592ffd2db8004b2c4b20b0032650585158b080441bb04044591b212120
45b0c05058b0c0441b2159592db8004c2c2020456944b001602020457d69
1844b001602db8004d2cb8004c2a2db8004e2c4b20b003265358b0801bb0
40598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321b801
008a8a1b8a235920b0032653582321b801408a8a1b8a235920b800032653
58b0032545b8018050582321b8018023211bb003254523212321591b2159
442db8004f2c4b535845441b2121592d00000001000000000000b1b0afba
5f0f3cf50111080000000000a252b00000000000c88fde35fda2fcb30d49
09a4000200090001000000000000000100000600fe0000000ce1fda2fda2
0d4908000225000000000000000000000000000204e3ffee05c700170000
0036014a00000001000000020087000600c0000800020010001000500000
07e807d6000400010000000100120001000000000006001300004944544c
55422b54696d65732d4974616c6963000000b800462bb8003c2bb800322b
bc029c010c003c001f0295b250391fb80294402b50391f90069007029d49
ad4902ad72ad8b029d729d8b02ad1fad3a029d1f9d3a02ad20ad50029d20
9d5002b80290b33a341f15b8028bb2471f14b8028ab2471f13b80289b247
1f12b80288b2471f11b80287b2471f10b80286b2471f0fb80285b2471f0e
b80284b2471f0db80283b2471f0cb80282b2471f0bb80281b2471f0ab802
80b2471f09b8027fb2471f08b8027eb2471f07b8027db2471f06b8027cb2
471f05b8027bb2471f04b8027ab2471f03b80279b2471f02b80278b2471f
01b80277b2471f00b80276400f471f000101010009010200080008404114
023d016e0070000d016a0070000d015b0070000d01530070000d01140070
000d01100070000d0104b4700d6f700d410a01cf0068000d01c70068000d
01630068000d0113400e680def680de4680dc7680dc5680dbe0168004d00
0d011d004d000d010540144d0dcd4d0db04d0d8a4d0d3c4d0d324d0d2a4d
0d410a01f2004a000d01e4004a000d0121004a000d011e40174a0df64a0d
d54a0dd14a0dad4a0d634a0d344a0d254a0db801d74011850ddd850da985
0d26850d23850d1d850db801aeb40f4b0f0009bb01ae004b000d01d0b250
2c1fbc01c300200101001f01c1b220bb1f411901c0003a0401001f01be00
3a0401001f01b9001f0401001f01b600430125001f01af00540125001f01
ab00270801001f0160b250351fb8015eb2503d1fb8015cb2505a1fb8015a
b2505e1fb80159b250621fbc015700500125001f0154b220e41f41110152
00200401001f014e003a0401001f014d008b0201001f014c008b02ab001f
0148b21f671fb80144b243621f4109014100430401001f013e0054015600
1f011cb2502c1f410d011500200401001f0111001f0401001f010e001f01
56001f010db41fcd1fed3ab80156b21fea1fb80125b21fe554b80401b21f
df27b802ab400b1fde27e41fcc50931fcb50b80201b21fc254b802abb21f
bf27b80156b61fae1f9e1fa827b802abb21fa527b80156b21f9d50b80201
b21f9c20b80801b21f9654b802abb21f9528b80401b21f9428b8019ab61f
9227cd1f7e3ab80156400b1f7d1f9e1f7a28cd1f6e43b80125b21f6d43b8
0125b21f6728b80801400b1f6628e41f621f811f5227b80401b21f4f20b8
0125b21f4c54b80156b61f493acd1f4728b802abb21f4627b80201b61f45
20cd1f4228b80801b21f401fb802abb21f3f28b80801b21f3743b80125b2
1f3628b80801b21f331fb80401b21f318bb80125b21f2f27b80156b61f2d
50931f2c54b80201b21f2b28b80125400f1f241f721f2143671f551f091f
0990bb018300070090017e403907909f07908007907307906b07906a0790
5607904807903807902e07902207901e071408120810080e080c080a0808
08060804080208000814b8ffe0402a000001001406100000010006040000
01000410000001001002000001000200000001000002010802004a411802
8a00080288000802860008028400080282000802800008027e0008027c00
08027a00080278000802760008028affe0b300000100b9028a027cb41000
000100b9027c027ab300000100b9027a0286b300000100b902860278b300
000100b902780276b300000100b80276b302010802b80276b24a0000b801
ff85b0018db0068858b001b0018e1bb000b0018e59181616763f183f123e
113946443e113946443e113946443e113946443e11394660443e11394660
442b2b2b2b2b2b2b2b2b2b2b18763f183f123e113946443e113946443e11
3946443e113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b
2b182b2b2b2b2b2b2b2b2b2b2b2b2b014b5079bf001f01ee0007001f01bf
0007001f01b1b6071fce071fac072b2b2b2b2b4b5379bf009001ee000700
9001bf0007009001b1b60790ce0790ac072b2b2b2b2b181db0964b5358b0
aa1d59b0324b5358b0ff1d594bb02e53205c58b9023f023d4544b9023e02
3d45445958b900de023f455258b9023f00de4459594bb05a53205c58b900
1f023f4544b9003a023f45445958b901aa001f455258b9001f01aa445959
4bb06353205c58b90020023e4544b90050023e45445958b9027700204552
58b9002002774459594bb0e453205c58b1723a4544b13a3a45445958b904
bd0072455258b9007204bd4459594bb0e453205c58b18b3a4544b13a3a45
445958b904bd008b455258b9008b04bd4459594bb01b53205c58b1272745
44b1432745445958b12227455258b127224459594bb02453205c58b12727
4544b1542745445958b12e27455258b1272e4459594bb03753205c58b127
274544b1282745445958b14727455258b127474459592b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b456953421600
3f3f182b103c012f070cb0062342b00723422b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b73737373737373732b2b2b000000>
[661 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 108 1 <00010017ffea05a103890052013140ba3b4f4a3c4a3d4f4f752d753c872d
07053e0743291c27513610354c354d3651c54ad74ae54a0b4e4e4f3f4d4d
414a7043682849234a4b4c4334052625100f06083a144d0a2c284e1a1911
06053a424e4d410605341110194019211a491a10540f10101f1225252634
33331f123232054342421f1241414d2c370a3a3752524c0a074241332832
0a14431e0b25532826108025011025442554259225b225052525530a0510
543264328232ab32b632db32e43207324d10413e90182b2f2b3c012f5d2b
3c2b103c012f5d712b3c2b10c0003fed3f2b3c3c3c003f3c3c10ed10ed87
052e2b0e7d10c487052e182b0e7d10c4870e2e182b7d10c401111239762f
3d1acc1a1811123911123911123900111217392b11123911121739180010
f5ed2bfc01f587100e7dc4083c3130015d005d0017161514060736373633
3216151407030616333236373e013717070e012322272635343637133e01
353426232206070e010723133e01353426232206070607060723133e0135
34260735363717033637363303221f30212b6f50916f2f4e1393040e1312
1b1514193b1f0a4892472016220505900303191343b2423c31419bbe0203
15183fb93b3a3520359ac30304364d65e208756f638868038916214c2279
86aa59a140471655fddf0d1b1215141e48180e6679101a3d0f221502300c
1008181aca686a8ff202c7091109181bd25b59945aa902c70b140b271003
22103207fe63a46e92000000>VTUBAA+Times-Italic AddT42Char 
1 0 0 <0002ffed0000062305380003000700424009040745000506450201b8022a
40130303000a0607450100190802034505045909feb9016c00182b10f43c
fd3c4e10f43c4dfd3c003f3c10fd3cfd3c10fd3c31302311211127112111
130636b8fb3a0538fac8b803c8fc38000000>VTUBAA+Times-Italic AddT42Char 
VTUBAA+Times-Italic /CharStrings get begin
/g1 1 def
end
VTUBAA+Times-Italic /Encoding get
dup 109 /g1 put
pop
end
%ADOEndSubsetFont
/KKQNOY+Times-Italic /VTUBAA+Times-Italic findfont ct_VMDictPut
/KKQNOY+Times-Italic*1 
[109{/.notdef}rp /g1 146{/.notdef}rp]
KKQNOY+Times-Italic nf
KKQNOY+Times-Italic*1 [8.0685 0 0 -8.0685 0 0 ]msf
356.755 152.06 mo
(m)sh
%ADOBeginSubsetFont: UPFCAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNOX+Times-Roman gcheck setglobal} if
1 1728 8 <00020031ffe305a10563002f003000bf401be602012808237a1b1ea72219
211b1d2823051b067e40081b210707b801074031067e4002a1262f252319
03121d1e1e270c2e302f03122e27090761231918292430302b249f23cf23
022f234f23bf230323b80204b3320f542bb80205b132312fccf4ed10f65d
5d3c12392f10fd3c10e4003fed3f3ced12392f3c121739103d1aec181af4
ed01103d1aed1a18f4ed2b2b31304379401c282e0d1129252d2611280f37
000d2e0f3700102a1237000e2c0c37012b2b012b2b2b2b8181005d001633
323637331323262726232200111000333236373e01351134262735211506
07061511140423202726111037362123036de6112c250d2d102f3f4379c2
c5fed5012adb25642d49244371020a4c192afe9fa3fed4cee3b5c7014921
0563422220fe51954980fed5fea9fee5fec20e0f1823220147763a072626
05142064fe6d2478afc10145011ecce10000>KKQNOX+Times-Roman AddT42Char 
1 2076 9 <00010021ffe80592054b001f00fd40436a196a1a02171977198619c71ec7
1fd61ed61ffa13fa140909130914191319142813281406080909070a0b0b
090049000907132d18124712090b1411011e1b1f7c1b40b8ff864031091a
19201819192c1209090b1b1a1a29120909071b1a1907041f0b1813091b18
0b0907051a1f131200021a19090f210121b8020ab39b130113b801b9b39b
090109b8014e400d20501f801f02401f01001f011fb9020900202ff45d5d
5d1a19fd5dfd5d18e65d003f3c3f3c3c3c1217390111123939121739874d
2e2b0e7d10c505872e182b0e7d10c52b1a1810f500fd3c3c3c0111123976
2f180110f501111239762f1887100e3c87100e3c313001715d005d011506
07061514161709013e013534272627352115060706070123012e01273502
424d1c312330014001231314331e4501a3411f2f2efe3b1ffe07404d4a05
4b2601091031195a6afd3703043346163b150c022623091a2776fb800466
8f460523>KKQNOX+Times-Roman AddT42Char 
1 3096 12 <00030028ffe8035e03aa0013001c001d00d9405d69086a0c6f126c157b07
79087a0c7d117f127d147d15fc0ef60f0d550866086011c404c712d404e6
09e20f083d08090a171803090a02090a03061739100301034703061c1c63
1d13079206a2060206410d0b1d18fe02421d10cf0a010ab80202b31f03db
10b80201b11f1e2fccf4ed10f65d1239f4ed2f003fed5d3f3ced11123976
2f5d18fd111239390111123911123910c931304379402a0e1b000515251a
261412171e0016171b00181e011918050e03260016111c1e0119011c1e01
040f062600002b2b2b012b103c2b103c2b2b2b8181005d015d001615211e
0133323637170e0123220235341233060706072126272623370262d4fd85
0abe8269903d2329e1a3bccdeebfac3c200e01a60b1b31732d03aac3b3e8
d46e650c7fd8011cb9c901244965365264315849>KKQNOX+Times-Roman AddT42Char 
1 3416 13 <00010012000003e50574003000b64016451601f9170109171a17021a0810
2f1f3002233f1c1fb801fb403b22033f001c3020241a3f1c1e20232b3f1c
2f20230bda04500a1c0b9029232b2b29231a11030627300410150f00273e
1507302f1f1e0a24232f191ab80200b63210272b2f0403b801ffb132312f
ccf43cfde410f63cfd3c003f3c3c3c3fed3f123939111217390111123900
f5edfc01f52b2b2b2b015d00313043794010252616182616241e01171825
17271e012b01103c2b818100715d0171373e013511342623220607353e01
3f0117113637363332171615111416171521353e01351134262322061511
14161715211252331d380b150d2c811960023f315866a23b20314cfe4f57
32415a4e923455fe471c0b3b6e03c038350302240d25081e07fd9a48223c
884875fe686a400a1c1c0c3a6e019561787011fe1370380c1c000000>KKQNOX+Times-Roman AddT42Char 
1 3744 14 <000200280000020e0574000b0025005d4026230c0f3f0c1c252024232020
18201050171c18921c201f100f041c25089502001c0725240a27b8020040
0a200b9505271f20dd100fb901ff00262ff43cfd3cf4ed10e6003f3c3f3f
4ded1112173910f5edfc01f510f52b103c31301236333216151406232226
35033e013511342726232206073537363736331615111416171521a83c2c
2b3d3d2b2c3c806b38090f300b15322baf451c08023761fe1a05363e3d2c
2b3d3d2bfb110a357501dd411929040e1f0e391d0c0708fd32723a081c00
0000>KKQNOX+Times-Roman AddT42Char 
1 3956 15 <00020021000003e303ae0033003400b74059191a4d1a02960ea60e021a08
1f2110321f332f213f2105253f1c2120220343001c3320241c3a1c202023
2e3a1c3220230c20043a0b1c0c900f2e2d251c1304030733120f293e1727
0f07333221200a34073426252f34041b1cb80200b73612272e2f030304b8
01ffb136352fccf43c10fde410f63c1239fd3c2f003f3f3c3c3c3ff4ed11
3911173910f5edfc01f52b2b2b2b055d043130437940102728181a281826
1e01191a2719291e012b01103c2b8181005d71373e013511342726232206
0735363f0132161d013637363332171615111416171521353e0135113426
2322070607111416171521012547390c133b09130e29995e07035c344e54
44386c3a44fe55493a40563b3d22364045fe4b01dc1c09355c01fb401a26
0202230c321f0a0993562031274cc3fe2d4840011c1c0a3d6601ab567128
1735fdd04831021c03ae>KKQNOX+Times-Roman AddT42Char 
KKQNOX+Times-Roman /CharStrings get begin
/g8 8 def
/g9 9 def
/g12 12 def
/g13 13 def
/g14 14 def
/g15 15 def
end
KKQNOX+Times-Roman /Encoding get
dup 71 /g8 put
dup 86 /g9 put
dup 101 /g12 put
dup 104 /g13 put
dup 105 /g14 put
dup 110 /g15 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNOX+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 /g4 2{/.notdef}rp /g6 
17{/.notdef}rp /g8 14{/.notdef}rp /g9 14{/.notdef}rp /g12 2{/.notdef}rp /g13 
/g14 4{/.notdef}rp /g15 145{/.notdef}rp]
KKQNOX+Times-Roman nf
KKQNOX+Times-Roman*1 [5.72863 0 0 -5.72863 0 0 ]msf
362.492 153.348 mo
(hh)
[2.86432 0 ]xsh
KKQNOX+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
370.74 152.06 mo
(inGeV)
[2.24435 6.366 5.83218 3.58365 0 ]xsh
grestore
gsave
364.581 7.48627 mo
364.581 15.3763 li
386.456 15.3763 li
386.456 7.48627 li
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: IRPBAA+Mathematica1 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /IRPBAA+Mathematica1 def
/FontInfo 6 dict dup begin
/Notice (Mathematica typeface design by Andre Kuzniarek, with Gregg Snyder and Stephen Wolfram. Copyright \\\(c\\\) 1996-2001 Wolfram Research, Inc. [http://www.wolfram.com]. All rights reserved. [Font version 2.00]) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /Equal put
dup 127 /Delta put
def
/UniqueID 5095641 def
/FontBBox {0 -16 579 682} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-16 -0 444 468 662 677] def
/OtherBlues [-209 -203] def
/BlueScale 0.0416667 def
/StdHW [105.846] def
/StdVW [74.419] def
/StemSnapH [65.543 105.846] def
/StemSnapV [58.407 74.419] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/Equal <1C60D8A8C9B678BD19BF6CFABC23FF7AEEAECC7A009FA979A1EF19ED
0D1F025A329E7E77E19D93F6A5877C> |-
/Delta <1C60D8A8C9B74A3E7F4B7A2810C76C66EE45608F7902E780507D6243
C09B0190B500DF3ED0C70BDF1D905517179531E8F32F4BC3186B33A278AD594F
6FB11C1337235F0F1F8688C88617B9188F0CE07806009FEEFC8BDEA030083C1F
EB11883A15A6A9F1AC2F45EF9DDDA1B77CEDF96CCC07AB18F46D31A7101EA813
9F1D49CCFE3448F1F0> |-
/.notdef <1C60D8A8C9B5EE31F4> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/KKQNOZ+Mathematica1 /IRPBAA+Mathematica1 findfont ct_VMDictPut
/KKQNOZ+Mathematica1*1 
[32{/.notdef}rp /Equal 94{/.notdef}rp /Delta 128{/.notdef}rp]
KKQNOZ+Mathematica1 nf
KKQNOZ+Mathematica1*1 [7.5306 0 0 -7.5306 0 0 ]msf
364.823 13.2242 mo
(\177)sh
%ADOBeginSubsetFont: UPFCAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNOX+Times-Roman gcheck setglobal} if
1 2440 10 <00020007ffed03bd057400180025008d402af50c01060c019a0d01230801
da1550001c01902306250723211b06150b0300213e0b071b63110b1e440e
b80202400a272527062f14c0150115b801ffb127262fccf45d3cfde410f6
ed003fed3fed3f123939111239390111123900f5edfc01f5313043794018
1c200c10200c1e26011c101e26011f0d2126011d0f1b2600002b2b012b2b
8181005d01715d13353e0133161511363736333216151400232226351134
2623001633323635342623220615110772b607021a345c7893d0fef2dc6f
d6203a01098a348c877e8d478804f8221a400606fd9f302b4bf8c6d4fed2
582c04213a31fb612dd29595fd5743fe02000000>KKQNOX+Times-Roman AddT42Char 
KKQNOX+Times-Roman /CharStrings get begin
/g10 10 def
end
KKQNOX+Times-Roman /Encoding get
dup 98 /g10 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNOX+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 /g4 2{/.notdef}rp /g6 
17{/.notdef}rp /g8 14{/.notdef}rp /g9 11{/.notdef}rp /g10 2{/.notdef}rp /g12 
2{/.notdef}rp /g13 /g14 4{/.notdef}rp /g15 145{/.notdef}rp]
KKQNOX+Times-Roman nf
KKQNOX+Times-Roman*1 [7.5306 0 0 -7.5306 0 0 ]msf
368.325 13.2242 mo
(b)sh
KKQNOZ+Mathematica1*1 [7.5306 0 0 -7.5306 0 0 ]msf
371.992 13.2242 mo
( )sh
KKQNOX+Times-Roman*1 [7.5306 0 0 -7.5306 0 0 ]msf
377.015 13.2242 mo
(0.1)sh
grestore
gsave
329.438 22.9063 mo
329.438 62.7113 li
338.045 62.7113 li
338.045 22.9063 li
eclp
0 0 0 .791016 cmyk
KKQNOY+Times-Italic*1 [0 6.9927 6.9927 0 0 0 ]msf
332.285 23.3232 mo
(m)sh
%ADOBeginSubsetFont: UPFCAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNOX+Times-Roman gcheck setglobal} if
1 1556 7 <00010028ffed0397054b000c0072401c7b0a8708a30703690774088a0784
09040809080c0009080905040303b8012d4017120202010403020309010e
00010405a4000c0403020c00bb0208000e00090209b10e0d2fcce410e600
3f3c3f3c4dfd3c3901111239121739872e2b7d10c5001239390111123939
10c93130005d015d011501230121220607273e01370397fe4e840195fe4c
61554123411f19054b21fac304c7406610a04b420000>KKQNOX+Times-Roman AddT42Char 
KKQNOX+Times-Roman /CharStrings get begin
/g7 7 def
end
KKQNOX+Times-Roman /Encoding get
dup 55 /g7 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNOX+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 /g4 2{/.notdef}rp /g6 
/.notdef /g7 15{/.notdef}rp /g8 14{/.notdef}rp /g9 11{/.notdef}rp /g10 
2{/.notdef}rp /g12 2{/.notdef}rp /g13 /g14 4{/.notdef}rp /g15 145{/.notdef}rp]
KKQNOX+Times-Roman nf
KKQNOX+Times-Roman*1 [0 4.96482 4.96482 0 0 0 ]msf
331.165 28.3435 mo
(hh)
[2.48242 0 ]ysh
KKQNOZ+Mathematica1*1 [0 6.9927 6.9927 0 0 0 ]msf
332.285 33.7228 mo
( )sh
KKQNOX+Times-Roman*1 [0 6.9927 6.9927 0 0 0 ]msf
332.285 38.3869 mo
(700GeV)
[3.49634 3.49634 3.40503 5.0545 3.10583 0 ]ysh
grestore
gsave
425.543 27.2093 mo
425.543 36.5333 li
458.176 36.5333 li
458.176 27.2093 li
eclp
.882813 .769531 0 0 cmyk
%ADOBeginSubsetFont: IRPBAA+Mathematica1 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
systemdict begin
KKQNOZ+Mathematica1 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/Minus <1C60D8A8C9B679732A785EF52339D83AC731F233DBBD9E391A9B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
KKQNOZ+Mathematica1 /Encoding get
dup 33 /Minus put
pop
%ADOEndSubsetFont
/KKQNOZ+Mathematica1*1 
[32{/.notdef}rp /Equal /Minus 93{/.notdef}rp /Delta 128{/.notdef}rp]
KKQNOZ+Mathematica1 nf
KKQNOZ+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
426.157 33.7782 mo
(\177)sh
%ADOBeginSubsetFont: UPFCAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNOX+Times-Roman gcheck setglobal} if
1 916 5 <00010059fff10376056a002f0095403c49195b070207241624290739074b
076a076a0879077b08a919c6240b172118181700032c0122100d18170213
0c02f52940220d21c0090109092f1313b80173400f1b052f88290d106b1e
056ba0260126bd02000031000d0136002c0209b131302fccf4e410f65de5
d4ed003fed3fed1112392f5d3d1add7dcc181a10fd111217390111123939
121739101a18c93130015d005d36163332363534272623220607273e0135
34262322070607273e013332161514070607161716151400212226353436
33d6b53f8c88375ddd0d181002a0b8915d6e542e351f28da8f99a7452752
603a6dfed5feec7b632125ae72bd6f6b518901021a3a967b6d72512c5c07
98b6a86e61512e39293769a1befede492a1a30000000>KKQNOX+Times-Roman AddT42Char 
1 2700 11 <00020031ffed03ed0576002d003a00db406d9828a928cb28c92ce32cf42c
06006d2e7c2e8b2e9b2eab2bac2eba2bbb2ecd2bcc2ec638dc2bdb2ed538
0e032b4c290223080bda04500a1c0b90111e2017501d1c1e92213231302f
0417042227322f23170305343a04122d110134332d073a3e2727210b2204
2f122740170117b80200b63c37449e2a012ab80201b13c3b2fccf45ded10
f65df4fd3c003f3c10ed3fed3f12393911121739123901111217390010f5
edfc01f50010f5edfc01f53130437940183539282c352c37260039283726
00362b34260138293a2600002b2b012b2b818100715d01715d0017161711
34262322060735373e0137363717070e01150314163332363715060f0127
350607062322023534123312363511342623220615141633022e3d28251b
330c121f522d5a221025060201020220450b160b068b9d0738294960aad3
fdb773608b427e8c959403b1201525013e3d2e020321150c1a0c050e0269
39793bfccf413401022102303b097b3d1a2d0107add90137fca85c2901ad
826bdfa3a1fc>KKQNOX+Times-Roman AddT42Char 
KKQNOX+Times-Roman /CharStrings get begin
/g5 5 def
/g11 11 def
end
KKQNOX+Times-Roman /Encoding get
dup 51 /g5 put
dup 100 /g11 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNOX+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 /g4 /g5 /.notdef 
/g6 /.notdef /g7 15{/.notdef}rp /g8 14{/.notdef}rp /g9 11{/.notdef}rp 
/g10 /.notdef /g11 /g12 2{/.notdef}rp /g13 /g14 4{/.notdef}rp 
/g15 145{/.notdef}rp]
KKQNOX+Times-Roman nf
KKQNOX+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
429.909 33.7782 mo
(d)sh
KKQNOX+Times-Roman*1 [5.72863 0 0 -5.72863 0 0 ]msf
434.047 35.0669 mo
(3)sh
KKQNOZ+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
437.274 33.7782 mo
( !)
[5.38205 0 ]xsh
KKQNOX+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
447.674 33.7782 mo
(0.3)sh
grestore
gsave
425.543 35.0993 mo
425.543 44.4223 li
447.059 44.4223 li
447.059 35.0993 li
eclp
0 0 0 1 cmyk
KKQNOZ+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
426.028 41.6672 mo
(\177)sh
KKQNOX+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
429.78 41.6672 mo
(d)sh
KKQNOX+Times-Roman*1 [5.72863 0 0 -5.72863 0 0 ]msf
433.917 42.9563 mo
(3)sh
KKQNOZ+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
437.145 41.6672 mo
( )sh
KKQNOX+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
442.526 41.6672 mo
(0)sh
grestore
gsave
424.826 42.2713 mo
424.826 51.5943 li
452.438 51.5943 li
452.438 42.2713 li
eclp
0 .994141 1 0 cmyk
KKQNOZ+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
425.508 49.0122 mo
(\177)sh
KKQNOX+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
429.26 49.0122 mo
(d)sh
KKQNOX+Times-Roman*1 [5.72863 0 0 -5.72863 0 0 ]msf
433.397 50.3012 mo
(3)sh
KKQNOZ+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
436.624 49.0122 mo
( )sh
KKQNOX+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
442.006 49.0122 mo
(0.3)sh
grestore
.5379 lw
2 lc
41.6838 272.127 mo
51.3298 272.127 li
51.3298 196.412 li
60.9748 196.412 li
60.9748 193.098 li
70.6198 193.098 li
70.6198 229.298 li
80.2658 229.298 li
80.2658 256.905 li
89.9108 256.905 li
89.9108 273.217 li
99.5568 273.217 li
99.5568 281.242 li
109.203 281.242 li
109.203 286.345 li
118.848 286.345 li
118.848 289.006 li
128.493 289.006 li
128.493 291.012 li
138.139 291.012 li
138.139 292.277 li
147.785 292.277 li
147.785 292.495 li
157.43 292.495 li
157.43 292.931 li
167.076 292.931 li
167.076 293.062 li
176.721 293.062 li
176.721 293.28 li
196.012 293.28 li
196.012 293.367 li
205.658 293.367 li
205.658 293.323 li
215.303 293.323 li
215.303 293.411 li
224.949 293.411 li
.882813 .769531 0 0 cmyk
@
41.6838 279.953 mo
51.3298 279.953 li
51.3298 227.487 li
60.9748 227.487 li
60.9748 217.595 li
70.6198 217.595 li
70.6198 237.519 li
80.2658 237.519 li
80.2658 252.689 li
89.9108 252.689 li
89.9108 262.756 li
99.5568 262.756 li
99.5568 270.271 li
109.203 270.271 li
109.203 276.353 li
118.848 276.353 li
118.848 279.918 li
128.493 279.918 li
128.493 283.064 li
138.139 283.064 li
138.139 284.323 li
147.785 284.323 li
147.785 286.944 li
157.43 286.944 li
157.43 290.579 li
167.076 290.579 li
167.076 291.558 li
176.721 291.558 li
176.721 292.572 li
186.366 292.572 li
186.366 292.921 li
196.012 292.921 li
196.012 293.131 li
205.658 293.131 li
205.658 293.201 li
215.303 293.201 li
215.303 293.236 li
224.949 293.236 li
224.949 293.411 li
0 0 0 1 cmyk
@
41.6838 285.983 mo
51.3298 285.983 li
51.3298 257.113 li
60.9748 257.113 li
60.9748 247.327 li
70.6198 247.327 li
70.6198 246.921 li
80.2658 246.921 li
80.2658 252.071 li
89.9108 252.071 li
89.9108 258.875 li
99.5568 258.875 li
99.5568 259.932 li
109.203 259.932 li
109.203 263.701 li
118.848 263.701 li
118.848 269.393 li
128.493 269.393 li
128.493 272.917 li
138.139 272.917 li
138.139 275.113 li
147.785 275.113 li
147.785 279.992 li
157.43 279.992 li
157.43 284.275 li
167.076 284.275 li
167.076 289.534 li
176.721 289.534 li
176.721 291.459 li
186.366 291.459 li
186.366 292.462 li
196.012 292.462 li
196.012 292.896 li
205.658 292.896 li
205.658 293.031 li
215.303 293.031 li
215.303 293.139 li
224.949 293.139 li
224.949 293.384 li
0 .994141 1 0 cmyk
@
1.90919 lw
80.2658 293.411 mo
80.2658 182.77 li
0 0 0 .595703 cmyk
@
.10758 lw
228.767 297.082 mo
37.8658 297.082 li
1 /0 /CSD get_res sepcs
1 sep
@
37.8658 297.082 mo
37.8658 179.099 li
@
37.8658 179.099 mo
228.767 179.099 li
@
228.767 179.099 mo
228.767 297.082 li
@
0 lc
41.6838 297.082 mo
41.6838 295.648 li
@
gsave
39.1208 298.06 mo
39.1208 307.383 li
44.1408 307.383 li
44.1408 298.06 li
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: AKJBAA+Times-Roman Initial
ct_T42Dict begin
-0.203 -0.426 1.699 1.27
 256 array 0 1 255 {1 index exch /.notdef put} for  /AKJBAA+Times-Roman
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
742000000000000001240000041e6670676d000000000000054400000588
676c7966000000000000128c00000f9468656164d7ea84f200000acc0000
0036686865610000000000000b0400000024686d74780000000000000b28
0000003c6c6f63610000000000000b64000000206d617870000000000000
0b84000000206e616d65549381dd00000ba4000000247072657000000000
00000bc8000006c367646972000000000000000000000000000100000190
000500000000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff000000000000000000000000000100000000000005740002054b001d
054b0018039700130000ffe30000ffed0000ffeafe420000054b001dfebd
ffd6031e000000b4000000b402fe3f3c0026001c007d00980003007d00de
00350017002800e3013e000300b400d000df004c005a00c4004a00ab0147
008a004e0039006d013d002401d200360045009e00be00170079006f00d0
00460091002100b400baffc20017003600ab00b800f60009001d003d0058
005a008c0099ffc400a000e800f5ffa1ffea0033008500b800d5ffe2002f
0080008c0002001a00250045006a0070012d0274ff87003e004e009800ba
00de0116ff3e00150034003c004400670068006d006e0084009800bd00d5
00d7011c0000002d0030003d00460057008b0093009700b000c6011f017b
019d0409ff68ff6a0056005a006a006d009200c400d000e700f1011101bf
01c7ff1cffb4ffff0002002300380042006d0092009c009d00a100a200b4
00ba00c700c700e400ed0153015703230334ff0dff32fffbffff000f001c
0040004b005c006d006d007c0085009800c500cb00cb00df011f01280136
015501700180018a01c7024203130407054eff82000000080026003d003d
004f006e0073008b00900095009e00a800ad00ad00c300d300e301090123
0241028002f40311034004510576ff7fffafffbeffcf00030005000e0039
004b004b004c00740078008800890092009200b600c200d800df00f000fd
010701100117011f01b401dd01eb020002110229028002ca036f038a03af
0400049c04dd053e0587fea6fee4ff67ff95ffcbfff80002000200070025
00280037003700380039003f00510053005900640068006b007d00980099
00af00b100b900d000d500da00dd00fd00fe011e013601370142015a017a
01a301c401cc01f702020210021f022902290287029f029f02c002cc02d5
031a031d03280331035e0396039f03a8049305640571059405b106eb0788
fe63fe64fe76fe7cfebcff4bff97ffacffc0000700210028002d00300048
0049004c0051005400560066007a007c0085008a008c009900af00b300b5
00b500b600b900bb00bc00cc00d000e100f400f600fc00fd010901100117
0118011f01300139013c013e0142014301440149014b014f015401550157
01580161016a017d017e0184019c019c019d01a101a301b401b401b901bb
01cb01d001d701d701e401ec01ec01f7020502070218022302260240024b
024b025702570261026302680269026d028d028d02a602af02b402b80300
033e03460361036103b003c003d503d703df03f9041a0474047b04c104cc
04da04e404f204f6051005300555055606180639067606a406b3076b07ad
07da00b200d500ae00bb00000000000000000000000000630079029602fa
007e0247009100c8000002ca024800da007d01b301a4002d00a5009c0034
003400dc00dc0040004000310031000a000a00820030002a002a00004027
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b09051582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b94000
00000a2d2c00b9000040000b2d2c2045b00043617d6818b0004360442d2c
45b01a234445b01923442d2c2045b00325456164b050515845441b212159
2d2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c20b00325
52582359212d2c69b04061b0008b0c6423648bb8400062600c642364615c
58b0036159b002602d2c45b0112bb0172344b0177ae5182d2c45b0112bb0
1723442d2c45b0112bb017458cb0172344b0177ae5182d2cb00225466165
8a46b040608b482d2cb0022546608a46b040618c482d2c4b53205c58b002
855958b00185592d2c20b0032545b019234445b01a23444565234520b003
25606a20b009234223688a6a606120b0005258b21a401a4523614459b000
5058b219401945236144592d2cb9187e3b210b2d2cb92d412d410b2d2cb9
3b21187e0b2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d
2c4b525845441b2121592d2c0120b003252349b04060b0206320b0005258
23b002253823b002256538008a63381b212121212159012d2c4569b00943
608a103a2d2c01b005251023208af500b0016023edec2d2c01b005251023
208af500b0016123edec2d2c01b0062510f500edec2d2c20b00160011020
3c003c2d2c20b001610110203c003c2db800272c4bb800095058b101018e
59b801ff85b800441db9000900035f5e2db800282c2020456944b001602d
b800292cb800282a212db8002a2c2046b003254652582359208a208a4964
8a204620686164b004254620686164525823658a592f20b00053586920b0
00545821b040591b6920b000545821b0406559593a2db8002b2c2046b004
25465258238a592046206a6164b0042546206a61645258238a592ffd2db8
002c2c4b20b0032650585158b080441bb04044591b21212045b0c05058b0
c0441b2159592db8002d2c2020456944b001602020457d691844b001602d
b8002e2cb8002d2a2db8002f2c4b20b003265358b0801bb040598a8a20b0
032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a23
5920b0032653582321b801408a8a1b8a235920b80003265358b0032545b8
018050582321b8018023211bb003254523212321591b2159442db800302c
4b535845441b2121592db800312c4bb800095058b101018e59b801ff85b8
00441db9000900035f5e2db800322c2020456944b001602db800332cb800
322a212db800342c2046b003254652582359208a208a49648a2046206861
64b004254620686164525823658a592f20b00053586920b000545821b040
591b6920b000545821b0406559593a2db800352c2046b00425465258238a
592046206a6164b0042546206a61645258238a592ffd2db800362c4b20b0
032650585158b080441bb04044591b21212045b0c05058b0c0441b215959
2db800372c2020456944b001602020457d691844b001602db800382cb800
372a2db800392c4b20b003265358b0801bb040598a8a20b0032653582321
b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b0032653
582321b801408a8a1b8a235920b80003265358b0032545b8018050582321
b8018023211bb003254523212321591b2159442db8003a2c4b535845441b
2121592d0001000000000000b1b0afba5f0f3cf50111080000000000a33d
5b0000000000c88fde35fe60fc930d9a0a2c000000090001000000000000
000100000600fe0000000dc5fe60fe600d9a000100000000000000000000
00000000000f05c70021020000dc04000012040000e30400003d04000059
040000170400004105c7003105c700210400000704000031038d00280239
00280400002100000036006000de013c01ca025c02bc036a041804ce0550
061606b6072007ca00010000000f0071000600960009000200100010003b
000007e806c300040001000000010012000100000000000600120000484e
5446414e2b54696d65732d526f6d616eb800312bb800272b400f09cf5401
0f54013fd029019f540140410d01fb0001003001fb0001002001fb000100
1001fb0001000001fb400b01002001900701900601f0414f0204000100ef
0203000100c00201000100b001ff00b0020100bf0208000300af020100af
02080002009f0202009f02080002007f0200007f0202007f0208008f0200
008f020200800205008f02080007006f0200006f0202006f0205006f0208
0004005f020200500203005f02080003004f0202004f0204004f02080003
00300202003f0204003002080003002f0201002f0204002f02080003001f
0208b2010840ba01e5014d0152b50f1fc2710e1fbc014b014d0062001f01
31b2864f1fbe01a60020000d018f0020000d0182400e200dde200dda200d
8f200d7f200dbe018b0050000d016c0050000d0101400e500dd8500d4350
0d3f500d3a500dbb013b0028000d01034014280dbd280db8280da7280d7c
280d76280d2d280dbe01b1004a000d01a7004a000d019440204a0df74a0d
c84a0d984a0d854a0d7a4a0d664a0d214a0d621c0d241c0d1b1c0db8017e
b60f920f900f0009b8017eb4900d92900db801f5b3312f1f41b801f3b533
1f2b2c361fb80189b2542c1fb80183b254ab1f4115018100290401001f01
8000290201001f017c00440201001f017901300201001f01780130040100
1f0177b22f291fb80173b23e9e1fb80171b23ee41fbc016b002e0401001f
016ab233e41fb80138b2545e1f4109013300290401001f01320044080100
1f012db23e931fb8012ab22ccd1f41110127002e0125001f012400330801
001f012300330401001f012200330401001f0106b254261fb80105b4542c
1fff29b80101b21ffe88b80201b61ffb2f521ff62eb80401b21ff52eb808
01b21fe129b802abb21fdd2fb802ab40171fdb2f5e1fd93e4a1fc454261f
c354e41fbf2f6c1fba2cb80401b21fa944bc0401001f00a80130019a400b
1fa52f931fa42f891fa23eb80401b21fa033b80801b21f9654b80801b21f
9529b80401b61f8954261f732eb80156b21f7233b802ab400b1f6b2f6c1f
6a2c4b1f632eb8019a400f1f2e2c371f532fbb1f512f721f4f2cb80401b2
1f4944b80401b21f482fba0401001f01f3400d411d1f412f1d1f3d3ecd1f
3b44b80201b21f392eb8019ab21f343eb80401b21f322eb80201b61f313e
4c1f2b2eb80404b61f2a54311f2233b80201402d1f5567075f0755073707
35073007260725071e071d071408120810080e080c080a08080806080408
0208000814b8ffe0402b0000010014061000000100060400000100041000
0001001002000001000200000001000002010802004a00b801ff85b0018d
16763f183f123e113946443e113946443e113946443e113946443e113946
60443e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b1d
b0964b5358b0aa1d59b0324b5358b0ff1d594bb03553205c58b901e701e5
4544b901e601e545445958b9012101e7455258b901e70121445959184bb0
4c5058b801e64569b801e7456961b0405258b901e601e645b04061445959
4bb05653205c58b9002901e64544b9005401e645445958b9023600294552
58b9002902364459594bb08953205c58b9002f01e74544b9004401e74544
5958b902e4002f455258b9002f02e44459594bb0cd53205c58b188294544
b1292945445958b9052e0088455258b90088052e4459594bb8020153205c
58b90130002f4544b12f2f45445958b90ab00130455258b901300ab04459
594bb01d53205c58b133334544b13e3345445958b13233455258b1333244
59594bb02f53205c58b133334544b12c3345445958b15233455258b13352
4459594bb05b53205c58b133334544b12e3345445958b1a033455258b133
a04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb35b9b81
9c456523456023456560234560b08b766818b080622020b1819b45652345
20b003266062636820b003266165b09b236544b081234420b15b9c456523
4520b003266062636820b003266165b09c236544b05b2344b1009c455458
b19c406544b25b405b4523614459b3868d71454565234560234565602345
60b089766818b080622020b1718d4565234520b003266062636820b00326
6165b08d236544b071234420b186454565234520b003266062636820b003
266165b045236544b0862344b10045455458b145406544b2864086452361
44592b2b2b2b456953427373737373737373737373737373737373737373
7475755e73735e0000>
[3989 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 192 2 <00020012ffed03b10560000e001e00924022ac01eb0ce51403c500d600e5
000331003505390d034c0806a01e050ea0160d028812b80208b3200a881a
b80207b1201f2fccf4ed10f6ed003fed3fed313043794038001d0c261825
142608251c26102504260d170a35000015023501071d0a3500050f023501
0b190e350001130e3500091b06350103110635012b2b2b2b012b2b2b2b2b
2b2b2b2b2b2b8101715d005d241211342702232203061514171633121716
15140702212227261110373633027d6e213eaaaa3f212240b0e37f653e75
fee0c57f885b7bff2501420131f391010efeea94f2e388fe053bf1c3fdc7
b0feb5b3bf01480102bafd00>AKJBAA+Times-Roman AddT42Char 
1 0 0 <0002002100000597054b000300070043b40201490506b80156401c000407
4903000a0504490303021a090607490100190809eb214652182b2b4ef43c
4dfd3c4e10f63c4d10fd3c003f3cfd3c10f43cfd3c313033112111271121
11210576b8fbfa054bfab5b803dbfc250000>AKJBAA+Times-Roman AddT42Char 
AKJBAA+Times-Roman /CharStrings get begin
/g2 2 def
end
AKJBAA+Times-Roman /Encoding get
dup 48 /g2 put
pop
end
%ADOEndSubsetFont
/KKQNPA+Times-Roman /AKJBAA+Times-Roman findfont ct_VMDictPut
/KKQNPA+Times-Roman*1 
[48{/.notdef}rp /g2 207{/.notdef}rp]
KKQNPA+Times-Roman nf
KKQNPA+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
39.7118 304.792 mo
(0)sh
grestore
51.3298 297.082 mo
51.3298 296.221 li
@
60.9748 297.082 mo
60.9748 296.221 li
@
70.6198 297.082 mo
70.6198 296.221 li
@
80.2658 297.082 mo
80.2658 296.221 li
@
89.9108 297.082 mo
89.9108 295.648 li
@
gsave
83.2288 298.06 mo
83.2288 307.383 li
96.4968 307.383 li
96.4968 298.06 li
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: AKJBAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNPA+Times-Roman gcheck setglobal} if
1 1400 7 <00010041ffea037f057f002c00ce4027861b013508141501000229170514
2214150b0c090f171a100f0f73121b1b1a1b1a100f0405292cb80132401e
2509a41b1b021a191aa440152111100402f6250d056b22b6a015b0150215
bb0208002e00290207b12e2d2fcce410f65df4ed003fed3f3c1ac41afd3c
1112397d2f18ec10ed0111121739870e2e2b057d10c50011391112393911
33011239113912173910c9313018437940261c24030820211f211e211d21
04060726081c053501032405350106210935011c1b0423023500002b103c
2b012b2b2b2a8181015d361633323635102526232226273e013713213236
3717070e01232107161716171e011514002322272635343633d2b93273ac
feec9984160b08020302da01ad20231c104e042415fe7d55a44c7d54484a
fec5f1623c642b2db781cb940103723f0309080b0501de161e0eb90905af
1c192a5247b163ddfed8131f501e2d000000>KKQNPA+Times-Roman AddT42Char 
KKQNPA+Times-Roman /CharStrings get begin
/g7 7 def
end
KKQNPA+Times-Roman /Encoding get
dup 53 /g7 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNPA+Times-Roman*1 
[48{/.notdef}rp /g2 4{/.notdef}rp /g7 202{/.notdef}rp]
KKQNPA+Times-Roman nf
KKQNPA+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
83.8148 304.792 mo
(500)sh
grestore
99.5568 297.082 mo
99.5568 296.221 li
@
109.203 297.082 mo
109.203 296.221 li
@
118.848 297.082 mo
118.848 296.221 li
@
128.493 297.082 mo
128.493 296.221 li
@
138.139 297.082 mo
138.139 295.648 li
@
gsave
129.488 298.06 mo
129.488 307.383 li
146.701 307.383 li
146.701 298.06 li
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: AKJBAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNPA+Times-Roman gcheck setglobal} if
1 444 3 <000100e300000325055e0016006f4019761486140226143614020cfd6208
e02203f96207e02314e00db8016eb2136214b8017e40110d0c0302040815
0508070c1817171a0203b80130b50c0c0d191718bc0178002101a5015d00
182b2b4ef43c4d10fd3c4e456544e6003f3c3f1217394df5edfc01f52b2b
313000715d001615111416171521353e0135113426232206073525330262
015270fdcc794a18281a5324016f0c05590509fb4c4d2a041c1e06365a03
9e30321d101cbb00>KKQNPA+Times-Roman AddT42Char 
KKQNPA+Times-Roman /CharStrings get begin
/g3 3 def
end
KKQNPA+Times-Roman /Encoding get
dup 49 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNPA+Times-Roman*1 
[48{/.notdef}rp /g2 /g3 3{/.notdef}rp /g7 202{/.notdef}rp]
KKQNPA+Times-Roman nf
KKQNPA+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
130.071 304.792 mo
(1000)sh
grestore
147.785 297.082 mo
147.785 296.221 li
@
157.43 297.082 mo
157.43 296.221 li
@
167.076 297.082 mo
167.076 296.221 li
@
176.721 297.082 mo
176.721 296.221 li
@
186.366 297.082 mo
186.366 295.648 li
@
gsave
177.899 298.06 mo
177.899 307.383 li
195.112 307.383 li
195.112 298.06 li
eclp
0 0 0 1 cmyk
KKQNPA+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
178.298 304.792 mo
(1500)sh
grestore
196.012 297.082 mo
196.012 296.221 li
@
205.658 297.082 mo
205.658 296.221 li
@
215.303 297.082 mo
215.303 296.221 li
@
224.949 297.082 mo
224.949 296.221 li
@
37.8658 297.099 mo
38.7268 297.099 li
@
37.8658 293.411 mo
39.2998 293.411 li
@
gsave
14.0188 298.06 mo
36.611 298.06 li
36.611 288.736 li
14.0188 288.736 li
cp
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: AKJBAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNPA+Times-Roman gcheck setglobal} if
1 108 1 <000100dcffe801bf00cb000b00264013052a0b0b0d17171a082a02190c0d
c321788e182b2b4ef44dfd4e456544e6003f4ded31300426353436333216
15140623011e42432f2f42413018432f2f42422f2f430000>KKQNPA+Times-Roman AddT42Char 
KKQNPA+Times-Roman /CharStrings get begin
/g1 1 def
end
KKQNPA+Times-Roman /Encoding get
dup 46 /g1 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNPA+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 3{/.notdef}rp /g7 202{/.notdef}rp]
KKQNPA+Times-Roman nf
KKQNPA+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
14.0188 295.383 mo
(0.0000)sh
grestore
37.8658 289.723 mo
38.7268 289.723 li
@
37.8658 286.034 mo
38.7268 286.034 li
@
37.8658 282.347 mo
38.7268 282.347 li
@
37.8658 278.658 mo
38.7268 278.658 li
@
37.8658 274.971 mo
39.2998 274.971 li
@
gsave
14.0188 279.771 mo
36.611 279.771 li
36.611 270.448 li
14.0188 270.448 li
cp
eclp
0 0 0 1 cmyk
KKQNPA+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
14.0188 276.943 mo
(0.0005)sh
grestore
37.8658 271.282 mo
38.7268 271.282 li
@
37.8658 267.595 mo
38.7268 267.595 li
@
37.8658 263.906 mo
38.7268 263.906 li
@
37.8658 260.219 mo
38.7268 260.219 li
@
37.8658 256.53 mo
39.2998 256.53 li
@
gsave
14.0188 261.124 mo
36.611 261.124 li
36.611 251.8 li
14.0188 251.8 li
cp
eclp
0 0 0 1 cmyk
KKQNPA+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
14.0188 258.503 mo
(0.0010)sh
grestore
37.8658 252.842 mo
38.7268 252.842 li
@
37.8658 249.154 mo
38.7268 249.154 li
@
37.8658 245.466 mo
38.7268 245.466 li
@
37.8658 241.778 mo
38.7268 241.778 li
@
37.8658 238.09 mo
39.2998 238.09 li
@
gsave
14.0188 242.835 mo
36.611 242.835 li
36.611 233.512 li
14.0188 233.512 li
cp
eclp
0 0 0 1 cmyk
KKQNPA+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
14.0188 240.063 mo
(0.0015)sh
grestore
37.8658 234.402 mo
38.7268 234.402 li
@
37.8658 230.714 mo
38.7268 230.714 li
@
37.8658 227.026 mo
38.7268 227.026 li
@
37.8658 223.338 mo
38.7268 223.338 li
@
37.8658 219.65 mo
39.2998 219.65 li
@
gsave
14.0188 224.188 mo
36.611 224.188 li
36.611 214.866 li
14.0188 214.866 li
cp
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: AKJBAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNPA+Times-Roman gcheck setglobal} if
1 632 4 <0001003d000003cb0564001b00b8404c2512016c006e016913036402960f
f60ff61404050f0614150f2514042b08142100000118190a0b010b0a0303
001a0318191119180b0a01050614066b0e051514a41a4000211b0c038811
bc19bb0208001d00000207b11d1c2fcce410f6f4ed003f1a3dcc181a3cfd
3c3fed111217390111123912391112173910c910c90705101ac531304379
401c04100825070d0a3500090a0c0b050f033501090c0635010410063501
002b2b012b103c103c2b2b8101715d005d71370801353426232207060727
3e0133321615140201213236371703213d016e0106a06f89552f2b2b32ef
89a9d1e2fe8601cb604e311a6ffce117017c0164a9949b64377209e6b3d5
9aa4fed0fe7b2e590cfee9000000>KKQNPA+Times-Roman AddT42Char 
KKQNPA+Times-Roman /CharStrings get begin
/g4 4 def
end
KKQNPA+Times-Roman /Encoding get
dup 50 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNPA+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 /g4 2{/.notdef}rp /g7 
202{/.notdef}rp]
KKQNPA+Times-Roman nf
KKQNPA+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
14.0188 221.622 mo
(0.0020)sh
grestore
37.8658 215.962 mo
38.7268 215.962 li
@
37.8658 212.274 mo
38.7268 212.274 li
@
37.8658 208.586 mo
38.7268 208.586 li
@
37.8658 204.898 mo
38.7268 204.898 li
@
37.8658 201.21 mo
39.2998 201.21 li
@
gsave
14.0188 205.9 mo
36.611 205.9 li
36.611 196.576 li
14.0188 196.576 li
cp
eclp
0 0 0 1 cmyk
KKQNPA+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
14.0188 203.182 mo
(0.0025)sh
grestore
37.8658 197.522 mo
38.7268 197.522 li
@
37.8658 193.834 mo
38.7268 193.834 li
@
37.8658 190.146 mo
38.7268 190.146 li
@
37.8658 186.458 mo
38.7268 186.458 li
@
37.8658 182.77 mo
39.2998 182.77 li
@
gsave
14.0188 187.252 mo
36.611 187.252 li
36.611 177.929 li
14.0188 177.929 li
cp
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: AKJBAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNPA+Times-Roman gcheck setglobal} if
1 916 5 <00010059fff10376056a002f0095403c49195b070207241624290739074b
076a076a0879077b08a919c6240b172118181700032c0122100d18170213
0c02f52940220d21c0090109092f1313b80173400f1b052f88290d106b1e
056ba0260126bd02000031000d0136002c0209b131302fccf4e410f65de5
d4ed003fed3fed1112392f5d3d1add7dcc181a10fd111217390111123939
121739101a18c93130015d005d36163332363534272623220607273e0135
34262322070607273e013332161514070607161716151400212226353436
33d6b53f8c88375ddd0d181002a0b8915d6e542e351f28da8f99a7452752
603a6dfed5feec7b632125ae72bd6f6b518901021a3a967b6d72512c5c07
98b6a86e61512e39293769a1befede492a1a30000000>KKQNPA+Times-Roman AddT42Char 
KKQNPA+Times-Roman /CharStrings get begin
/g5 5 def
end
KKQNPA+Times-Roman /Encoding get
dup 51 /g5 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNPA+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 /g4 /g5 /.notdef 
/g7 202{/.notdef}rp]
KKQNPA+Times-Roman nf
KKQNPA+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
14.0188 184.742 mo
(0.0030)sh
grestore
37.8658 179.082 mo
38.7268 179.082 li
@
41.6838 179.099 mo
41.6838 180.533 li
@
51.3298 179.099 mo
51.3298 179.959 li
@
60.9748 179.099 mo
60.9748 179.959 li
@
70.6198 179.099 mo
70.6198 179.959 li
@
80.2658 179.099 mo
80.2658 179.959 li
@
89.9108 179.099 mo
89.9108 180.533 li
@
99.5568 179.099 mo
99.5568 179.959 li
@
109.203 179.099 mo
109.203 179.959 li
@
118.848 179.099 mo
118.848 179.959 li
@
128.493 179.099 mo
128.493 179.959 li
@
138.139 179.099 mo
138.139 180.533 li
@
147.785 179.099 mo
147.785 179.959 li
@
157.43 179.099 mo
157.43 179.959 li
@
167.076 179.099 mo
167.076 179.959 li
@
176.721 179.099 mo
176.721 179.959 li
@
186.366 179.099 mo
186.366 180.533 li
@
196.012 179.099 mo
196.012 179.959 li
@
205.658 179.099 mo
205.658 179.959 li
@
215.303 179.099 mo
215.303 179.959 li
@
224.949 179.099 mo
224.949 179.959 li
@
228.767 297.099 mo
227.906 297.099 li
@
228.767 293.411 mo
227.332 293.411 li
@
228.767 289.723 mo
227.906 289.723 li
@
228.767 286.034 mo
227.906 286.034 li
@
228.767 282.347 mo
227.906 282.347 li
@
228.767 278.658 mo
227.906 278.658 li
@
228.767 274.971 mo
227.332 274.971 li
@
228.767 271.282 mo
227.906 271.282 li
@
228.767 267.595 mo
227.906 267.595 li
@
228.767 263.906 mo
227.906 263.906 li
@
228.767 260.219 mo
227.906 260.219 li
@
228.767 256.53 mo
227.332 256.53 li
@
228.767 252.842 mo
227.906 252.842 li
@
228.767 249.154 mo
227.906 249.154 li
@
228.767 245.466 mo
227.906 245.466 li
@
228.767 241.778 mo
227.906 241.778 li
@
228.767 238.09 mo
227.332 238.09 li
@
228.767 234.402 mo
227.906 234.402 li
@
228.767 230.714 mo
227.906 230.714 li
@
228.767 227.026 mo
227.906 227.026 li
@
228.767 223.338 mo
227.906 223.338 li
@
228.767 219.65 mo
227.332 219.65 li
@
228.767 215.962 mo
227.906 215.962 li
@
228.767 212.274 mo
227.906 212.274 li
@
228.767 208.586 mo
227.906 208.586 li
@
228.767 204.898 mo
227.906 204.898 li
@
228.767 201.21 mo
227.332 201.21 li
@
228.767 197.522 mo
227.906 197.522 li
@
228.767 193.834 mo
227.906 193.834 li
@
228.767 190.146 mo
227.906 190.146 li
@
228.767 186.458 mo
227.906 186.458 li
@
228.767 182.77 mo
227.332 182.77 li
@
228.767 179.082 mo
227.906 179.082 li
@
gsave
114.786 318.141 mo
151.721 318.141 li
151.721 309.176 li
114.786 309.176 li
cp
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: SVJCAA+Times-Italic Initial
ct_T42Dict begin
-0.293 -0.41 1.66 1.203
 256 array 0 1 255 {1 index exch /.notdef put} for  /SVJCAA+Times-Italic
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
74200000000000000124000005446670676d0000000000000668000007d6
676c79660000000000001660000003b468656164d5f2d98a00000e400000
0036686865610000000000000e7800000024686d74780000000000000e9c
0000000c6c6f63610000000000000ea8000000086d617870000000000000
0eb0000000206e616d65ba9b9ed200000ed0000000287072657000000000
00000ef80000076667646972000000000000000000000000000100000190
000500000000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff0000000000000000000000000001000000000000057400000538001a
05550013036d001a0000ffda0000ffe80000fff1fe5afffe0534002dfeaa
ffe1031c000000a0000000a00000000000000000002100aa009400c20078
007d0021008200b80028002a0046000300a8004d005900e4014000300002
009b0087009400f600180047006b01e0001a00ab006800ce000300250045
0097001600470064007600b800260043008700b500dc0037005b007900b1
00c900d60021002c0052005500c402adffd20031009800d001b70403ff90
001a002e0036006d0084008effac002d003d00470080008601230173ffed
005d005d006d0082009100a200d4ffd2ffda0007000a0028002a003c003d
0051008700b10109011e014001850006000e001000250030005000550056
00a200b401080247ff72ffda0013003400400041004800580068007b008c
009a00b100c300da015e027403adff44ffbdffcf0000002400250026002d
0039004a004f007200740087009700b600b900f90156020eff24ffa1ffb9
ffc7ffef000000020005001d001f0024003d004b0058005d0067008e009a
00b800c900d800da00da00e400e6010c013b014101500185019801c701d3
0245032d038703b20410051ffff8001c00210027002a002a00300037003b
0055005c005f00610072008d00a400ad00b100ea00f60118012401340144
01a1021d02290266026f02c402ef0403048b04e4ffea0000000200020003
0007002e00350039003e004c004c0055006d0077008a008e009000930094
0096009a00a800c000cb00dc00df00ed00f900fc0105010701080128012f
01340149019801d801de020e02160223024202df032b033e036f04d104e4
0545fe8efef2ff58ff59ff71ffbbffc7ffde0007001d001f002d0039005b
005e005f0064006700760079007e008000800080008300830088009f00a6
00a900aa00af00be00c000c800cb00ce00d200dd00df00eb00ec00ed00ed
00f400f800fc00fd0108010c011001100115011c011c0125012d013b013e
0140015001510176017e018001830184018e0198019d01b401bb01ca01d3
02470258025d027d028802bc02d102d302dc02e802ec02f70309031d0321
038703c90447045a04ac050e055f057b058005af0636fdf4fe37fe57fe5e
fe76fecdff07ff0eff2aff76ff7dff9effb8ffb9fff0000000020008000f
00170023002a002b004b004c004e004e00500051005d006200630066006b
0072007800960097009a009b009f00a900ac00ad00b700c300ca00ce00d1
00da00dd00e600ed00f700fb00fd00fe01000104010501190123012a0132
014001470151015401550158015c015e015f016601680171017a017b0180
018b018b018e0191019801a101af01b101c301ea01f401f602000205020c
02110220022c024202470255025502610266026d027b028702920295029a
029f02a602a702b002b402cb02d102ee02fe030b030e0325033703370345
034c034e03610371038e03a303a603ab03cc03d003ed03fc03fd03fd0434
0439044f047b049404c204da04da04f00511052f053805550564056b056e
058a059505ad05b205dd05fb063606b00723075207820788079707ad009e
00c6009900a200000000000000000000000000bd00150000000000000000
000000000000000000000000000000000000000000000000000000000000
0000009b00ae02cd024500e000eb017b0183023800c9003101ae0050045a
00c400e4011c02fa029601ca0079004b006301af001605740002054b001d
054b0018039700130000ffe30000ffed0000ffeafe420000054b001dfebd
ffd6031e0000006affd60580004c008a007b0012005500cd00e80409014e
0028005f0334001f006400820030002a002a002a403231302f2e2d2c2b2a
292827262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c
0b0a090807060504030201002c4523466020b02660b004262348482d2c45
2346236120b02661b004262348482d2c45234660b0206120b04660b00426
2348482d2c4523462361b0206020b02661b02061b004262348482d2c4523
4660b0406120b06660b004262348482d2c4523462361b0406020b02661b0
4061b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a
51582320b08d44235920b0ed51582320b04d44235920b0042651582320b0
0d44235921212d2c20204518684420b001602045b04676688a4560442d2c
01b93dadeeeb0a2d2c00b911163dad0b2d2c2045b00043617d6818b00043
60442d2c45b01a234445b01923442d2c2045b00325456164b05051584544
1b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c
01b00743b006430a2d2c2069b04061b0008b20b12cc08a8cb8100062602b
0c642364615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0
112bb01723442d2c45b0112bb017458cb0172344b0177ae5182d2cb00225
4661658a46b040608b482d2cb0022546608a46b040618c482d2c4b53205c
58b002855958b00185592d2c20b0032545b019234445b01a234445652345
20b00325606a20b009234223688a6a606120b01a8ab000527921b21a1a40
b9ffe0001a45208a54582321b03f1b235961441cb114008a5279b3194020
1945208a54582321b03f1b235961442d2cb9187e3b210b2d2cb92d412d41
0b2d2cb93b21187e0b2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187e
c4e00b2d2c4b525845441b2121592d2c0120b003252349b04060b0206320
b000525823b002253823b002256538008a63381b212121212159012d2c45
69b00943608a103a2d2c01b005251023208af500b0016023edec2d2c01b0
05251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b001
600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00
b0064365b007430b2d2c3eb02a2a2d2c352d2c76b01b23701020b01b4520
b0005058b00161593a2f182d2c21210c6423648bb84000622d2c21b08051
580c6423648bb82000621bb200402f2b59b002602d2c21b0c051580c6423
648bb81555621bb200802f2b59b002602d2c0c6423648bb8400062602321
2d2cb4000100000015b00826b00826b00826b008260f10161345683ab001
162d2cb4000100000015b00826b00826b00826b008260f1016134568653a
b001162db800322c4bb800095058b101018e59b801ff85b800441db90009
00035f5e2db800332c2020456944b001602db800342cb800332a212db800
352c2046b003254652582359208a208a49648a204620686164b004254620
686164525823658a592f20b00053586920b000545821b040591b6920b000
545821b0406559593a2db800362c2046b00425465258238a592046206a61
64b0042546206a61645258238a592ffd2db800372c4b20b0032650585158
b080441bb04044591b21212045b0c05058b0c0441b2159592db800382c20
20456944b001602020457d691844b001602db800392cb800382a2db8003a
2c4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a
235920b0032653582321b801008a8a1b8a235920b0032653582321b80140
8a8a1b8a235920b80003265358b0032545b8018050582321b8018023211b
b003254523212321591b2159442db8003b2c4b535845441b2121592db800
3c2c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db8
003d2c2020456944b001602db8003e2cb8003d2a212db8003f2c2046b003
254652582359208a208a49648a204620686164b004254620686164525823
658a592f20b00053586920b000545821b040591b6920b000545821b04065
59593a2db800402c2046b00425465258238a592046206a6164b004254620
6a61645258238a592ffd2db800412c4b20b0032650585158b080441bb040
44591b21212045b0c05058b0c0441b2159592db800422c2020456944b001
602020457d691844b001602db800432cb800422a2db800442c4b20b00326
5358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b00326
53582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a2359
20b80003265358b0032545b8018050582321b8018023211bb00325452321
2321591b2159442db800452c4b535845441b2121592db800462c4bb80009
5058b101018e59b801ff85b800441db9000900035f5e2db800472c202045
6944b001602db800482cb800472a212db800492c2046b003254652582359
208a208a49648a204620686164b004254620686164525823658a592f20b0
0053586920b000545821b040591b6920b000545821b0406559593a2db800
4a2c2046b00425465258238a592046206a6164b0042546206a6164525823
8a592ffd2db8004b2c4b20b0032650585158b080441bb04044591b212120
45b0c05058b0c0441b2159592db8004c2c2020456944b001602020457d69
1844b001602db8004d2cb8004c2a2db8004e2c4b20b003265358b0801bb0
40598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321b801
008a8a1b8a235920b0032653582321b801408a8a1b8a235920b800032653
58b0032545b8018050582321b8018023211bb003254523212321591b2159
442db8004f2c4b535845441b2121592d00000001000000000000b1b0afba
5f0f3cf50111080000000000a252b00000000000c88fde35fda2fcb30d49
09a4000200090001000000000000000100000600fe0000000ce1fda2fda2
0d4908000225000000000000000000000000000304e3ffee05c7ffee0473
006f00000036015801da0001000000030087000600c00008000200100010
0050000007e807d600040001000000010012000100000000000600130000
4b4e525a50502b54696d65732d4974616c6963000000b800462bb8003c2b
b800322bbc029c010c003c001f0295b250391fb80294402b50391f900690
07029d49ad4902ad72ad8b029d729d8b02ad1fad3a029d1f9d3a02ad20ad
50029d209d5002b80290b33a341f15b8028bb2471f14b8028ab2471f13b8
0289b2471f12b80288b2471f11b80287b2471f10b80286b2471f0fb80285
b2471f0eb80284b2471f0db80283b2471f0cb80282b2471f0bb80281b247
1f0ab80280b2471f09b8027fb2471f08b8027eb2471f07b8027db2471f06
b8027cb2471f05b8027bb2471f04b8027ab2471f03b80279b2471f02b802
78b2471f01b80277b2471f00b80276400f471f0001010100090102000800
08404114023d016e0070000d016a0070000d015b0070000d01530070000d
01140070000d01100070000d0104b4700d6f700d410a01cf0068000d01c7
0068000d01630068000d0113400e680def680de4680dc7680dc5680dbe01
68004d000d011d004d000d010540144d0dcd4d0db04d0d8a4d0d3c4d0d32
4d0d2a4d0d410a01f2004a000d01e4004a000d0121004a000d011e40174a
0df64a0dd54a0dd14a0dad4a0d634a0d344a0d254a0db801d74011850ddd
850da9850d26850d23850d1d850db801aeb40f4b0f0009bb01ae004b000d
01d0b2502c1fbc01c300200101001f01c1b220bb1f411901c0003a040100
1f01be003a0401001f01b9001f0401001f01b600430125001f01af005401
25001f01ab00270801001f0160b250351fb8015eb2503d1fb8015cb2505a
1fb8015ab2505e1fb80159b250621fbc015700500125001f0154b220e41f
4111015200200401001f014e003a0401001f014d008b0201001f014c008b
02ab001f0148b21f671fb80144b243621f4109014100430401001f013e00
540156001f011cb2502c1f410d011500200401001f0111001f0401001f01
0e001f0156001f010db41fcd1fed3ab80156b21fea1fb80125b21fe554b8
0401b21fdf27b802ab400b1fde27e41fcc50931fcb50b80201b21fc254b8
02abb21fbf27b80156b61fae1f9e1fa827b802abb21fa527b80156b21f9d
50b80201b21f9c20b80801b21f9654b802abb21f9528b80401b21f9428b8
019ab61f9227cd1f7e3ab80156400b1f7d1f9e1f7a28cd1f6e43b80125b2
1f6d43b80125b21f6728b80801400b1f6628e41f621f811f5227b80401b2
1f4f20b80125b21f4c54b80156b61f493acd1f4728b802abb21f4627b802
01b61f4520cd1f4228b80801b21f401fb802abb21f3f28b80801b21f3743
b80125b21f3628b80801b21f331fb80401b21f318bb80125b21f2f27b801
56b61f2d50931f2c54b80201b21f2b28b80125400f1f241f721f2143671f
551f091f0990bb018300070090017e403907909f07908007907307906b07
906a07905607904807903807902e07902207901e071408120810080e080c
080a080808060804080208000814b8ffe0402a0000010014061000000100
060400000100041000000100100200000100020000000100000201080200
4a4118028a00080288000802860008028400080282000802800008027e00
08027c0008027a00080278000802760008028affe0b300000100b9028a02
7cb41000000100b9027c027ab300000100b9027a0286b300000100b90286
0278b300000100b902780276b300000100b80276b302010802b80276b24a
0000b801ff85b0018db0068858b001b0018e1bb000b0018e59181616763f
183f123e113946443e113946443e113946443e113946443e11394660443e
11394660442b2b2b2b2b2b2b2b2b2b2b18763f183f123e113946443e1139
46443e113946443e113946443e11394660443e11394660442b2b2b2b2b2b
2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b014b5079bf001f01ee0007
001f01bf0007001f01b1b6071fce071fac072b2b2b2b2b4b5379bf009001
ee0007009001bf0007009001b1b60790ce0790ac072b2b2b2b2b181db096
4b5358b0aa1d59b0324b5358b0ff1d594bb02e53205c58b9023f023d4544
b9023e023d45445958b900de023f455258b9023f00de4459594bb05a5320
5c58b9001f023f4544b9003a023f45445958b901aa001f455258b9001f01
aa4459594bb06353205c58b90020023e4544b90050023e45445958b90277
0020455258b9002002774459594bb0e453205c58b1723a4544b13a3a4544
5958b904bd0072455258b9007204bd4459594bb0e453205c58b18b3a4544
b13a3a45445958b904bd008b455258b9008b04bd4459594bb01b53205c58
b127274544b1432745445958b12227455258b127224459594bb02453205c
58b127274544b1542745445958b12e27455258b1272e4459594bb0375320
5c58b127274544b1282745445958b14727455258b127474459592b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b4569
534216003f3f182b103c012f070cb0062342b00723422b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73737373737373732b2b2b000000>
[949 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 108 1 <0001ffed000006230538003d018440f7a52aa32ba92da631a634a33cba1e
b52cca1ee400e604e613e614e523e524e527e528e531e239130814082248
05481248154822680c662b790c772b96049c0c960d950e9623922b963196
34953ca604aa0ca30da91da623181432313115133334120d120e1d0d1e22
1f1d1e2c312d1d2c403d4604001d3d0c050b1d0c1d151c1d1d2b232a1d2b
3c343b1d3c3431230404333d22151205040c132813331205143231b623c7
23022223232012b734c73402313115123434201204040514135432334633
2b1e1d0d0c023d3c2c2b0831043e2815100031103140315031b031c03106
31463f313e0a05100f0440045004c0040404043e0a3f3e2fcc2b103c012f
5d2b3c2b103c011076dc5d182b3c2b10c0c0003f3c3c3c3f3c3c3c123976
2f183cfd3c870e2e2b7d10c4870e2e185d2b7d10c45d0112393911123939
2b1112173911121739180010ed0110c00010ed0110c00010ed0110c00010
ed0110c00010ed01101ac81a0010ed0110c00010ed0110c00010ed0110c0
073c3c07103c3c3130015d5d2736373637133e0135342627352115060706
070321133e0135342726273521150e010703070e01151416171521353637
3637132103070e0115141617152113481b2a1bfb0e0a455a022f53243e19
6d0247640a0631213e01fb513d1afb130203455afdd051253e1a88fdb876
1302033f52fe052106141e5f038a372d1632270221210714225afe71016b
272e1131150d0221210a2f5efc764e0b140a3a210321210614225b01e4fe
5a4e0b140a3821052100>SVJCAA+Times-Italic AddT42Char 
1 688 2 <0001006f000005070538001c009e401b071c4617560b561788099417a517
c61c08400da5216b0c8b0c020cb80269b40b0b4a120ab8026940344008a5
210909050c0d08090913040005121312054704050a02001a1d1b08131212
2012051320120405041d28051004041d0a1e1d2fcc2b103c012f2b3c2b10
d007052b102b2e2e003ffd3c3f08fd083c11123939392fc4c4c40110d02f
1a3ded1a18f41076d02f18f45d1a3dfd1a183130015d3736373637012206
0727132103273734262b01010607061514161715217b5b253e190129ec98
65235504435a2405557e72fee40a05094a6cfdb0210713215c043947b407
013bfeb205475e5dfc05211a27173c1d03210000>SVJCAA+Times-Italic AddT42Char 
1 0 0 <0002ffed0000062305380003000700424009040745000506450201b8022a
40130303000a0607450100190802034505045909feb9016c00182b10f43c
fd3c4e10f43c4dfd3c003f3c10fd3cfd3c10fd3c31302311211127112111
130636b8fb3a0538fac8b803c8fc38000000>SVJCAA+Times-Italic AddT42Char 
SVJCAA+Times-Italic /CharStrings get begin
/g1 1 def
/g2 2 def
end
SVJCAA+Times-Italic /Encoding get
dup 72 /g1 put
dup 84 /g2 put
pop
end
%ADOEndSubsetFont
/KKQNPB+Times-Italic /SVJCAA+Times-Italic findfont ct_VMDictPut
/KKQNPB+Times-Italic*1 
[72{/.notdef}rp /g1 11{/.notdef}rp /g2 171{/.notdef}rp]
KKQNPB+Times-Italic nf
KKQNPB+Times-Italic*1 [8.0685 0 0 -8.0685 0 0 ]msf
115.386 315.729 mo
(H)sh
KKQNPB+Times-Italic*1 [5.72863 0 0 -5.72863 0 0 ]msf
121.286 316.995 mo
(T)sh
%ADOBeginSubsetFont: AKJBAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNPA+Times-Roman gcheck setglobal} if
1 1748 8 <00020031ffe305a10563002f003000bf401be602012808237a1b1ea72219
211b1d2823051b067e40081b210707b801074031067e4002a1262f252319
03121d1e1e270c2e302f03122e27090761231918292430302b249f23cf23
022f234f23bf230323b80204b3320f542bb80205b132312fccf4ed10f65d
5d3c12392f10fd3c10e4003fed3f3ced12392f3c121739103d1aec181af4
ed01103d1aed1a18f4ed2b2b31304379401c282e0d1129252d2611280f37
000d2e0f3700102a1237000e2c0c37012b2b012b2b2b2b8181005d001633
323637331323262726232200111000333236373e01351134262735211506
07061511140423202726111037362123036de6112c250d2d102f3f4379c2
c5fed5012adb25642d49244371020a4c192afe9fa3fed4cee3b5c7014921
0563422220fe51954980fed5fea9fee5fec20e0f1823220147763a072626
05142064fe6d2478afc10145011ecce10000>KKQNPA+Times-Roman AddT42Char 
1 2096 9 <00010021ffe80592054b001f00fd40436a196a1a02171977198619c71ec7
1fd61ed61ffa13fa140909130914191319142813281406080909070a0b0b
090049000907132d18124712090b1411011e1b1f7c1b40b8ff864031091a
19201819192c1209090b1b1a1a29120909071b1a1907041f0b1813091b18
0b0907051a1f131200021a19090f210121b8020ab39b130113b801b9b39b
090109b8014e400d20501f801f02401f01001f011fb9020900202ff45d5d
5d1a19fd5dfd5d18e65d003f3c3f3c3c3c1217390111123939121739874d
2e2b0e7d10c505872e182b0e7d10c52b1a1810f500fd3c3c3c0111123976
2f180110f501111239762f1887100e3c87100e3c313001715d005d011506
07061514161709013e013534272627352115060706070123012e01273502
424d1c312330014001231314331e4501a3411f2f2efe3b1ffe07404d4a05
4b2601091031195a6afd3703043346163b150c022623091a2776fb800466
8f460523>KKQNPA+Times-Roman AddT42Char 
1 3116 12 <00030028ffe8035e03aa0013001c001d00d9405d69086a0c6f126c157b07
79087a0c7d117f127d147d15fc0ef60f0d550866086011c404c712d404e6
09e20f083d08090a171803090a02090a03061739100301034703061c1c63
1d13079206a2060206410d0b1d18fe02421d10cf0a010ab80202b31f03db
10b80201b11f1e2fccf4ed10f65d1239f4ed2f003fed5d3f3ced11123976
2f5d18fd111239390111123911123910c931304379402a0e1b000515251a
261412171e0016171b00181e011918050e03260016111c1e0119011c1e01
040f062600002b2b2b012b103c2b103c2b2b2b8181005d015d001615211e
0133323637170e0123220235341233060706072126272623370262d4fd85
0abe8269903d2329e1a3bccdeebfac3c200e01a60b1b31732d03aac3b3e8
d46e650c7fd8011cb9c901244965365264315849>KKQNPA+Times-Roman AddT42Char 
1 3436 13 <000200280000020e0574000b0025005d4026230c0f3f0c1c252024232020
18201050171c18921c201f100f041c25089502001c0725240a27b8020040
0a200b9505271f20dd100fb901ff00262ff43cfd3cf4ed10e6003f3c3f3f
4ded1112173910f5edfc01f510f52b103c31301236333216151406232226
35033e013511342726232206073537363736331615111416171521a83c2c
2b3d3d2b2c3c806b38090f300b15322baf451c08023761fe1a05363e3d2c
2b3d3d2bfb110a357501dd411929040e1f0e391d0c0708fd32723a081c00
0000>KKQNPA+Times-Roman AddT42Char 
1 3648 14 <00020021000003e303ae0033003400b74059191a4d1a02960ea60e021a08
1f2110321f332f213f2105253f1c2120220343001c3320241c3a1c202023
2e3a1c3220230c20043a0b1c0c900f2e2d251c1304030733120f293e1727
0f07333221200a34073426252f34041b1cb80200b73612272e2f030304b8
01ffb136352fccf43c10fde410f63c1239fd3c2f003f3f3c3c3c3ff4ed11
3911173910f5edfc01f52b2b2b2b055d043130437940102728181a281826
1e01191a2719291e012b01103c2b8181005d71373e013511342726232206
0735363f0132161d013637363332171615111416171521353e0135113426
2322070607111416171521012547390c133b09130e29995e07035c344e54
44386c3a44fe55493a40563b3d22364045fe4b01dc1c09355c01fb401a26
0202230c321f0a0993562031274cc3fe2d4840011c1c0a3d6601ab567128
1735fdd04831021c03ae>KKQNPA+Times-Roman AddT42Char 
KKQNPA+Times-Roman /CharStrings get begin
/g8 8 def
/g9 9 def
/g12 12 def
/g13 13 def
/g14 14 def
end
KKQNPA+Times-Roman /Encoding get
dup 71 /g8 put
dup 86 /g9 put
dup 101 /g12 put
dup 105 /g13 put
dup 110 /g14 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNPA+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 /g4 /g5 /.notdef 
/g7 17{/.notdef}rp /g8 14{/.notdef}rp /g9 14{/.notdef}rp /g12 3{/.notdef}rp 
/g13 4{/.notdef}rp /g14 145{/.notdef}rp]
KKQNPA+Times-Roman nf
KKQNPA+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
127.579 315.729 mo
(inGeV)
[2.2444 6.36594 5.83217 3.58366 0 ]xsh
grestore
gsave
123.751 170.398 mo
123.751 178.287 li
143.115 178.287 li
143.115 170.398 li
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: OHGCAA+Mathematica1 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /OHGCAA+Mathematica1 def
/FontInfo 6 dict dup begin
/Notice (Mathematica typeface design by Andre Kuzniarek, with Gregg Snyder and Stephen Wolfram. Copyright \\\(c\\\) 1996-2001 Wolfram Research, Inc. [http://www.wolfram.com]. All rights reserved. [Font version 2.00]) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /Equal put
dup 127 /Delta put
def
/UniqueID 5095641 def
/FontBBox {0 -16 579 682} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-16 -0 444 468 662 677] def
/OtherBlues [-209 -203] def
/BlueScale 0.0416667 def
/StdHW [105.846] def
/StdVW [74.419] def
/StemSnapH [65.543 105.846] def
/StemSnapV [58.407 74.419] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/Equal <1C60D8A8C9B678BD19BF6CFABC23FF7AEEAECC7A009FA979A1EF19ED
0D1F025A329E7E77E19D93F6A5877C> |-
/Delta <1C60D8A8C9B74A3E7F4B7A2810C76C66EE45608F7902E780507D6243
C09B0190B500DF3ED0C70BDF1D905517179531E8F32F4BC3186B33A278AD594F
6FB11C1337235F0F1F8688C88617B9188F0CE07806009FEEFC8BDEA030083C1F
EB11883A15A6A9F1AC2F45EF9DDDA1B77CEDF96CCC07AB18F46D31A7101EA813
9F1D49CCFE3448F1F0> |-
/.notdef <1C60D8A8C9B5EE31F4> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/KKQNPC+Mathematica1 /OHGCAA+Mathematica1 findfont ct_VMDictPut
/KKQNPC+Mathematica1*1 
[32{/.notdef}rp /Equal 94{/.notdef}rp /Delta 128{/.notdef}rp]
KKQNPC+Mathematica1 nf
KKQNPC+Mathematica1*1 [7.5306 0 0 -7.5306 0 0 ]msf
123.813 176.494 mo
(\177)sh
%ADOBeginSubsetFont: AKJBAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNPA+Times-Roman gcheck setglobal} if
1 2720 11 <00020031ffed03ed0576002d003a00db406d9828a928cb28c92ce32cf42c
06006d2e7c2e8b2e9b2eab2bac2eba2bbb2ecd2bcc2ec638dc2bdb2ed538
0e032b4c290223080bda04500a1c0b90111e2017501d1c1e92213231302f
0417042227322f23170305343a04122d110134332d073a3e2727210b2204
2f122740170117b80200b63c37449e2a012ab80201b13c3b2fccf45ded10
f65df4fd3c003f3c10ed3fed3f12393911121739123901111217390010f5
edfc01f50010f5edfc01f53130437940183539282c352c37260039283726
00362b34260138293a2600002b2b012b2b818100715d01715d0017161711
34262322060735373e0137363717070e01150314163332363715060f0127
350607062322023534123312363511342623220615141633022e3d28251b
330c121f522d5a221025060201020220450b160b068b9d0738294960aad3
fdb773608b427e8c959403b1201525013e3d2e020321150c1a0c050e0269
39793bfccf413401022102303b097b3d1a2d0107add90137fca85c2901ad
826bdfa3a1fc>KKQNPA+Times-Roman AddT42Char 
KKQNPA+Times-Roman /CharStrings get begin
/g11 11 def
end
KKQNPA+Times-Roman /Encoding get
dup 100 /g11 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNPA+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 /g4 /g5 /.notdef 
/g7 17{/.notdef}rp /g8 14{/.notdef}rp /g9 13{/.notdef}rp /g11 /g12 
3{/.notdef}rp /g13 4{/.notdef}rp /g14 145{/.notdef}rp]
KKQNPA+Times-Roman nf
KKQNPA+Times-Roman*1 [7.5306 0 0 -7.5306 0 0 ]msf
127.315 176.494 mo
(d)sh
KKQNPA+Times-Roman*1 [5.34673 0 0 -5.34673 0 0 ]msf
130.985 177.705 mo
(3)sh
KKQNPC+Mathematica1*1 [7.5306 0 0 -7.5306 0 0 ]msf
133.854 176.494 mo
( )sh
KKQNPA+Times-Roman*1 [7.5306 0 0 -7.5306 0 0 ]msf
138.877 176.494 mo
(0)sh
grestore
gsave
81.7938 192.99 mo
81.7938 231.36 li
90.4008 231.36 li
90.4008 192.99 li
eclp
0 0 0 .791016 cmyk
KKQNPB+Times-Italic*1 [0 6.9927 6.9927 0 0 0 ]msf
84.5318 193.627 mo
(H)sh
KKQNPB+Times-Italic*1 [0 4.96482 4.96482 0 0 0 ]msf
83.4338 198.86 mo
(T)sh
KKQNPC+Mathematica1*1 [0 6.9927 6.9927 0 0 0 ]msf
84.5318 202.592 mo
( )sh
%ADOBeginSubsetFont: AKJBAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNPA+Times-Roman gcheck setglobal} if
1 1208 6 <00020017000003c7055e0002000d0085401f780301050d06040902030d00
010173120d0d03010d000c03040a000103060dbb01740007000c0197b50a
03050a0c0ab8011e400900a4093004e0040204b80136b720064006a00603
06bb020a000f000c0209b10f0e2fcce410f65df45d3cfde4003f3f10f43c
f53c1139390111123911123939872e2b047d10c5001112390f3130015d09
012113331133152311231121350255fe1501eb425fd1d19ffdc00490fd4a
0384fc7c85feab0155850000>KKQNPA+Times-Roman AddT42Char 
KKQNPA+Times-Roman /CharStrings get begin
/g6 6 def
end
KKQNPA+Times-Roman /Encoding get
dup 52 /g6 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNPA+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 /g4 /g5 /g6 
/g7 17{/.notdef}rp /g8 14{/.notdef}rp /g9 13{/.notdef}rp /g11 /g12 
3{/.notdef}rp /g13 4{/.notdef}rp /g14 145{/.notdef}rp]
KKQNPA+Times-Roman nf
KKQNPA+Times-Roman*1 [0 6.9927 6.9927 0 0 0 ]msf
84.5318 207.257 mo
(400GeV)
[3.49634 3.49634 3.40497 5.05457 3.10577 0 ]ysh
grestore
gsave
187.94 187.252 mo
187.94 196.576 li
206.229 196.576 li
206.229 187.252 li
eclp
.882813 .769531 0 0 cmyk
KKQNPC+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
188.37 193.962 mo
(\177)sh
%ADOBeginSubsetFont: AKJBAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNPA+Times-Roman gcheck setglobal} if
1 2460 10 <00020007ffed03bd057400180025008d402af50c01060c019a0d01230801
da1550001c01902306250723211b06150b0300213e0b071b63110b1e440e
b80202400a272527062f14c0150115b801ffb127262fccf45d3cfde410f6
ed003fed3fed3f123939111239390111123900f5edfc01f5313043794018
1c200c10200c1e26011c101e26011f0d2126011d0f1b2600002b2b012b2b
8181005d01715d13353e0133161511363736333216151400232226351134
2623001633323635342623220615110772b607021a345c7893d0fef2dc6f
d6203a01098a348c877e8d478804f8221a400606fd9f302b4bf8c6d4fed2
582c04213a31fb612dd29595fd5743fe02000000>KKQNPA+Times-Roman AddT42Char 
KKQNPA+Times-Roman /CharStrings get begin
/g10 10 def
end
KKQNPA+Times-Roman /Encoding get
dup 98 /g10 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNPA+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 /g4 /g5 /g6 
/g7 17{/.notdef}rp /g8 14{/.notdef}rp /g9 11{/.notdef}rp /g10 /.notdef 
/g11 /g12 3{/.notdef}rp /g13 4{/.notdef}rp /g14 145{/.notdef}rp]
KKQNPA+Times-Roman nf
KKQNPA+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
192.122 193.962 mo
(b)sh
KKQNPC+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
196.261 193.962 mo
( )sh
KKQNPA+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
201.642 193.962 mo
(0)sh
grestore
gsave
186.864 195.5 mo
186.864 204.824 li
211.249 204.824 li
211.249 195.5 li
eclp
0 0 0 1 cmyk
KKQNPC+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
187.251 202.076 mo
(\177)sh
KKQNPA+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
191.003 202.076 mo
(b)sh
KKQNPC+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
195.142 202.076 mo
( )sh
KKQNPA+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
200.524 202.076 mo
(0.1)sh
grestore
gsave
186.864 203.748 mo
186.864 213.072 li
211.249 213.072 li
211.249 203.748 li
eclp
0 .994141 1 0 cmyk
KKQNPC+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
187.251 210.559 mo
(\177)sh
KKQNPA+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
191.003 210.559 mo
(b)sh
KKQNPC+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
195.142 210.559 mo
( )sh
KKQNPA+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
200.524 210.559 mo
(0.3)sh
grestore
.5379 lw
2 lc
292.716 277.473 mo
301.809 277.473 li
301.809 211.187 li
310.902 211.187 li
310.902 198.258 li
319.995 198.258 li
319.995 225.409 li
329.088 225.409 li
329.088 243.51 li
338.181 243.51 li
338.181 252.858 li
347.274 252.858 li
347.274 263.201 li
356.367 263.201 li
356.367 269.169 li
365.46 269.169 li
365.46 274.489 li
374.553 274.489 li
374.553 278.766 li
383.645 278.766 li
383.645 281.203 li
392.738 281.203 li
392.738 284.882 li
401.831 284.882 li
401.831 287.568 li
410.924 287.568 li
410.924 291.347 li
420.017 291.347 li
420.017 292.342 li
429.11 292.342 li
429.11 293.187 li
438.203 293.187 li
438.203 293.237 li
447.296 293.237 li
447.296 293.436 li
456.388 293.436 li
456.388 293.634 li
465.481 293.634 li
465.481 293.485 li
.882813 .769531 0 0 cmyk
@
292.716 276.335 mo
301.809 276.335 li
301.809 208.889 li
310.902 208.889 li
310.902 196.173 li
319.995 196.173 li
319.995 221.785 li
329.088 221.785 li
329.088 241.286 li
338.181 241.286 li
338.181 254.227 li
347.274 254.227 li
347.274 263.888 li
356.367 263.888 li
356.367 271.707 li
365.46 271.707 li
365.46 276.29 li
374.553 276.29 li
374.553 280.334 li
383.645 280.334 li
383.645 281.951 li
392.738 281.951 li
392.738 285.322 li
401.831 285.322 li
401.831 289.995 li
410.924 289.995 li
410.924 291.253 li
420.017 291.253 li
420.017 292.556 li
429.11 292.556 li
429.11 293.005 li
438.203 293.005 li
438.203 293.275 li
447.296 293.275 li
447.296 293.365 li
456.388 293.365 li
456.388 293.41 li
465.481 293.41 li
465.481 293.634 li
0 0 0 1 cmyk
@
292.716 275.283 mo
301.809 275.283 li
301.809 201.999 li
310.902 201.999 li
310.902 193.523 li
319.995 193.523 li
319.995 218.952 li
329.088 218.952 li
329.088 242.817 li
338.181 242.817 li
338.181 256.643 li
347.274 256.643 li
347.274 264.009 li
356.367 264.009 li
356.367 274.007 li
365.46 274.007 li
365.46 278.122 li
374.553 278.122 li
374.553 280.92 li
383.645 280.92 li
383.645 284.212 li
392.738 284.212 li
392.738 287.298 li
401.831 287.298 li
401.831 289.437 li
410.924 289.437 li
410.924 291.865 li
420.017 291.865 li
420.017 292.729 li
429.11 292.729 li
429.11 292.976 li
438.203 292.976 li
438.203 293.388 li
447.296 293.388 li
447.296 293.552 li
456.388 293.552 li
456.388 293.429 li
465.481 293.429 li
465.481 293.511 li
0 .994141 1 0 cmyk
@
1.79945 lw
329.088 293.634 mo
329.088 189.333 li
0 0 0 .595703 cmyk
@
.10758 lw
469.081 297.095 mo
289.117 297.095 li
1 /0 /CSD get_res sepcs
1 sep
@
289.117 297.095 mo
289.117 185.872 li
@
289.117 185.872 mo
469.081 185.872 li
@
469.081 185.872 mo
469.081 297.095 li
@
0 lc
292.716 297.095 mo
292.716 295.661 li
@
gsave
290.193 298.06 mo
290.193 307.383 li
295.213 307.383 li
295.213 298.06 li
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: MPCCAA+Times-Roman Initial
ct_T42Dict begin
-0.203 -0.426 1.699 1.27
 256 array 0 1 255 {1 index exch /.notdef put} for  /MPCCAA+Times-Roman
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
742000000000000001240000041e6670676d000000000000054400000588
676c7966000000000000128c00000f9468656164d7ea84f200000acc0000
0036686865610000000000000b0400000024686d74780000000000000b28
0000003c6c6f63610000000000000b64000000206d617870000000000000
0b84000000206e616d65549381dd00000ba4000000247072657000000000
00000bc8000006c367646972000000000000000000000000000100000190
000500000000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff000000000000000000000000000100000000000005740002054b001d
054b0018039700130000ffe30000ffed0000ffeafe420000054b001dfebd
ffd6031e000000b4000000b402fe3f3c0026001c007d00980003007d00de
00350017002800e3013e000300b400d000df004c005a00c4004a00ab0147
008a004e0039006d013d002401d200360045009e00be00170079006f00d0
00460091002100b400baffc20017003600ab00b800f60009001d003d0058
005a008c0099ffc400a000e800f5ffa1ffea0033008500b800d5ffe2002f
0080008c0002001a00250045006a0070012d0274ff87003e004e009800ba
00de0116ff3e00150034003c004400670068006d006e0084009800bd00d5
00d7011c0000002d0030003d00460057008b0093009700b000c6011f017b
019d0409ff68ff6a0056005a006a006d009200c400d000e700f1011101bf
01c7ff1cffb4ffff0002002300380042006d0092009c009d00a100a200b4
00ba00c700c700e400ed0153015703230334ff0dff32fffbffff000f001c
0040004b005c006d006d007c0085009800c500cb00cb00df011f01280136
015501700180018a01c7024203130407054eff82000000080026003d003d
004f006e0073008b00900095009e00a800ad00ad00c300d300e301090123
0241028002f40311034004510576ff7fffafffbeffcf00030005000e0039
004b004b004c00740078008800890092009200b600c200d800df00f000fd
010701100117011f01b401dd01eb020002110229028002ca036f038a03af
0400049c04dd053e0587fea6fee4ff67ff95ffcbfff80002000200070025
00280037003700380039003f00510053005900640068006b007d00980099
00af00b100b900d000d500da00dd00fd00fe011e013601370142015a017a
01a301c401cc01f702020210021f022902290287029f029f02c002cc02d5
031a031d03280331035e0396039f03a8049305640571059405b106eb0788
fe63fe64fe76fe7cfebcff4bff97ffacffc0000700210028002d00300048
0049004c0051005400560066007a007c0085008a008c009900af00b300b5
00b500b600b900bb00bc00cc00d000e100f400f600fc00fd010901100117
0118011f01300139013c013e0142014301440149014b014f015401550157
01580161016a017d017e0184019c019c019d01a101a301b401b401b901bb
01cb01d001d701d701e401ec01ec01f7020502070218022302260240024b
024b025702570261026302680269026d028d028d02a602af02b402b80300
033e03460361036103b003c003d503d703df03f9041a0474047b04c104cc
04da04e404f204f6051005300555055606180639067606a406b3076b07ad
07da00b200d500ae00bb00000000000000000000000000630079029602fa
007e0247009100c8000002ca024800da007d01b301a4002d00a5009c0034
003400dc00dc0040004000310031000a000a00820030002a002a00004027
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b09051582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b94000
00000a2d2c00b9000040000b2d2c2045b00043617d6818b0004360442d2c
45b01a234445b01923442d2c2045b00325456164b050515845441b212159
2d2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c20b00325
52582359212d2c69b04061b0008b0c6423648bb8400062600c642364615c
58b0036159b002602d2c45b0112bb0172344b0177ae5182d2c45b0112bb0
1723442d2c45b0112bb017458cb0172344b0177ae5182d2cb00225466165
8a46b040608b482d2cb0022546608a46b040618c482d2c4b53205c58b002
855958b00185592d2c20b0032545b019234445b01a23444565234520b003
25606a20b009234223688a6a606120b0005258b21a401a4523614459b000
5058b219401945236144592d2cb9187e3b210b2d2cb92d412d410b2d2cb9
3b21187e0b2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d
2c4b525845441b2121592d2c0120b003252349b04060b0206320b0005258
23b002253823b002256538008a63381b212121212159012d2c4569b00943
608a103a2d2c01b005251023208af500b0016023edec2d2c01b005251023
208af500b0016123edec2d2c01b0062510f500edec2d2c20b00160011020
3c003c2d2c20b001610110203c003c2db800272c4bb800095058b101018e
59b801ff85b800441db9000900035f5e2db800282c2020456944b001602d
b800292cb800282a212db8002a2c2046b003254652582359208a208a4964
8a204620686164b004254620686164525823658a592f20b00053586920b0
00545821b040591b6920b000545821b0406559593a2db8002b2c2046b004
25465258238a592046206a6164b0042546206a61645258238a592ffd2db8
002c2c4b20b0032650585158b080441bb04044591b21212045b0c05058b0
c0441b2159592db8002d2c2020456944b001602020457d691844b001602d
b8002e2cb8002d2a2db8002f2c4b20b003265358b0801bb040598a8a20b0
032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a23
5920b0032653582321b801408a8a1b8a235920b80003265358b0032545b8
018050582321b8018023211bb003254523212321591b2159442db800302c
4b535845441b2121592db800312c4bb800095058b101018e59b801ff85b8
00441db9000900035f5e2db800322c2020456944b001602db800332cb800
322a212db800342c2046b003254652582359208a208a49648a2046206861
64b004254620686164525823658a592f20b00053586920b000545821b040
591b6920b000545821b0406559593a2db800352c2046b00425465258238a
592046206a6164b0042546206a61645258238a592ffd2db800362c4b20b0
032650585158b080441bb04044591b21212045b0c05058b0c0441b215959
2db800372c2020456944b001602020457d691844b001602db800382cb800
372a2db800392c4b20b003265358b0801bb040598a8a20b0032653582321
b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b0032653
582321b801408a8a1b8a235920b80003265358b0032545b8018050582321
b8018023211bb003254523212321591b2159442db8003a2c4b535845441b
2121592d0001000000000000b1b0afba5f0f3cf50111080000000000a33d
5b0000000000c88fde35fe60fc930d9a0a2c000000090001000000000000
000100000600fe0000000dc5fe60fe600d9a000100000000000000000000
00000000000f05c70021020000dc04000012040000e30400003d04000059
040000170400004105c7003105c700210400000704000031038d00280239
00280400002100000036006000de013c01ca025c02bc036a041804ce0550
061606b6072007ca00010000000f0071000600960009000200100010003b
000007e806c300040001000000010012000100000000000600120000484e
5446414e2b54696d65732d526f6d616eb800312bb800272b400f09cf5401
0f54013fd029019f540140410d01fb0001003001fb0001002001fb000100
1001fb0001000001fb400b01002001900701900601f0414f0204000100ef
0203000100c00201000100b001ff00b0020100bf0208000300af020100af
02080002009f0202009f02080002007f0200007f0202007f0208008f0200
008f020200800205008f02080007006f0200006f0202006f0205006f0208
0004005f020200500203005f02080003004f0202004f0204004f02080003
00300202003f0204003002080003002f0201002f0204002f02080003001f
0208b2010840ba01e5014d0152b50f1fc2710e1fbc014b014d0062001f01
31b2864f1fbe01a60020000d018f0020000d0182400e200dde200dda200d
8f200d7f200dbe018b0050000d016c0050000d0101400e500dd8500d4350
0d3f500d3a500dbb013b0028000d01034014280dbd280db8280da7280d7c
280d76280d2d280dbe01b1004a000d01a7004a000d019440204a0df74a0d
c84a0d984a0d854a0d7a4a0d664a0d214a0d621c0d241c0d1b1c0db8017e
b60f920f900f0009b8017eb4900d92900db801f5b3312f1f41b801f3b533
1f2b2c361fb80189b2542c1fb80183b254ab1f4115018100290401001f01
8000290201001f017c00440201001f017901300201001f01780130040100
1f0177b22f291fb80173b23e9e1fb80171b23ee41fbc016b002e0401001f
016ab233e41fb80138b2545e1f4109013300290401001f01320044080100
1f012db23e931fb8012ab22ccd1f41110127002e0125001f012400330801
001f012300330401001f012200330401001f0106b254261fb80105b4542c
1fff29b80101b21ffe88b80201b61ffb2f521ff62eb80401b21ff52eb808
01b21fe129b802abb21fdd2fb802ab40171fdb2f5e1fd93e4a1fc454261f
c354e41fbf2f6c1fba2cb80401b21fa944bc0401001f00a80130019a400b
1fa52f931fa42f891fa23eb80401b21fa033b80801b21f9654b80801b21f
9529b80401b61f8954261f732eb80156b21f7233b802ab400b1f6b2f6c1f
6a2c4b1f632eb8019a400f1f2e2c371f532fbb1f512f721f4f2cb80401b2
1f4944b80401b21f482fba0401001f01f3400d411d1f412f1d1f3d3ecd1f
3b44b80201b21f392eb8019ab21f343eb80401b21f322eb80201b61f313e
4c1f2b2eb80404b61f2a54311f2233b80201402d1f5567075f0755073707
35073007260725071e071d071408120810080e080c080a08080806080408
0208000814b8ffe0402b0000010014061000000100060400000100041000
0001001002000001000200000001000002010802004a00b801ff85b0018d
16763f183f123e113946443e113946443e113946443e113946443e113946
60443e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b1d
b0964b5358b0aa1d59b0324b5358b0ff1d594bb03553205c58b901e701e5
4544b901e601e545445958b9012101e7455258b901e70121445959184bb0
4c5058b801e64569b801e7456961b0405258b901e601e645b04061445959
4bb05653205c58b9002901e64544b9005401e645445958b9023600294552
58b9002902364459594bb08953205c58b9002f01e74544b9004401e74544
5958b902e4002f455258b9002f02e44459594bb0cd53205c58b188294544
b1292945445958b9052e0088455258b90088052e4459594bb8020153205c
58b90130002f4544b12f2f45445958b90ab00130455258b901300ab04459
594bb01d53205c58b133334544b13e3345445958b13233455258b1333244
59594bb02f53205c58b133334544b12c3345445958b15233455258b13352
4459594bb05b53205c58b133334544b12e3345445958b1a033455258b133
a04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb35b9b81
9c456523456023456560234560b08b766818b080622020b1819b45652345
20b003266062636820b003266165b09b236544b081234420b15b9c456523
4520b003266062636820b003266165b09c236544b05b2344b1009c455458
b19c406544b25b405b4523614459b3868d71454565234560234565602345
60b089766818b080622020b1718d4565234520b003266062636820b00326
6165b08d236544b071234420b186454565234520b003266062636820b003
266165b045236544b0862344b10045455458b145406544b2864086452361
44592b2b2b2b456953427373737373737373737373737373737373737373
7475755e73735e0000>
[3989 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 192 2 <00020012ffed03b10560000e001e00924022ac01eb0ce51403c500d600e5
000331003505390d034c0806a01e050ea0160d028812b80208b3200a881a
b80207b1201f2fccf4ed10f6ed003fed3fed313043794038001d0c261825
142608251c26102504260d170a35000015023501071d0a3500050f023501
0b190e350001130e3500091b06350103110635012b2b2b2b012b2b2b2b2b
2b2b2b2b2b2b8101715d005d241211342702232203061514171633121716
15140702212227261110373633027d6e213eaaaa3f212240b0e37f653e75
fee0c57f885b7bff2501420131f391010efeea94f2e388fe053bf1c3fdc7
b0feb5b3bf01480102bafd00>MPCCAA+Times-Roman AddT42Char 
1 0 0 <0002002100000597054b000300070043b40201490506b80156401c000407
4903000a0504490303021a090607490100190809eb214652182b2b4ef43c
4dfd3c4e10f63c4d10fd3c003f3cfd3c10f43cfd3c313033112111271121
11210576b8fbfa054bfab5b803dbfc250000>MPCCAA+Times-Roman AddT42Char 
MPCCAA+Times-Roman /CharStrings get begin
/g2 2 def
end
MPCCAA+Times-Roman /Encoding get
dup 48 /g2 put
pop
end
%ADOEndSubsetFont
/KKQNPD+Times-Roman /MPCCAA+Times-Roman findfont ct_VMDictPut
/KKQNPD+Times-Roman*1 
[48{/.notdef}rp /g2 207{/.notdef}rp]
KKQNPD+Times-Roman nf
KKQNPD+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
290.744 304.805 mo
(0)sh
grestore
301.809 297.095 mo
301.809 296.235 li
@
310.902 297.095 mo
310.902 296.235 li
@
319.995 297.095 mo
319.995 296.235 li
@
329.088 297.095 mo
329.088 296.235 li
@
338.181 297.095 mo
338.181 295.661 li
@
gsave
331.432 298.06 mo
331.432 307.383 li
344.7 307.383 li
344.7 298.06 li
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: MPCCAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNPD+Times-Roman gcheck setglobal} if
1 1400 7 <00010041ffea037f057f002c00ce4027861b013508141501000229170514
2214150b0c090f171a100f0f73121b1b1a1b1a100f0405292cb80132401e
2509a41b1b021a191aa440152111100402f6250d056b22b6a015b0150215
bb0208002e00290207b12e2d2fcce410f65df4ed003fed3f3c1ac41afd3c
1112397d2f18ec10ed0111121739870e2e2b057d10c50011391112393911
33011239113912173910c9313018437940261c24030820211f211e211d21
04060726081c053501032405350106210935011c1b0423023500002b103c
2b012b2b2b2a8181015d361633323635102526232226273e013713213236
3717070e01232107161716171e011514002322272635343633d2b93273ac
feec9984160b08020302da01ad20231c104e042415fe7d55a44c7d54484a
fec5f1623c642b2db781cb940103723f0309080b0501de161e0eb90905af
1c192a5247b163ddfed8131f501e2d000000>KKQNPD+Times-Roman AddT42Char 
KKQNPD+Times-Roman /CharStrings get begin
/g7 7 def
end
KKQNPD+Times-Roman /Encoding get
dup 53 /g7 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNPD+Times-Roman*1 
[48{/.notdef}rp /g2 4{/.notdef}rp /g7 202{/.notdef}rp]
KKQNPD+Times-Roman nf
KKQNPD+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
332.085 304.805 mo
(500)sh
grestore
347.274 297.095 mo
347.274 296.235 li
@
356.367 297.095 mo
356.367 296.235 li
@
365.46 297.095 mo
365.46 296.235 li
@
374.553 297.095 mo
374.553 296.235 li
@
383.645 297.095 mo
383.645 295.661 li
@
gsave
375.181 298.06 mo
375.181 307.383 li
392.394 307.383 li
392.394 298.06 li
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: MPCCAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNPD+Times-Roman gcheck setglobal} if
1 444 3 <000100e300000325055e0016006f4019761486140226143614020cfd6208
e02203f96207e02314e00db8016eb2136214b8017e40110d0c0302040815
0508070c1817171a0203b80130b50c0c0d191718bc0178002101a5015d00
182b2b4ef43c4d10fd3c4e456544e6003f3c3f1217394df5edfc01f52b2b
313000715d001615111416171521353e0135113426232206073525330262
015270fdcc794a18281a5324016f0c05590509fb4c4d2a041c1e06365a03
9e30321d101cbb00>KKQNPD+Times-Roman AddT42Char 
KKQNPD+Times-Roman /CharStrings get begin
/g3 3 def
end
KKQNPD+Times-Roman /Encoding get
dup 49 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNPD+Times-Roman*1 
[48{/.notdef}rp /g2 /g3 3{/.notdef}rp /g7 202{/.notdef}rp]
KKQNPD+Times-Roman nf
KKQNPD+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
375.577 304.805 mo
(1000)sh
grestore
392.738 297.095 mo
392.738 296.235 li
@
401.831 297.095 mo
401.831 296.235 li
@
410.924 297.095 mo
410.924 296.235 li
@
420.017 297.095 mo
420.017 296.235 li
@
429.11 297.095 mo
429.11 295.661 li
@
gsave
420.365 298.06 mo
420.365 307.383 li
437.578 307.383 li
437.578 298.06 li
eclp
0 0 0 1 cmyk
KKQNPD+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
421.041 304.805 mo
(1500)sh
grestore
438.203 297.095 mo
438.203 296.235 li
@
447.296 297.095 mo
447.296 296.235 li
@
456.388 297.095 mo
456.388 296.235 li
@
465.481 297.095 mo
465.481 296.235 li
@
289.117 293.634 mo
290.552 293.634 li
@
gsave
264.732 289.095 mo
264.732 298.418 li
288.041 298.418 li
288.041 289.095 li
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: MPCCAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNPD+Times-Roman gcheck setglobal} if
1 108 1 <000100dcffe801bf00cb000b00264013052a0b0b0d17171a082a02190c0d
c321788e182b2b4ef44dfd4e456544e6003f4ded31300426353436333216
15140623011e42432f2f42413018432f2f42422f2f430000>KKQNPD+Times-Roman AddT42Char 
KKQNPD+Times-Roman /CharStrings get begin
/g1 1 def
end
KKQNPD+Times-Roman /Encoding get
dup 46 /g1 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNPD+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 3{/.notdef}rp /g7 202{/.notdef}rp]
KKQNPD+Times-Roman nf
KKQNPD+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
265.27 295.607 mo
(0.0000)sh
grestore
289.117 288.894 mo
289.978 288.894 li
@
289.117 284.153 mo
289.978 284.153 li
@
289.117 279.412 mo
289.978 279.412 li
@
289.117 274.67 mo
289.978 274.67 li
@
289.117 269.929 mo
290.552 269.929 li
@
gsave
264.732 265.427 mo
264.732 274.751 li
288.041 274.751 li
288.041 265.427 li
eclp
0 0 0 1 cmyk
KKQNPD+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
265.27 271.902 mo
(0.0005)sh
grestore
289.117 265.188 mo
289.978 265.188 li
@
289.117 260.448 mo
289.978 260.448 li
@
289.117 255.707 mo
289.978 255.707 li
@
289.117 250.966 mo
289.978 250.966 li
@
289.117 246.225 mo
290.552 246.225 li
@
gsave
264.732 241.401 mo
264.732 250.725 li
288.041 250.725 li
288.041 241.401 li
eclp
0 0 0 1 cmyk
KKQNPD+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
265.27 248.197 mo
(0.0010)sh
grestore
289.117 241.483 mo
289.978 241.483 li
@
289.117 236.742 mo
289.978 236.742 li
@
289.117 232.002 mo
289.978 232.002 li
@
289.117 227.261 mo
289.978 227.261 li
@
289.117 222.52 mo
290.552 222.52 li
@
gsave
264.732 217.733 mo
264.732 227.057 li
288.041 227.057 li
288.041 217.733 li
eclp
0 0 0 1 cmyk
KKQNPD+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
265.27 224.492 mo
(0.0015)sh
grestore
289.117 217.779 mo
289.978 217.779 li
@
289.117 213.038 mo
289.978 213.038 li
@
289.117 208.296 mo
289.978 208.296 li
@
289.117 203.555 mo
289.978 203.555 li
@
289.117 198.815 mo
290.552 198.815 li
@
gsave
264.732 194.066 mo
264.732 203.389 li
288.041 203.389 li
288.041 194.066 li
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: MPCCAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNPD+Times-Roman gcheck setglobal} if
1 632 4 <0001003d000003cb0564001b00b8404c2512016c006e016913036402960f
f60ff61404050f0614150f2514042b08142100000118190a0b010b0a0303
001a0318191119180b0a01050614066b0e051514a41a4000211b0c038811
bc19bb0208001d00000207b11d1c2fcce410f6f4ed003f1a3dcc181a3cfd
3c3fed111217390111123912391112173910c910c90705101ac531304379
401c04100825070d0a3500090a0c0b050f033501090c0635010410063501
002b2b012b103c103c2b2b8101715d005d71370801353426232207060727
3e0133321615140201213236371703213d016e0106a06f89552f2b2b32ef
89a9d1e2fe8601cb604e311a6ffce117017c0164a9949b64377209e6b3d5
9aa4fed0fe7b2e590cfee9000000>KKQNPD+Times-Roman AddT42Char 
KKQNPD+Times-Roman /CharStrings get begin
/g4 4 def
end
KKQNPD+Times-Roman /Encoding get
dup 50 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNPD+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 /g4 2{/.notdef}rp /g7 
202{/.notdef}rp]
KKQNPD+Times-Roman nf
KKQNPD+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
265.27 200.787 mo
(0.0020)sh
grestore
289.117 194.074 mo
289.978 194.074 li
@
289.117 189.333 mo
289.978 189.333 li
@
292.716 185.872 mo
292.716 187.306 li
@
301.809 185.872 mo
301.809 186.732 li
@
310.902 185.872 mo
310.902 186.732 li
@
319.995 185.872 mo
319.995 186.732 li
@
329.088 185.872 mo
329.088 186.732 li
@
338.181 185.872 mo
338.181 187.306 li
@
347.274 185.872 mo
347.274 186.732 li
@
356.367 185.872 mo
356.367 186.732 li
@
365.46 185.872 mo
365.46 186.732 li
@
374.553 185.872 mo
374.553 186.732 li
@
383.645 185.872 mo
383.645 187.306 li
@
392.738 185.872 mo
392.738 186.732 li
@
401.831 185.872 mo
401.831 186.732 li
@
410.924 185.872 mo
410.924 186.732 li
@
420.017 185.872 mo
420.017 186.732 li
@
429.11 185.872 mo
429.11 187.306 li
@
438.203 185.872 mo
438.203 186.732 li
@
447.296 185.872 mo
447.296 186.732 li
@
456.388 185.872 mo
456.388 186.732 li
@
465.481 185.872 mo
465.481 186.732 li
@
469.081 293.634 mo
467.646 293.634 li
@
469.081 288.894 mo
468.22 288.894 li
@
469.081 284.153 mo
468.22 284.153 li
@
469.081 279.412 mo
468.22 279.412 li
@
469.081 274.67 mo
468.22 274.67 li
@
469.081 269.929 mo
467.646 269.929 li
@
469.081 265.188 mo
468.22 265.188 li
@
469.081 260.448 mo
468.22 260.448 li
@
469.081 255.707 mo
468.22 255.707 li
@
469.081 250.966 mo
468.22 250.966 li
@
469.081 246.225 mo
467.646 246.225 li
@
469.081 241.483 mo
468.22 241.483 li
@
469.081 236.742 mo
468.22 236.742 li
@
469.081 232.002 mo
468.22 232.002 li
@
469.081 227.261 mo
468.22 227.261 li
@
469.081 222.52 mo
467.646 222.52 li
@
469.081 217.779 mo
468.22 217.779 li
@
469.081 213.038 mo
468.22 213.038 li
@
469.081 208.296 mo
468.22 208.296 li
@
469.081 203.555 mo
468.22 203.555 li
@
469.081 198.815 mo
467.646 198.815 li
@
469.081 194.074 mo
468.22 194.074 li
@
469.081 189.333 mo
468.22 189.333 li
@
gsave
360.479 318.141 mo
397.414 318.141 li
397.414 309.176 li
360.479 309.176 li
cp
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: ZVABAA+Times-Italic Initial
ct_T42Dict begin
-0.293 -0.41 1.66 1.203
 256 array 0 1 255 {1 index exch /.notdef put} for  /ZVABAA+Times-Italic
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
74200000000000000124000005446670676d0000000000000668000007d6
676c79660000000000001660000003b468656164d5f2d98a00000e400000
0036686865610000000000000e7800000024686d74780000000000000e9c
0000000c6c6f63610000000000000ea8000000086d617870000000000000
0eb0000000206e616d65ba9b9ed200000ed0000000287072657000000000
00000ef80000076667646972000000000000000000000000000100000190
000500000000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff0000000000000000000000000001000000000000057400000538001a
05550013036d001a0000ffda0000ffe80000fff1fe5afffe0534002dfeaa
ffe1031c000000a0000000a00000000000000000002100aa009400c20078
007d0021008200b80028002a0046000300a8004d005900e4014000300002
009b0087009400f600180047006b01e0001a00ab006800ce000300250045
0097001600470064007600b800260043008700b500dc0037005b007900b1
00c900d60021002c0052005500c402adffd20031009800d001b70403ff90
001a002e0036006d0084008effac002d003d00470080008601230173ffed
005d005d006d0082009100a200d4ffd2ffda0007000a0028002a003c003d
0051008700b10109011e014001850006000e001000250030005000550056
00a200b401080247ff72ffda0013003400400041004800580068007b008c
009a00b100c300da015e027403adff44ffbdffcf0000002400250026002d
0039004a004f007200740087009700b600b900f90156020eff24ffa1ffb9
ffc7ffef000000020005001d001f0024003d004b0058005d0067008e009a
00b800c900d800da00da00e400e6010c013b014101500185019801c701d3
0245032d038703b20410051ffff8001c00210027002a002a00300037003b
0055005c005f00610072008d00a400ad00b100ea00f60118012401340144
01a1021d02290266026f02c402ef0403048b04e4ffea0000000200020003
0007002e00350039003e004c004c0055006d0077008a008e009000930094
0096009a00a800c000cb00dc00df00ed00f900fc0105010701080128012f
01340149019801d801de020e02160223024202df032b033e036f04d104e4
0545fe8efef2ff58ff59ff71ffbbffc7ffde0007001d001f002d0039005b
005e005f0064006700760079007e008000800080008300830088009f00a6
00a900aa00af00be00c000c800cb00ce00d200dd00df00eb00ec00ed00ed
00f400f800fc00fd0108010c011001100115011c011c0125012d013b013e
0140015001510176017e018001830184018e0198019d01b401bb01ca01d3
02470258025d027d028802bc02d102d302dc02e802ec02f70309031d0321
038703c90447045a04ac050e055f057b058005af0636fdf4fe37fe57fe5e
fe76fecdff07ff0eff2aff76ff7dff9effb8ffb9fff0000000020008000f
00170023002a002b004b004c004e004e00500051005d006200630066006b
0072007800960097009a009b009f00a900ac00ad00b700c300ca00ce00d1
00da00dd00e600ed00f700fb00fd00fe01000104010501190123012a0132
014001470151015401550158015c015e015f016601680171017a017b0180
018b018b018e0191019801a101af01b101c301ea01f401f602000205020c
02110220022c024202470255025502610266026d027b028702920295029a
029f02a602a702b002b402cb02d102ee02fe030b030e0325033703370345
034c034e03610371038e03a303a603ab03cc03d003ed03fc03fd03fd0434
0439044f047b049404c204da04da04f00511052f053805550564056b056e
058a059505ad05b205dd05fb063606b00723075207820788079707ad009e
00c6009900a200000000000000000000000000bd00150000000000000000
000000000000000000000000000000000000000000000000000000000000
0000009b00ae02cd024500e000eb017b0183023800c9003101ae0050045a
00c400e4011c02fa029601ca0079004b006301af001605740002054b001d
054b0018039700130000ffe30000ffed0000ffeafe420000054b001dfebd
ffd6031e0000006affd60580004c008a007b0012005500cd00e80409014e
0028005f0334001f006400820030002a002a002a403231302f2e2d2c2b2a
292827262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c
0b0a090807060504030201002c4523466020b02660b004262348482d2c45
2346236120b02661b004262348482d2c45234660b0206120b04660b00426
2348482d2c4523462361b0206020b02661b02061b004262348482d2c4523
4660b0406120b06660b004262348482d2c4523462361b0406020b02661b0
4061b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a
51582320b08d44235920b0ed51582320b04d44235920b0042651582320b0
0d44235921212d2c20204518684420b001602045b04676688a4560442d2c
01b93dadeeeb0a2d2c00b911163dad0b2d2c2045b00043617d6818b00043
60442d2c45b01a234445b01923442d2c2045b00325456164b05051584544
1b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c
01b00743b006430a2d2c2069b04061b0008b20b12cc08a8cb8100062602b
0c642364615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0
112bb01723442d2c45b0112bb017458cb0172344b0177ae5182d2cb00225
4661658a46b040608b482d2cb0022546608a46b040618c482d2c4b53205c
58b002855958b00185592d2c20b0032545b019234445b01a234445652345
20b00325606a20b009234223688a6a606120b01a8ab000527921b21a1a40
b9ffe0001a45208a54582321b03f1b235961441cb114008a5279b3194020
1945208a54582321b03f1b235961442d2cb9187e3b210b2d2cb92d412d41
0b2d2cb93b21187e0b2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187e
c4e00b2d2c4b525845441b2121592d2c0120b003252349b04060b0206320
b000525823b002253823b002256538008a63381b212121212159012d2c45
69b00943608a103a2d2c01b005251023208af500b0016023edec2d2c01b0
05251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b001
600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00
b0064365b007430b2d2c3eb02a2a2d2c352d2c76b01b23701020b01b4520
b0005058b00161593a2f182d2c21210c6423648bb84000622d2c21b08051
580c6423648bb82000621bb200402f2b59b002602d2c21b0c051580c6423
648bb81555621bb200802f2b59b002602d2c0c6423648bb8400062602321
2d2cb4000100000015b00826b00826b00826b008260f10161345683ab001
162d2cb4000100000015b00826b00826b00826b008260f1016134568653a
b001162db800322c4bb800095058b101018e59b801ff85b800441db90009
00035f5e2db800332c2020456944b001602db800342cb800332a212db800
352c2046b003254652582359208a208a49648a204620686164b004254620
686164525823658a592f20b00053586920b000545821b040591b6920b000
545821b0406559593a2db800362c2046b00425465258238a592046206a61
64b0042546206a61645258238a592ffd2db800372c4b20b0032650585158
b080441bb04044591b21212045b0c05058b0c0441b2159592db800382c20
20456944b001602020457d691844b001602db800392cb800382a2db8003a
2c4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a
235920b0032653582321b801008a8a1b8a235920b0032653582321b80140
8a8a1b8a235920b80003265358b0032545b8018050582321b8018023211b
b003254523212321591b2159442db8003b2c4b535845441b2121592db800
3c2c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db8
003d2c2020456944b001602db8003e2cb8003d2a212db8003f2c2046b003
254652582359208a208a49648a204620686164b004254620686164525823
658a592f20b00053586920b000545821b040591b6920b000545821b04065
59593a2db800402c2046b00425465258238a592046206a6164b004254620
6a61645258238a592ffd2db800412c4b20b0032650585158b080441bb040
44591b21212045b0c05058b0c0441b2159592db800422c2020456944b001
602020457d691844b001602db800432cb800422a2db800442c4b20b00326
5358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b00326
53582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a2359
20b80003265358b0032545b8018050582321b8018023211bb00325452321
2321591b2159442db800452c4b535845441b2121592db800462c4bb80009
5058b101018e59b801ff85b800441db9000900035f5e2db800472c202045
6944b001602db800482cb800472a212db800492c2046b003254652582359
208a208a49648a204620686164b004254620686164525823658a592f20b0
0053586920b000545821b040591b6920b000545821b0406559593a2db800
4a2c2046b00425465258238a592046206a6164b0042546206a6164525823
8a592ffd2db8004b2c4b20b0032650585158b080441bb04044591b212120
45b0c05058b0c0441b2159592db8004c2c2020456944b001602020457d69
1844b001602db8004d2cb8004c2a2db8004e2c4b20b003265358b0801bb0
40598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321b801
008a8a1b8a235920b0032653582321b801408a8a1b8a235920b800032653
58b0032545b8018050582321b8018023211bb003254523212321591b2159
442db8004f2c4b535845441b2121592d00000001000000000000b1b0afba
5f0f3cf50111080000000000a252b00000000000c88fde35fda2fcb30d49
09a4000200090001000000000000000100000600fe0000000ce1fda2fda2
0d4908000225000000000000000000000000000304e3ffee05c7ffee0473
006f00000036015801da0001000000030087000600c00008000200100010
0050000007e807d600040001000000010012000100000000000600130000
4b4e525a50502b54696d65732d4974616c6963000000b800462bb8003c2b
b800322bbc029c010c003c001f0295b250391fb80294402b50391f900690
07029d49ad4902ad72ad8b029d729d8b02ad1fad3a029d1f9d3a02ad20ad
50029d209d5002b80290b33a341f15b8028bb2471f14b8028ab2471f13b8
0289b2471f12b80288b2471f11b80287b2471f10b80286b2471f0fb80285
b2471f0eb80284b2471f0db80283b2471f0cb80282b2471f0bb80281b247
1f0ab80280b2471f09b8027fb2471f08b8027eb2471f07b8027db2471f06
b8027cb2471f05b8027bb2471f04b8027ab2471f03b80279b2471f02b802
78b2471f01b80277b2471f00b80276400f471f0001010100090102000800
08404114023d016e0070000d016a0070000d015b0070000d01530070000d
01140070000d01100070000d0104b4700d6f700d410a01cf0068000d01c7
0068000d01630068000d0113400e680def680de4680dc7680dc5680dbe01
68004d000d011d004d000d010540144d0dcd4d0db04d0d8a4d0d3c4d0d32
4d0d2a4d0d410a01f2004a000d01e4004a000d0121004a000d011e40174a
0df64a0dd54a0dd14a0dad4a0d634a0d344a0d254a0db801d74011850ddd
850da9850d26850d23850d1d850db801aeb40f4b0f0009bb01ae004b000d
01d0b2502c1fbc01c300200101001f01c1b220bb1f411901c0003a040100
1f01be003a0401001f01b9001f0401001f01b600430125001f01af005401
25001f01ab00270801001f0160b250351fb8015eb2503d1fb8015cb2505a
1fb8015ab2505e1fb80159b250621fbc015700500125001f0154b220e41f
4111015200200401001f014e003a0401001f014d008b0201001f014c008b
02ab001f0148b21f671fb80144b243621f4109014100430401001f013e00
540156001f011cb2502c1f410d011500200401001f0111001f0401001f01
0e001f0156001f010db41fcd1fed3ab80156b21fea1fb80125b21fe554b8
0401b21fdf27b802ab400b1fde27e41fcc50931fcb50b80201b21fc254b8
02abb21fbf27b80156b61fae1f9e1fa827b802abb21fa527b80156b21f9d
50b80201b21f9c20b80801b21f9654b802abb21f9528b80401b21f9428b8
019ab61f9227cd1f7e3ab80156400b1f7d1f9e1f7a28cd1f6e43b80125b2
1f6d43b80125b21f6728b80801400b1f6628e41f621f811f5227b80401b2
1f4f20b80125b21f4c54b80156b61f493acd1f4728b802abb21f4627b802
01b61f4520cd1f4228b80801b21f401fb802abb21f3f28b80801b21f3743
b80125b21f3628b80801b21f331fb80401b21f318bb80125b21f2f27b801
56b61f2d50931f2c54b80201b21f2b28b80125400f1f241f721f2143671f
551f091f0990bb018300070090017e403907909f07908007907307906b07
906a07905607904807903807902e07902207901e071408120810080e080c
080a080808060804080208000814b8ffe0402a0000010014061000000100
060400000100041000000100100200000100020000000100000201080200
4a4118028a00080288000802860008028400080282000802800008027e00
08027c0008027a00080278000802760008028affe0b300000100b9028a02
7cb41000000100b9027c027ab300000100b9027a0286b300000100b90286
0278b300000100b902780276b300000100b80276b302010802b80276b24a
0000b801ff85b0018db0068858b001b0018e1bb000b0018e59181616763f
183f123e113946443e113946443e113946443e113946443e11394660443e
11394660442b2b2b2b2b2b2b2b2b2b2b18763f183f123e113946443e1139
46443e113946443e113946443e11394660443e11394660442b2b2b2b2b2b
2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b014b5079bf001f01ee0007
001f01bf0007001f01b1b6071fce071fac072b2b2b2b2b4b5379bf009001
ee0007009001bf0007009001b1b60790ce0790ac072b2b2b2b2b181db096
4b5358b0aa1d59b0324b5358b0ff1d594bb02e53205c58b9023f023d4544
b9023e023d45445958b900de023f455258b9023f00de4459594bb05a5320
5c58b9001f023f4544b9003a023f45445958b901aa001f455258b9001f01
aa4459594bb06353205c58b90020023e4544b90050023e45445958b90277
0020455258b9002002774459594bb0e453205c58b1723a4544b13a3a4544
5958b904bd0072455258b9007204bd4459594bb0e453205c58b18b3a4544
b13a3a45445958b904bd008b455258b9008b04bd4459594bb01b53205c58
b127274544b1432745445958b12227455258b127224459594bb02453205c
58b127274544b1542745445958b12e27455258b1272e4459594bb0375320
5c58b127274544b1282745445958b14727455258b127474459592b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b4569
534216003f3f182b103c012f070cb0062342b00723422b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73737373737373732b2b2b000000>
[949 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 108 1 <0001ffed000006230538003d018440f7a52aa32ba92da631a634a33cba1e
b52cca1ee400e604e613e614e523e524e527e528e531e239130814082248
05481248154822680c662b790c772b96049c0c960d950e9623922b963196
34953ca604aa0ca30da91da623181432313115133334120d120e1d0d1e22
1f1d1e2c312d1d2c403d4604001d3d0c050b1d0c1d151c1d1d2b232a1d2b
3c343b1d3c3431230404333d22151205040c132813331205143231b623c7
23022223232012b734c73402313115123434201204040514135432334633
2b1e1d0d0c023d3c2c2b0831043e2815100031103140315031b031c03106
31463f313e0a05100f0440045004c0040404043e0a3f3e2fcc2b103c012f
5d2b3c2b103c011076dc5d182b3c2b10c0c0003f3c3c3c3f3c3c3c123976
2f183cfd3c870e2e2b7d10c4870e2e185d2b7d10c45d0112393911123939
2b1112173911121739180010ed0110c00010ed0110c00010ed0110c00010
ed0110c00010ed01101ac81a0010ed0110c00010ed0110c00010ed0110c0
073c3c07103c3c3130015d5d2736373637133e0135342627352115060706
070321133e0135342726273521150e010703070e01151416171521353637
3637132103070e0115141617152113481b2a1bfb0e0a455a022f53243e19
6d0247640a0631213e01fb513d1afb130203455afdd051253e1a88fdb876
1302033f52fe052106141e5f038a372d1632270221210714225afe71016b
272e1131150d0221210a2f5efc764e0b140a3a210321210614225b01e4fe
5a4e0b140a3821052100>ZVABAA+Times-Italic AddT42Char 
1 688 2 <0001006f000005070538001c009e401b071c4617560b561788099417a517
c61c08400da5216b0c8b0c020cb80269b40b0b4a120ab8026940344008a5
210909050c0d08090913040005121312054704050a02001a1d1b08131212
2012051320120405041d28051004041d0a1e1d2fcc2b103c012f2b3c2b10
d007052b102b2e2e003ffd3c3f08fd083c11123939392fc4c4c40110d02f
1a3ded1a18f41076d02f18f45d1a3dfd1a183130015d3736373637012206
0727132103273734262b01010607061514161715217b5b253e190129ec98
65235504435a2405557e72fee40a05094a6cfdb0210713215c043947b407
013bfeb205475e5dfc05211a27173c1d03210000>ZVABAA+Times-Italic AddT42Char 
1 0 0 <0002ffed0000062305380003000700424009040745000506450201b8022a
40130303000a0607450100190802034505045909feb9016c00182b10f43c
fd3c4e10f43c4dfd3c003f3c10fd3cfd3c10fd3c31302311211127112111
130636b8fb3a0538fac8b803c8fc38000000>ZVABAA+Times-Italic AddT42Char 
ZVABAA+Times-Italic /CharStrings get begin
/g1 1 def
/g2 2 def
end
ZVABAA+Times-Italic /Encoding get
dup 72 /g1 put
dup 84 /g2 put
pop
end
%ADOEndSubsetFont
/KKQNPE+Times-Italic /ZVABAA+Times-Italic findfont ct_VMDictPut
/KKQNPE+Times-Italic*1 
[72{/.notdef}rp /g1 11{/.notdef}rp /g2 171{/.notdef}rp]
KKQNPE+Times-Italic nf
KKQNPE+Times-Italic*1 [8.0685 0 0 -8.0685 0 0 ]msf
361.169 315.742 mo
(H)sh
KKQNPE+Times-Italic*1 [5.72863 0 0 -5.72863 0 0 ]msf
367.068 317.009 mo
(T)sh
%ADOBeginSubsetFont: MPCCAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNPD+Times-Roman gcheck setglobal} if
1 1748 8 <00020031ffe305a10563002f003000bf401be602012808237a1b1ea72219
211b1d2823051b067e40081b210707b801074031067e4002a1262f252319
03121d1e1e270c2e302f03122e27090761231918292430302b249f23cf23
022f234f23bf230323b80204b3320f542bb80205b132312fccf4ed10f65d
5d3c12392f10fd3c10e4003fed3f3ced12392f3c121739103d1aec181af4
ed01103d1aed1a18f4ed2b2b31304379401c282e0d1129252d2611280f37
000d2e0f3700102a1237000e2c0c37012b2b012b2b2b2b8181005d001633
323637331323262726232200111000333236373e01351134262735211506
07061511140423202726111037362123036de6112c250d2d102f3f4379c2
c5fed5012adb25642d49244371020a4c192afe9fa3fed4cee3b5c7014921
0563422220fe51954980fed5fea9fee5fec20e0f1823220147763a072626
05142064fe6d2478afc10145011ecce10000>KKQNPD+Times-Roman AddT42Char 
1 2096 9 <00010021ffe80592054b001f00fd40436a196a1a02171977198619c71ec7
1fd61ed61ffa13fa140909130914191319142813281406080909070a0b0b
090049000907132d18124712090b1411011e1b1f7c1b40b8ff864031091a
19201819192c1209090b1b1a1a29120909071b1a1907041f0b1813091b18
0b0907051a1f131200021a19090f210121b8020ab39b130113b801b9b39b
090109b8014e400d20501f801f02401f01001f011fb9020900202ff45d5d
5d1a19fd5dfd5d18e65d003f3c3f3c3c3c1217390111123939121739874d
2e2b0e7d10c505872e182b0e7d10c52b1a1810f500fd3c3c3c0111123976
2f180110f501111239762f1887100e3c87100e3c313001715d005d011506
07061514161709013e013534272627352115060706070123012e01273502
424d1c312330014001231314331e4501a3411f2f2efe3b1ffe07404d4a05
4b2601091031195a6afd3703043346163b150c022623091a2776fb800466
8f460523>KKQNPD+Times-Roman AddT42Char 
1 3116 12 <00030028ffe8035e03aa0013001c001d00d9405d69086a0c6f126c157b07
79087a0c7d117f127d147d15fc0ef60f0d550866086011c404c712d404e6
09e20f083d08090a171803090a02090a03061739100301034703061c1c63
1d13079206a2060206410d0b1d18fe02421d10cf0a010ab80202b31f03db
10b80201b11f1e2fccf4ed10f65d1239f4ed2f003fed5d3f3ced11123976
2f5d18fd111239390111123911123910c931304379402a0e1b000515251a
261412171e0016171b00181e011918050e03260016111c1e0119011c1e01
040f062600002b2b2b012b103c2b103c2b2b2b8181005d015d001615211e
0133323637170e0123220235341233060706072126272623370262d4fd85
0abe8269903d2329e1a3bccdeebfac3c200e01a60b1b31732d03aac3b3e8
d46e650c7fd8011cb9c901244965365264315849>KKQNPD+Times-Roman AddT42Char 
1 3436 13 <000200280000020e0574000b0025005d4026230c0f3f0c1c252024232020
18201050171c18921c201f100f041c25089502001c0725240a27b8020040
0a200b9505271f20dd100fb901ff00262ff43cfd3cf4ed10e6003f3c3f3f
4ded1112173910f5edfc01f510f52b103c31301236333216151406232226
35033e013511342726232206073537363736331615111416171521a83c2c
2b3d3d2b2c3c806b38090f300b15322baf451c08023761fe1a05363e3d2c
2b3d3d2bfb110a357501dd411929040e1f0e391d0c0708fd32723a081c00
0000>KKQNPD+Times-Roman AddT42Char 
1 3648 14 <00020021000003e303ae0033003400b74059191a4d1a02960ea60e021a08
1f2110321f332f213f2105253f1c2120220343001c3320241c3a1c202023
2e3a1c3220230c20043a0b1c0c900f2e2d251c1304030733120f293e1727
0f07333221200a34073426252f34041b1cb80200b73612272e2f030304b8
01ffb136352fccf43c10fde410f63c1239fd3c2f003f3f3c3c3c3ff4ed11
3911173910f5edfc01f52b2b2b2b055d043130437940102728181a281826
1e01191a2719291e012b01103c2b8181005d71373e013511342726232206
0735363f0132161d013637363332171615111416171521353e0135113426
2322070607111416171521012547390c133b09130e29995e07035c344e54
44386c3a44fe55493a40563b3d22364045fe4b01dc1c09355c01fb401a26
0202230c321f0a0993562031274cc3fe2d4840011c1c0a3d6601ab567128
1735fdd04831021c03ae>KKQNPD+Times-Roman AddT42Char 
KKQNPD+Times-Roman /CharStrings get begin
/g8 8 def
/g9 9 def
/g12 12 def
/g13 13 def
/g14 14 def
end
KKQNPD+Times-Roman /Encoding get
dup 71 /g8 put
dup 86 /g9 put
dup 101 /g12 put
dup 105 /g13 put
dup 110 /g14 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNPD+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 /g4 2{/.notdef}rp /g7 
17{/.notdef}rp /g8 14{/.notdef}rp /g9 14{/.notdef}rp /g12 3{/.notdef}rp /g13 
4{/.notdef}rp /g14 145{/.notdef}rp]
KKQNPD+Times-Roman nf
KKQNPD+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
373.361 315.742 mo
(inGeV)
[2.24435 6.366 5.83218 3.58365 0 ]xsh
grestore
gsave
368.009 177.57 mo
368.009 185.459 li
389.884 185.459 li
389.884 177.57 li
eclp
0 0 0 1 cmyk
%ADOBeginSubsetFont: BBICAA+Mathematica1 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /BBICAA+Mathematica1 def
/FontInfo 6 dict dup begin
/Notice (Mathematica typeface design by Andre Kuzniarek, with Gregg Snyder and Stephen Wolfram. Copyright \\\(c\\\) 1996-2001 Wolfram Research, Inc. [http://www.wolfram.com]. All rights reserved. [Font version 2.00]) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /Equal put
dup 127 /Delta put
def
/UniqueID 5095641 def
/FontBBox {0 -16 579 682} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-16 -0 444 468 662 677] def
/OtherBlues [-209 -203] def
/BlueScale 0.0416667 def
/StdHW [105.846] def
/StdVW [74.419] def
/StemSnapH [65.543 105.846] def
/StemSnapV [58.407 74.419] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/Equal <1C60D8A8C9B678BD19BF6CFABC23FF7AEEAECC7A009FA979A1EF19ED
0D1F025A329E7E77E19D93F6A5877C> |-
/Delta <1C60D8A8C9B74A3E7F4B7A2810C76C66EE45608F7902E780507D6243
C09B0190B500DF3ED0C70BDF1D905517179531E8F32F4BC3186B33A278AD594F
6FB11C1337235F0F1F8688C88617B9188F0CE07806009FEEFC8BDEA030083C1F
EB11883A15A6A9F1AC2F45EF9DDDA1B77CEDF96CCC07AB18F46D31A7101EA813
9F1D49CCFE3448F1F0> |-
/.notdef <1C60D8A8C9B5EE31F4> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/KKQNPF+Mathematica1 /BBICAA+Mathematica1 findfont ct_VMDictPut
/KKQNPF+Mathematica1*1 
[32{/.notdef}rp /Equal 94{/.notdef}rp /Delta 128{/.notdef}rp]
KKQNPF+Mathematica1 nf
KKQNPF+Mathematica1*1 [7.5306 0 0 -7.5306 0 0 ]msf
368.341 183.666 mo
(\177)sh
%ADOBeginSubsetFont: MPCCAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNPD+Times-Roman gcheck setglobal} if
1 2460 10 <00020007ffed03bd057400180025008d402af50c01060c019a0d01230801
da1550001c01902306250723211b06150b0300213e0b071b63110b1e440e
b80202400a272527062f14c0150115b801ffb127262fccf45d3cfde410f6
ed003fed3fed3f123939111239390111123900f5edfc01f5313043794018
1c200c10200c1e26011c101e26011f0d2126011d0f1b2600002b2b012b2b
8181005d01715d13353e0133161511363736333216151400232226351134
2623001633323635342623220615110772b607021a345c7893d0fef2dc6f
d6203a01098a348c877e8d478804f8221a400606fd9f302b4bf8c6d4fed2
582c04213a31fb612dd29595fd5743fe02000000>KKQNPD+Times-Roman AddT42Char 
KKQNPD+Times-Roman /CharStrings get begin
/g10 10 def
end
KKQNPD+Times-Roman /Encoding get
dup 98 /g10 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNPD+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 /g4 2{/.notdef}rp /g7 
17{/.notdef}rp /g8 14{/.notdef}rp /g9 11{/.notdef}rp /g10 2{/.notdef}rp /g12 
3{/.notdef}rp /g13 4{/.notdef}rp /g14 145{/.notdef}rp]
KKQNPD+Times-Roman nf
KKQNPD+Times-Roman*1 [7.5306 0 0 -7.5306 0 0 ]msf
371.843 183.666 mo
(b)sh
KKQNPF+Mathematica1*1 [7.5306 0 0 -7.5306 0 0 ]msf
375.51 183.666 mo
( )sh
KKQNPD+Times-Roman*1 [7.5306 0 0 -7.5306 0 0 ]msf
380.533 183.666 mo
(0.1)sh
grestore
gsave
329.998 193.707 mo
329.998 232.077 li
338.604 232.077 li
338.604 193.707 li
eclp
0 0 0 .791016 cmyk
KKQNPE+Times-Italic*1 [0 6.9927 6.9927 0 0 0 ]msf
332.802 194.39 mo
(H)sh
KKQNPE+Times-Italic*1 [0 4.96482 4.96482 0 0 0 ]msf
331.704 199.623 mo
(T)sh
KKQNPF+Mathematica1*1 [0 6.9927 6.9927 0 0 0 ]msf
332.802 203.355 mo
( )sh
%ADOBeginSubsetFont: MPCCAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNPD+Times-Roman gcheck setglobal} if
1 1208 6 <00020017000003c7055e0002000d0085401f780301050d06040902030d00
010173120d0d03010d000c03040a000103060dbb01740007000c0197b50a
03050a0c0ab8011e400900a4093004e0040204b80136b720064006a00603
06bb020a000f000c0209b10f0e2fcce410f65df45d3cfde4003f3f10f43c
f53c1139390111123911123939872e2b047d10c5001112390f3130015d09
012113331133152311231121350255fe1501eb425fd1d19ffdc00490fd4a
0384fc7c85feab0155850000>KKQNPD+Times-Roman AddT42Char 
KKQNPD+Times-Roman /CharStrings get begin
/g6 6 def
end
KKQNPD+Times-Roman /Encoding get
dup 52 /g6 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNPD+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 /g4 /.notdef /g6 
/g7 17{/.notdef}rp /g8 14{/.notdef}rp /g9 11{/.notdef}rp /g10 2{/.notdef}rp 
/g12 3{/.notdef}rp /g13 4{/.notdef}rp /g14 145{/.notdef}rp]
KKQNPD+Times-Roman nf
KKQNPD+Times-Roman*1 [0 6.9927 6.9927 0 0 0 ]msf
332.802 208.019 mo
(400GeV)
[3.49634 3.49634 3.40613 5.05457 3.10577 0 ]ysh
grestore
gsave
422.875 194.066 mo
422.875 203.389 li
455.508 203.389 li
455.508 194.066 li
eclp
.882813 .769531 0 0 cmyk
%ADOBeginSubsetFont: BBICAA+Mathematica1 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
systemdict begin
KKQNPF+Mathematica1 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/Minus <1C60D8A8C9B679732A785EF52339D83AC731F233DBBD9E391A9B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
KKQNPF+Mathematica1 /Encoding get
dup 33 /Minus put
pop
%ADOEndSubsetFont
/KKQNPF+Mathematica1*1 
[32{/.notdef}rp /Equal /Minus 93{/.notdef}rp /Delta 128{/.notdef}rp]
KKQNPF+Mathematica1 nf
KKQNPF+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
423.334 200.787 mo
(\177)sh
%ADOBeginSubsetFont: MPCCAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KKQNPD+Times-Roman gcheck setglobal} if
1 916 5 <00010059fff10376056a002f0095403c49195b070207241624290739074b
076a076a0879077b08a919c6240b172118181700032c0122100d18170213
0c02f52940220d21c0090109092f1313b80173400f1b052f88290d106b1e
056ba0260126bd02000031000d0136002c0209b131302fccf4e410f65de5
d4ed003fed3fed1112392f5d3d1add7dcc181a10fd111217390111123939
121739101a18c93130015d005d36163332363534272623220607273e0135
34262322070607273e013332161514070607161716151400212226353436
33d6b53f8c88375ddd0d181002a0b8915d6e542e351f28da8f99a7452752
603a6dfed5feec7b632125ae72bd6f6b518901021a3a967b6d72512c5c07
98b6a86e61512e39293769a1befede492a1a30000000>KKQNPD+Times-Roman AddT42Char 
1 2720 11 <00020031ffed03ed0576002d003a00db406d9828a928cb28c92ce32cf42c
06006d2e7c2e8b2e9b2eab2bac2eba2bbb2ecd2bcc2ec638dc2bdb2ed538
0e032b4c290223080bda04500a1c0b90111e2017501d1c1e92213231302f
0417042227322f23170305343a04122d110134332d073a3e2727210b2204
2f122740170117b80200b63c37449e2a012ab80201b13c3b2fccf45ded10
f65df4fd3c003f3c10ed3fed3f12393911121739123901111217390010f5
edfc01f50010f5edfc01f53130437940183539282c352c37260039283726
00362b34260138293a2600002b2b012b2b818100715d01715d0017161711
34262322060735373e0137363717070e01150314163332363715060f0127
350607062322023534123312363511342623220615141633022e3d28251b
330c121f522d5a221025060201020220450b160b068b9d0738294960aad3
fdb773608b427e8c959403b1201525013e3d2e020321150c1a0c050e0269
39793bfccf413401022102303b097b3d1a2d0107add90137fca85c2901ad
826bdfa3a1fc>KKQNPD+Times-Roman AddT42Char 
KKQNPD+Times-Roman /CharStrings get begin
/g5 5 def
/g11 11 def
end
KKQNPD+Times-Roman /Encoding get
dup 51 /g5 put
dup 100 /g11 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/KKQNPD+Times-Roman*1 
[46{/.notdef}rp /g1 /.notdef /g2 /g3 /g4 /g5 /g6 
/g7 17{/.notdef}rp /g8 14{/.notdef}rp /g9 11{/.notdef}rp /g10 /.notdef 
/g11 /g12 3{/.notdef}rp /g13 4{/.notdef}rp /g14 145{/.notdef}rp]
KKQNPD+Times-Roman nf
KKQNPD+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
427.085 200.787 mo
(d)sh
KKQNPD+Times-Roman*1 [5.72863 0 0 -5.72863 0 0 ]msf
431.223 202.076 mo
(3)sh
KKQNPF+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
434.45 200.787 mo
( !)
[5.38205 0 ]xsh
KKQNPD+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
444.851 200.787 mo
(0.3)sh
grestore
gsave
422.875 201.238 mo
422.875 210.561 li
444.391 210.561 li
444.391 201.238 li
eclp
0 0 0 1 cmyk
KKQNPF+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
423.436 207.898 mo
(\177)sh
KKQNPD+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
427.188 207.898 mo
(d)sh
KKQNPD+Times-Roman*1 [5.72863 0 0 -5.72863 0 0 ]msf
431.324 209.187 mo
(3)sh
KKQNPF+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
434.553 207.898 mo
( )sh
KKQNPD+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
439.933 207.898 mo
(0)sh
grestore
gsave
422.158 208.41 mo
422.158 217.733 li
449.77 217.733 li
449.77 208.41 li
eclp
0 .994141 1 0 cmyk
KKQNPF+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
422.661 215.01 mo
(\177)sh
KKQNPD+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
426.413 215.01 mo
(d)sh
KKQNPD+Times-Roman*1 [5.72863 0 0 -5.72863 0 0 ]msf
430.549 216.299 mo
(3)sh
KKQNPF+Mathematica1*1 [8.0685 0 0 -8.0685 0 0 ]msf
433.778 215.01 mo
( )sh
KKQNPD+Times-Roman*1 [8.0685 0 0 -8.0685 0 0 ]msf
439.16 215.01 mo
(0.3)sh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/KKQNOV+Times-Italic*1 uf
/KKQNOV+Times-Italic uf
/VSTBAA+Times-Italic uf
/KKQNPF+Mathematica1*1 uf
/KKQNPF+Mathematica1 uf
/BBICAA+Mathematica1 uf
/KKQNPE+Times-Italic*1 uf
/KKQNPE+Times-Italic uf
/ZVABAA+Times-Italic uf
/KKQNOX+Times-Roman*1 uf
/KKQNOX+Times-Roman uf
/UPFCAA+Times-Roman uf
/KKQNPC+Mathematica1*1 uf
/KKQNPC+Mathematica1 uf
/OHGCAA+Mathematica1 uf
/KKQNPD+Times-Roman*1 uf
/KKQNPD+Times-Roman uf
/MPCCAA+Times-Roman uf
/KKQNOW+Mathematica1*1 uf
/KKQNOW+Mathematica1 uf
/EUBBAA+Mathematica1 uf
/KKQNOY+Times-Italic*1 uf
/KKQNOY+Times-Italic uf
/VTUBAA+Times-Italic uf
/KKQNOU+Times-Roman*1 uf
/KKQNOU+Times-Roman uf
/DMSAAA+Times-Roman uf
/KKQNPA+Times-Roman*1 uf
/KKQNPA+Times-Roman uf
/AKJBAA+Times-Roman uf
/KKQNPB+Times-Italic*1 uf
/KKQNPB+Times-Italic uf
/SVJCAA+Times-Italic uf
/KKQNOZ+Mathematica1*1 uf
/KKQNOZ+Mathematica1 uf
/IRPBAA+Mathematica1 uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
